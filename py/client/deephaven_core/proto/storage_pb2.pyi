"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright (c) 2016-2022 Deephaven Data Labs and Patent Pending
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ItemType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ItemTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ItemType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _ItemType.ValueType  # 0
    """Should not be used, exists only to indicate that this was left unset"""
    DIRECTORY: _ItemType.ValueType  # 1
    FILE: _ItemType.ValueType  # 2

class ItemType(_ItemType, metaclass=_ItemTypeEnumTypeWrapper): ...

UNKNOWN: ItemType.ValueType  # 0
"""Should not be used, exists only to indicate that this was left unset"""
DIRECTORY: ItemType.ValueType  # 1
FILE: ItemType.ValueType  # 2
global___ItemType = ItemType

@typing.final
class ListItemsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    FILTER_GLOB_FIELD_NUMBER: builtins.int
    path: builtins.str
    """The path to the directory to list. empty to list top level"""
    filter_glob: builtins.str
    """A pattern to filter for, with "?" to match any one character, "*" to match any number of characters, and "{}"s
    to hold a comma-separated list of possible matches. The format follows Java's FileSystem.getPathMatcher (see
    https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getPathMatcher-java.lang.String-),
    except without allowing subdirectories with / or **.
    """
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        filter_glob: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_filter_glob", b"_filter_glob", "filter_glob", b"filter_glob"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_filter_glob", b"_filter_glob", "filter_glob", b"filter_glob", "path", b"path"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_filter_glob", b"_filter_glob"]) -> typing.Literal["filter_glob"] | None: ...

global___ListItemsRequest = ListItemsRequest

@typing.final
class ItemInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    path: builtins.str
    """The path to the item that this message describes."""
    type: global___ItemType.ValueType
    """The type of this item, either file or directory."""
    size: builtins.int
    """If this message represents a file, this is the size of the file."""
    etag: builtins.str
    """Opaque string value representing a hash of the contents of this file, if available."""
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        type: global___ItemType.ValueType = ...,
        size: builtins.int = ...,
        etag: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag", "path", b"path", "size", b"size", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_etag", b"_etag"]) -> typing.Literal["etag"] | None: ...

global___ItemInfo = ItemInfo

@typing.final
class ListItemsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    CANONICAL_PATH_FIELD_NUMBER: builtins.int
    canonical_path: builtins.str
    """The canonical path of the listed directory. This is useful to recognize the basename
    of the items in a cross-platform way.
    """
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ItemInfo]:
        """List of items found in the specified directory."""

    def __init__(
        self,
        *,
        items: collections.abc.Iterable[global___ItemInfo] | None = ...,
        canonical_path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["canonical_path", b"canonical_path", "items", b"items"]) -> None: ...

global___ListItemsResponse = ListItemsResponse

@typing.final
class FetchFileRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    path: builtins.str
    """The path to the file to read"""
    etag: builtins.str
    """If present, tells the server to not send a result if the etag matches the current file's content."""
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        etag: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag", "path", b"path"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_etag", b"_etag"]) -> typing.Literal["etag"] | None: ...

global___FetchFileRequest = FetchFileRequest

@typing.final
class FetchFileResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONTENTS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    contents: builtins.bytes
    """Contains the contents of the file, unless the returned etag matches the requested etag."""
    etag: builtins.str
    """Represents the current etag of the requested file. If an etag was in the request and this matches,
    contents should be ignored, and the existing client copy of the file is already correct. In all
    other cases, this etag can be used in future requests to see if the file's contents are different.
    """
    def __init__(
        self,
        *,
        contents: builtins.bytes = ...,
        etag: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_etag", b"_etag", "contents", b"contents", "etag", b"etag"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_etag", b"_etag"]) -> typing.Literal["etag"] | None: ...

global___FetchFileResponse = FetchFileResponse

@typing.final
class SaveFileRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOW_OVERWRITE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CONTENTS_FIELD_NUMBER: builtins.int
    allow_overwrite: builtins.bool
    """True to permit replacing an existing file, false to require that no file already exists with that name."""
    path: builtins.str
    """The path to the file to write contents to"""
    contents: builtins.bytes
    """The contents to use when creating then file, or to use to replace the file."""
    def __init__(
        self,
        *,
        allow_overwrite: builtins.bool = ...,
        path: builtins.str = ...,
        contents: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["allow_overwrite", b"allow_overwrite", "contents", b"contents", "path", b"path"]) -> None: ...

global___SaveFileRequest = SaveFileRequest

@typing.final
class SaveFileResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ETAG_FIELD_NUMBER: builtins.int
    etag: builtins.str
    """Represents the etag of the saved contents, so the client can check for external changes."""
    def __init__(
        self,
        *,
        etag: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_etag", b"_etag", "etag", b"etag"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_etag", b"_etag"]) -> typing.Literal["etag"] | None: ...

global___SaveFileResponse = SaveFileResponse

@typing.final
class MoveItemRequest(google.protobuf.message.Message):
    """Requests to move a file to a new path, which may be in a different directory. Presently it is not
    permitted to overwrite an existing file in this way.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OLD_PATH_FIELD_NUMBER: builtins.int
    NEW_PATH_FIELD_NUMBER: builtins.int
    ALLOW_OVERWRITE_FIELD_NUMBER: builtins.int
    old_path: builtins.str
    """The path where the file currently exists"""
    new_path: builtins.str
    """The path where the file should be moved to"""
    allow_overwrite: builtins.bool
    """True to permit replacing an existing file, false to require that no file already exists with that name."""
    def __init__(
        self,
        *,
        old_path: builtins.str = ...,
        new_path: builtins.str = ...,
        allow_overwrite: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["allow_overwrite", b"allow_overwrite", "new_path", b"new_path", "old_path", b"old_path"]) -> None: ...

global___MoveItemRequest = MoveItemRequest

@typing.final
class MoveItemResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MoveItemResponse = MoveItemResponse

@typing.final
class CreateDirectoryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    path: builtins.str
    """The path to the directory to create"""
    def __init__(
        self,
        *,
        path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["path", b"path"]) -> None: ...

global___CreateDirectoryRequest = CreateDirectoryRequest

@typing.final
class CreateDirectoryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___CreateDirectoryResponse = CreateDirectoryResponse

@typing.final
class DeleteItemRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    path: builtins.str
    """The path to the item to delete."""
    def __init__(
        self,
        *,
        path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["path", b"path"]) -> None: ...

global___DeleteItemRequest = DeleteItemRequest

@typing.final
class DeleteItemResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteItemResponse = DeleteItemResponse
