"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright (c) 2016-2022 Deephaven Data Labs and Patent Pending
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Ticket(google.protobuf.message.Message):
    """
    This file only contains arrow's Ticket type, so that we don't need to
    regenerate the entire flight.proto for other languages, since arrow
    doesn't make these types available for all languages. Ticket's
    definition must be updated to match if there is a change in arrow, so
    that we can remain compatible.


    An opaque identifier that the service can use to retrieve a particular
    portion of a stream.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKET_FIELD_NUMBER: builtins.int
    ticket: builtins.bytes
    def __init__(
        self,
        *,
        ticket: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ticket", b"ticket"]) -> None: ...

global___Ticket = Ticket

@typing.final
class TypedTicket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKET_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: builtins.str
    """
    The type. An empty string means that it is not known, not that the server chose to not set it.
    """
    @property
    def ticket(self) -> global___Ticket: ...
    def __init__(
        self,
        *,
        ticket: global___Ticket | None = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["ticket", b"ticket"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing.Literal["ticket", b"ticket", "type", b"type"]
    ) -> None: ...

global___TypedTicket = TypedTicket
