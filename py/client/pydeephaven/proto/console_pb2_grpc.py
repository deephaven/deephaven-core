# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from pydeephaven.proto import console_pb2 as deephaven_dot_proto_dot_console__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in deephaven/proto/console_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class ConsoleServiceStub(object):
    """
    Console interaction service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConsoleTypes = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/GetConsoleTypes',
                request_serializer=deephaven_dot_proto_dot_console__pb2.GetConsoleTypesRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.GetConsoleTypesResponse.FromString,
                _registered_method=True)
        self.StartConsole = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/StartConsole',
                request_serializer=deephaven_dot_proto_dot_console__pb2.StartConsoleRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.StartConsoleResponse.FromString,
                _registered_method=True)
        self.GetHeapInfo = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/GetHeapInfo',
                request_serializer=deephaven_dot_proto_dot_console__pb2.GetHeapInfoRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.GetHeapInfoResponse.FromString,
                _registered_method=True)
        self.SubscribeToLogs = channel.unary_stream(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/SubscribeToLogs',
                request_serializer=deephaven_dot_proto_dot_console__pb2.LogSubscriptionRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.LogSubscriptionData.FromString,
                _registered_method=True)
        self.ExecuteCommand = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/ExecuteCommand',
                request_serializer=deephaven_dot_proto_dot_console__pb2.ExecuteCommandRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.ExecuteCommandResponse.FromString,
                _registered_method=True)
        self.CancelCommand = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/CancelCommand',
                request_serializer=deephaven_dot_proto_dot_console__pb2.CancelCommandRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.CancelCommandResponse.FromString,
                _registered_method=True)
        self.BindTableToVariable = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/BindTableToVariable',
                request_serializer=deephaven_dot_proto_dot_console__pb2.BindTableToVariableRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.BindTableToVariableResponse.FromString,
                _registered_method=True)
        self.AutoCompleteStream = channel.stream_stream(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/AutoCompleteStream',
                request_serializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteResponse.FromString,
                _registered_method=True)
        self.CancelAutoComplete = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/CancelAutoComplete',
                request_serializer=deephaven_dot_proto_dot_console__pb2.CancelAutoCompleteRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.CancelAutoCompleteResponse.FromString,
                _registered_method=True)
        self.OpenAutoCompleteStream = channel.unary_stream(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/OpenAutoCompleteStream',
                request_serializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteResponse.FromString,
                _registered_method=True)
        self.NextAutoCompleteStream = channel.unary_unary(
                '/io.deephaven.proto.backplane.script.grpc.ConsoleService/NextAutoCompleteStream',
                request_serializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.SerializeToString,
                response_deserializer=deephaven_dot_proto_dot_console__pb2.BrowserNextResponse.FromString,
                _registered_method=True)


class ConsoleServiceServicer(object):
    """
    Console interaction service
    """

    def GetConsoleTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartConsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHeapInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeToLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindTableToVariable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AutoCompleteStream(self, request_iterator, context):
        """
        Starts a stream for autocomplete on the current session. More than one console,
        more than one document can be edited at a time using this, and they can separately
        be closed as well. A given document should only be edited within one stream at a
        time.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAutoComplete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenAutoCompleteStream(self, request, context):
        """
        Half of the browser-based (browser's can't do bidirectional streams without websockets)
        implementation for AutoCompleteStream.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextAutoCompleteStream(self, request, context):
        """
        Other half of the browser-based implementation for AutoCompleteStream.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConsoleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConsoleTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsoleTypes,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.GetConsoleTypesRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.GetConsoleTypesResponse.SerializeToString,
            ),
            'StartConsole': grpc.unary_unary_rpc_method_handler(
                    servicer.StartConsole,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.StartConsoleRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.StartConsoleResponse.SerializeToString,
            ),
            'GetHeapInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHeapInfo,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.GetHeapInfoRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.GetHeapInfoResponse.SerializeToString,
            ),
            'SubscribeToLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeToLogs,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.LogSubscriptionRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.LogSubscriptionData.SerializeToString,
            ),
            'ExecuteCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteCommand,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.ExecuteCommandRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.ExecuteCommandResponse.SerializeToString,
            ),
            'CancelCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCommand,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.CancelCommandRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.CancelCommandResponse.SerializeToString,
            ),
            'BindTableToVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.BindTableToVariable,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.BindTableToVariableRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.BindTableToVariableResponse.SerializeToString,
            ),
            'AutoCompleteStream': grpc.stream_stream_rpc_method_handler(
                    servicer.AutoCompleteStream,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteResponse.SerializeToString,
            ),
            'CancelAutoComplete': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAutoComplete,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.CancelAutoCompleteRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.CancelAutoCompleteResponse.SerializeToString,
            ),
            'OpenAutoCompleteStream': grpc.unary_stream_rpc_method_handler(
                    servicer.OpenAutoCompleteStream,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteResponse.SerializeToString,
            ),
            'NextAutoCompleteStream': grpc.unary_unary_rpc_method_handler(
                    servicer.NextAutoCompleteStream,
                    request_deserializer=deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.FromString,
                    response_serializer=deephaven_dot_proto_dot_console__pb2.BrowserNextResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.deephaven.proto.backplane.script.grpc.ConsoleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConsoleService(object):
    """
    Console interaction service
    """

    @staticmethod
    def GetConsoleTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/GetConsoleTypes',
            deephaven_dot_proto_dot_console__pb2.GetConsoleTypesRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.GetConsoleTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartConsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/StartConsole',
            deephaven_dot_proto_dot_console__pb2.StartConsoleRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.StartConsoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHeapInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/GetHeapInfo',
            deephaven_dot_proto_dot_console__pb2.GetHeapInfoRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.GetHeapInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeToLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/SubscribeToLogs',
            deephaven_dot_proto_dot_console__pb2.LogSubscriptionRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.LogSubscriptionData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/ExecuteCommand',
            deephaven_dot_proto_dot_console__pb2.ExecuteCommandRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.ExecuteCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/CancelCommand',
            deephaven_dot_proto_dot_console__pb2.CancelCommandRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.CancelCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BindTableToVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/BindTableToVariable',
            deephaven_dot_proto_dot_console__pb2.BindTableToVariableRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.BindTableToVariableResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AutoCompleteStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/AutoCompleteStream',
            deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.AutoCompleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelAutoComplete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/CancelAutoComplete',
            deephaven_dot_proto_dot_console__pb2.CancelAutoCompleteRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.CancelAutoCompleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OpenAutoCompleteStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/OpenAutoCompleteStream',
            deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.AutoCompleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NextAutoCompleteStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.deephaven.proto.backplane.script.grpc.ConsoleService/NextAutoCompleteStream',
            deephaven_dot_proto_dot_console__pb2.AutoCompleteRequest.SerializeToString,
            deephaven_dot_proto_dot_console__pb2.BrowserNextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
