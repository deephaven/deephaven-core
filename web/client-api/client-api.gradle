import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerRemoveContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import io.deephaven.tools.docker.WaitForHealthyContainer

plugins {
    id 'io.deephaven.project.register'
    id 'io.deephaven.deephaven-in-docker'
}

apply from: "$rootDir/gradle/web-client.gradle"

configurations {
    js
    testImplementation.extendsFrom junit
}

dependencies {
    implementation project(':web-shared-beans')
    implementation project(':web-client-backplane')

    implementation 'com.vertispan.tsdefs:jsinterop-ts-defs-annotations:1.0.0-RC2'
    annotationProcessor 'com.vertispan.tsdefs:jsinterop-ts-defs-processor:1.0.0-RC2'

    implementation 'com.vertispan.nio:gwt-nio:1.0-alpha-1'

    js project(path: ':proto:raw-js-openapi', configuration: 'js')

    testImplementation 'org.seleniumhq.selenium:selenium-remote-driver:4.16.1'
}
Classpaths.inheritElemental(project, 'elemental2-core', 'implementation')
Classpaths.inheritElemental(project, 'elemental2-promise', 'implementation')
Classpaths.inheritElemental(project, 'elemental2-dom', 'implementation')

GwtTools.gwtCompile project, 'io.deephaven.web.DeephavenApi', 'Create a jar of client JS API'

def jsOutput = layout.buildDirectory.dir('js')
def gwtOutput = tasks.register('gwtOutput', Sync) {
    includeEmptyDirs = false
    from(tasks.getByName('gwtCompile').outputs.files) {
        // only copy the dhapi module, and don't give it a wrapper directory
        include 'dhapi/**'
        eachFile { it.path = 'jsapi/' + it.path.substring('dhapi/'.length()) }
    }
    into jsOutput
}

artifacts {
    js(jsOutput) {
        builtBy gwtOutput
    }
}

def gwtUnitTest = tasks.register('gwtUnitTest', Test) { t ->
    t.systemProperties = [
            'gwt.args': "-runStyle HtmlUnit -ea -style PRETTY -war ${layout.buildDirectory.dir('unitTest-war').get().asFile.absolutePath}",
            'gwt.persistentunitcachedir':layout.buildDirectory.dir('unitTest-unitCache').get().asFile.absolutePath,
    ]
    t.include '**/ClientUnitTestSuite.class'
    t.useJUnit()
    t.scanForTestClasses = false
}

// start a grpc-api server
String randomSuffix = UUID.randomUUID().toString();
deephavenDocker {
    envVars.set([
            'START_OPTS':'-Xmx512m -DAuthHandlers=io.deephaven.auth.AnonymousAuthenticationHandler'
    ])
    containerName.set "dh-server-for-js-${randomSuffix}"
    networkName.set "js-test-network-${randomSuffix}"
}

def seleniumContainerId = "selenium-${randomSuffix}"

def createSelenium = tasks.register('createSelenium', DockerCreateContainer) { t ->
    t.containerName.set(seleniumContainerId)
    t.targetImageId('selenium/standalone-firefox:4.16.1-20231219')// TODO create a registry entry for this
    t.hostConfig.shmSize.set(2L * 1024 * 1024 * 1024)
    t.hostConfig.portBindings.set(['4444:4444', '7900:7900'])//TODO don't expose 7900, and make 4444 dynamic
    t.hostConfig.network.set('host')
}
def startSelenium = tasks.register('startSelenium', DockerStartContainer) {t ->
    t.dependsOn(createSelenium)
    t.containerId.set(seleniumContainerId)
}
def seleniumHealthy = project.tasks.register('seleniumHealthy', WaitForHealthyContainer) { task ->
    task.dependsOn startSelenium

    task.awaitStatusTimeout.set 120
    task.checkInterval.set 100

    task.containerId.set(seleniumContainerId)
}
def stopSelenium = project.tasks.register('stopSelenium', DockerRemoveContainer) { task ->
    task.dependsOn startSelenium
    task.targetContainerId seleniumContainerId
    task.force.set true
    task.removeVolumes.set true
}
// before/after:
// docker run -d -p 4444:4444 -p 7900:7900 --shm-size="2g" --net=host selenium/standalone-firefox:4.16.1-20231219

def gwtIntegrationTest = tasks.register('gwtIntegrationTest', Test) { t ->
    t.dependsOn(deephavenDocker.portTask, seleniumHealthy)
    t.finalizedBy(deephavenDocker.endTask, stopSelenium)
    doFirst {
        def webdriverUrl = 'http://localhost:4444/'
        t.systemProperty('gwt.args', "-runStyle io.deephaven.web.junit.RunStyleRemoteWebDriver:${webdriverUrl}?firefox -ea -style PRETTY -setProperty dh.server=http://localhost:${deephavenDocker.port.get()} -war ${layout.buildDirectory.dir('unitTest-war').get().asFile.absolutePath}")
        t.classpath += tasks.getByName('gwtCompile').src
    }
    t.finalizedBy(deephavenDocker.endTask)
    t.systemProperties = [
            'gwt.persistentunitcachedir':layout.buildDirectory.dir('integrationTest-unitCache').get().asFile.absolutePath,
    ]
    t.include '**/ClientIntegrationTestSuite.class'
    t.useJUnit()
    t.scanForTestClasses = false
}

tasks.named('check').configure {
    dependsOn(gwtUnitTest, gwtIntegrationTest)
}

test {
    // Configure jvm-only tests to not run any GWT-only tests
    exclude '**/*TestGwt.class', '**/*TestSuite.class'
}
