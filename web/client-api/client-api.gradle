plugins {
    id 'io.deephaven.project.register'
    id 'io.deephaven.deephaven-in-docker'
}

apply from: "$rootDir/gradle/web-client.gradle"

configurations {
    js
}

dependencies {
    implementation project(':web-shared-beans')
    implementation project(':web-client-backplane')

    implementation 'com.vertispan.tsdefs:jsinterop-ts-defs-annotations:1.0.0-RC2'
    annotationProcessor 'com.vertispan.tsdefs:jsinterop-ts-defs-processor:1.0.0-RC2'

    implementation 'com.vertispan.nio:gwt-nio:1.0-alpha-1'

    js project(path: ':proto:raw-js-openapi', configuration: 'js')
}
Classpaths.inheritElemental(project, 'elemental2-core', 'implementation')
Classpaths.inheritElemental(project, 'elemental2-promise', 'implementation')
Classpaths.inheritElemental(project, 'elemental2-dom', 'implementation')

GwtTools.gwtCompile project, 'io.deephaven.web.DeephavenApi', 'Create a jar of client JS API'

def jsOutput = layout.buildDirectory.dir('js')
def gwtOutput = tasks.register('gwtOutput', Sync) {
    includeEmptyDirs = false
    from(tasks.getByName('gwtCompile').outputs.files) {
        // only copy the dhapi module, and don't give it a wrapper directory
        include 'dhapi/**'
        eachFile { it.path = 'jsapi/' + it.path.substring('dhapi/'.length()) }
    }
    into jsOutput
}

artifacts {
    js(jsOutput) {
        builtBy gwtOutput
    }
}

tasks.register('gwtUnitTest', Test) { t ->
    t.systemProperties = [
            'gwt.args':'-runStyle HtmlUnit -ea -style PRETTY',
            'gwt.persistentunitcachedir':layout.buildDirectory.dir('integrationTest-unitCache').get().asFile.absolutePath,
    ]
    t.include '**/ClientUnitTestSuite.class'
    t.useJUnit()
    t.scanForTestClasses = false
}

// start a grpc-api server
String randomSuffix = UUID.randomUUID().toString();
deephavenDocker {
    envVars.set([
            'START_OPTS':'-Xmx512m -DAuthHandlers=io.deephaven.auth.AnonymousAuthenticationHandler'
    ])
    containerName.set "dh-server-for-js-${randomSuffix}"
    networkName.set "js-test-network-${randomSuffix}"
}

tasks.register('gwtIntegrationTest', Test) { t ->
    t.dependsOn(deephavenDocker.portTask)
    doFirst {
        t.systemProperty('gwt.args', '-runStyle Manual:1 -ea -style PRETTY -setProperty dh.server=http://localhost:' + deephavenDocker.port.get())
        t.classpath += tasks.getByName('gwtCompile').src
        t.classpath.files.each {
            println it
        }
    }
    t.finalizedBy(deephavenDocker.endTask)
    t.systemProperties = [
            'gwt.persistentunitcachedir':layout.buildDirectory.dir('integrationTest-unitCache').get().asFile.absolutePath,
    ]
    t.include '**/ClientIntegrationTestSuite.class'
    t.useJUnit()
    t.scanForTestClasses = false
}

project.tasks.getByName('quick').dependsOn project.tasks.withType(de.esoco.gwt.gradle.task.GwtCompileTask)

tasks.getByName('check').dependsOn(tasks.withType(Test))

apply from: "$rootDir/gradle/web-gwt-test.gradle"
