plugins {
    id 'com.bmuschko.docker-remote-api'
    id 'io.deephaven.project.register'
}

configurations {
    dts
}
dependencies {
    dts project(path: ':web-client-api', configuration: 'dts')
}

Docker.registerDockerTask(project, 'typedoc') {
    copyIn {
        from(configurations.dts) {
            into 'dist'
        }
        from 'tsconfig.json'
        from 'package.json'
        from 'package-lock.json'
        from '.npmrc'

        from('src/main/docker') {
            include 'theme.css'
        }
    }
    dockerfile {
        // share the common base image to keep it simple
        from 'deephaven/node:local-build'

        copyFile('.', '/project')
        environmentVariable('VERSION', project.property('deephavenBaseVersion').toString().trim())

        runCommand('''set -eux; \\
                      cd /project/; \\
                      mv dist/types.d.ts dist/index.d.ts; \\
                      npm version $VERSION; \\
                      npm ci; \\
                      npm pack; \\
                      mkdir /out; \\
                      mv deephaven-jsapi-types*.tgz /out/; \\
                      node_modules/.bin/typedoc dist/index.d.ts \\
                           --out /out/documentation \\
                           --skipErrorChecking \\
                           --hideGenerator \\
                           --disableSources \\
                           --customCss theme.css; \\
                      ''')
    }
    parentContainers = [ Docker.registryTask(project, 'node') ] // deephaven/node
    containerOutPath = '/out'
    copyOut {
        into "$buildDir/"
    }
}

Docker.registerDockerTask(project, 'versionBump') {
    copyIn {
        from 'package.json'
        from 'package-lock.json'
    }
    dockerfile {
        from 'deephaven/node:local-build'
        copyFile('.', '/project')
        environmentVariable('VERSION', project.property('deephavenBaseVersion').toString().trim())
        runCommand('''set -eux; \\
                      cd /project; \\
                      npm version $VERSION; \\''')
    }
    parentContainers = [ Docker.registryTask(project, 'node') ] // deephaven/node
    containerOutPath = '/package'
    copyOut {
        from 'package.json'
        from 'package-lock.json'

        into layout.projectDirectory
        preserve {
            include '**'
            exclude 'package.json'
            exclude 'package-lock.json'
        }
    }
}
