plugins {
  id 'java'
  id 'application'
}

dependencies {
  implementation(project(':grpc-api')) {
    // way too many dependencies right now
    // but at least we can cut-off slf4j-simple
    exclude group: 'org.slf4j', module: 'slf4j-simple'
  }

  runtimeOnly project(':log-to-slf4j')
  runtimeOnly project(':logback-print-stream-globals')
  runtimeOnly project(':logback-logbuffer')
  Classpaths.inheritLogbackClassic(project)

  // Note: if we want to switch back to DH-first logging, we would need to comment out the above and
  // enable something like the following:
  // runtimeOnly project(':slf4j-to-log')
  // runtimeOnly project(':log-to-stream')
  // runtimeOnly project(':log-to-logbuffer')
}

application {
  mainClassName = 'io.deephaven.grpc_api.runner.Main'
  applicationDefaultJvmArgs = [
      '-server',
      '-XX:+UseG1GC',
      '-XX:MaxGCPauseMillis=100',
      '-XX:+UseStringDeduplication',
      '-XshowSettings:vm' ]
}

apply plugin: 'io.deephaven.java-open-nio'
