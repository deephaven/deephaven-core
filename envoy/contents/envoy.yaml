admin:
  access_log:
    - name: envoy.access_loggers.file
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: /tmp/admin_access.log

  address:
    socket_address: { address: 0.0.0.0, port_value: 9090 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 10000 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: "/dev/stdout" # easier debugging
                stat_prefix: ingress_http
                codec_type: AUTO
                upgrade_configs:
                 - upgrade_type: websocket
                stream_idle_timeout: 0s
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: reverse_proxy
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: "sec-websocket-protocol"
                                present_match: true
                          route: { cluster: grpc-proxy }
                        - match: # Call to / goes to the landing page
                            path: "/"
                          route: { cluster: web }
                        - match: # Web IDE lives in this path
                            prefix: "/ide"
                          route: { cluster: web }
                        - match: # JS API lives in this path
                            prefix: "/jsapi"
                          route: { cluster: web }
                        - match: # JS Plugins live at this path
                            prefix: "/js-plugins"
                          route: { cluster: web }
                        - match: # Notebook file storage at this path
                            prefix: "/notebooks"
                          route: { cluster: web }
                        - match: # Application mode layout storage at this path
                            prefix: "/layouts"
                          route: { cluster: web }
                        - match: # Embed a widget for iframe support at this path
                            prefix: "/iframe"
                          route: { cluster: web }
                        - match: # Any GRPC call is assumed to be forwarded to the real service
                            prefix: "/"
                          route:
                            cluster: server
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.router
  clusters:
    - name: grpc-proxy
      connect_timeout: 10s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: grpc-proxy
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: grpc-proxy # assuming the name of the grpc-proxy server container
                      port_value: 8080
    - name: server
      connect_timeout: 10s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      load_assignment:
        cluster_name: server
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: server # here we assume the name of the server
                      port_value: 8080
    - name: web
      connect_timeout: 10s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http_protocol_options: {}
      load_assignment:
        cluster_name: web
        endpoints:
          - lb_endpoints:
              - endpoint:
                  hostname: web
                  address:
                    socket_address:
                      address: web
                      port_value: 8080
