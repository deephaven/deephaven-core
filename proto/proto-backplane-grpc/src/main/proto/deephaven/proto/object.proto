/*
 * Copyright (c) 2016-2022 Deephaven Data Labs and Patent Pending
 */
syntax = "proto3";

package io.deephaven.proto.backplane.grpc;

option java_multiple_files = true;
option optimize_for = SPEED;
option go_package = "github.com/deephaven/deephaven-core/go/internal/proto/object";

import "deephaven/proto/ticket.proto";

service ObjectService {
    rpc FetchObject(FetchObjectRequest) returns (FetchObjectResponse) {}
    rpc MessageStream(stream MessageRequest) returns (stream MessageResponse) {}

    /*
     * Half of the browser-based (browser's can't do bidirectional streams without websockets)
     * implementation for MessageStream.
     */
    rpc OpenMessageStream(MessageRequest) returns (stream MessageResponse) {}
    /*
     * Other half of the browser-based implementation for MessageStream.
     */
    rpc NextMessageStream(MessageRequest) returns (BrowserNextResponse) {}
}

message FetchObjectRequest {
    io.deephaven.proto.backplane.grpc.TypedTicket source_id = 1;
}

message FetchObjectResponse {
    string type = 1;
    bytes data = 2;
    repeated io.deephaven.proto.backplane.grpc.TypedTicket typed_export_id = 3;
}

message ConnectRequest {
    io.deephaven.proto.backplane.grpc.TypedTicket typed_ticket = 1;
}

message DataRequest {
    bytes data = 1;
    repeated io.deephaven.proto.backplane.grpc.TypedTicket typed_export_id = 2;
}

message MessageRequest {
    oneof payload {
        ConnectRequest source_id = 1;
        DataRequest data = 2;
    }
}

message MessageResponse {
    bytes data = 1;
    repeated io.deephaven.proto.backplane.grpc.TypedTicket typed_export_id = 2;
}

message BrowserNextResponse {
}
