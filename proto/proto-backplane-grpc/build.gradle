plugins {
  id 'com.bmuschko.docker-remote-api'
}

evaluationDependsOn ':protoc'

configurations.create('download')
configurations.download.transitive=false

dependencies {
  // technically we should have a runtime dependency on barrage-core, but instead we are regenerating
  // the same output that it contains, and we have declared the correct dependencies as necessary
  //  compile 'io.deephaven.barrage:barrage-core:0.1.1'
  download 'io.deephaven.barrage:barrage-core:0.1.1'
}


TaskProvider<Task> generateProtobuf = Docker.registerDockerTask(project, 'generateProtobuf') {
  copyIn {
    from(project.projectDir) {
      exclude 'build'
      exclude 'build.gradle'
    }
    // TODO #412 will use this same idea, but differently
//    from(zipTree(configurations.download.singleFile)) {
//      include("flight.proto").into("dependencies")
//    }
  }
  parentContainers = [ project(':protoc').tasks.findByName('buildDocker') ]
  containerOutPath = '/generated'
  imageName = 'deephaven/proto-backplane-grpc:local-build'
  copyOut {
    into('build/generated/source/proto/main')
  }
}


compileJava.dependsOn generateProtobuf

sourceSets {
  main {
    java {
      srcDir 'build/generated/source/proto/main/grpc'
      srcDir 'build/generated/source/proto/main/java'
    }
  }
}
