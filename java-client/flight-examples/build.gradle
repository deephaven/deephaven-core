plugins {
    id 'java'
    id 'application'
}

dependencies {
    implementation project(':client-flight-dagger')

    implementation 'info.picocli:picocli:4.6.1'

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.19.0'

    Classpaths.inheritSlf4j(project, 'slf4j-api', 'implementation')
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

test {
    useJUnitPlatform()
}

startScripts.enabled = false

task createGetSchemaScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.GetSchema'
    applicationName = 'get-schema'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createGetTsvScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.GetTsv'
    applicationName = 'get-tsv'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createPollTsvScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.PollTsv'
    applicationName = 'poll-tsv'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createListTablesScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.ListTables'
    applicationName = 'list-tables'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createExcessiveScript(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.ExampleExcessive'
    applicationName = 'excessive'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createGetTicketTableScript(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.GetTicketTable'
    applicationName = 'get-ticket-table'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

applicationDistribution.into('bin') {
    from(createGetSchemaScripts)
    from(createGetTsvScripts)
    from(createPollTsvScripts)
    from(createListTablesScripts)
    from(createExcessiveScript)
    from(createGetTicketTableScript)
    fileMode = 0755
}