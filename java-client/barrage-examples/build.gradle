plugins {
    id 'java'
    id 'application'
}

dependencies {
    implementation project(':client-barrage-dagger')
    implementation project(':client-flight-examples')

    implementation 'info.picocli:picocli:4.6.1'

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.19.0'

    Classpaths.inheritSlf4j(project, 'slf4j-api', 'implementation')
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

test {
    useJUnitPlatform()
}

startScripts.enabled = false

task createSubscribeBarrageScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.SubscribeApplicationField'
    applicationName = 'subscribe-application-field'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createSubscribeQST(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.SubscribeQST'
    applicationName = 'subscribe-qst'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

task createSubscribeQueryScope(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.client.examples.SubscribeQueryScope'
    applicationName = 'subscribe-query-scope'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication' ]
}

applicationDistribution.into('bin') {
    from(createSubscribeBarrageScripts)
    fileMode = 0755
}