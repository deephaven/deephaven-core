plugins {
  id 'java-library'
  id 'io.deephaven.project.register'
}

description = 'The Deephaven client session library'

dependencies {
  api project(':qst')
  api project(':uri')

  Classpaths.inheritGrpcPlatform(project, 'api')
  api 'io.grpc:grpc-api'
  implementation 'io.grpc:grpc-core'
  implementation 'io.grpc:grpc-netty'

  // TODO(deephaven-core#1783): Make proto-backplane-grpc implementation dependency
  api project(':proto:proto-backplane-grpc')

  api project(':ssl-config')
  implementation project(':ssl-kickstart')
  Classpaths.inheritSSLContext(project, 'sslcontext-kickstart-for-netty')

  Classpaths.inheritImmutables(project)
  Classpaths.inheritAutoService(project)
  compileOnly 'javax.inject:javax.inject:1'

  Classpaths.inheritJUnitPlatform(project)

  testImplementation 'org.junit.jupiter:junit-jupiter'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  Classpaths.inheritJUnitClassic(project, 'testImplementation')
  testImplementation 'io.grpc:grpc-testing'

  Classpaths.inheritAssertJ(project)

  Classpaths.inheritSlf4j(project, 'slf4j-api', 'implementation')
  Classpaths.inheritSlf4j(project, 'slf4j-simple', 'testRuntimeOnly')
}

test {
  useJUnitPlatform()
}
