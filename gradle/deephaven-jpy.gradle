project(':deephaven-jpy') {

  apply plugin: 'com.bmuschko.docker-remote-api'

  test {
    onlyIf { false } // don't run tests, it depends on python assets, which we aren't building ATM
    exclude "**/*" // make sure intellij doesn't try to use this disabled test class7
  }

  dependencies {
    testCompile 'junit:junit:4.12' // but we still want tests to compile
  }

  /**
   * This is a warning against accidentally modifying the py/jpy subtree.
   * If you know what you are doing, it should be done as a git subtree pull.
   * After an update to the py/jpy subtree, you should update the deephavenJpyGoldenSha property
   */
  task checkSubtree(type: Exec) {
    workingDir = rootDir
    commandLine 'git', 'diff', '--quiet', '--exit-code', deephavenJpyGoldenSha, 'py/jpy'
  }

  // For OSS, we need to currently move fast, and will prefer to make edits directly in py/jpy.
  // These can be backported to jpy proper in the future if necessary.

  task prepareDocker(type: Sync) {
    from(project.projectDir) {
      exclude 'build'
    }
    into 'build/docker'
  }
  Docker.registerDockerImage(project, 'buildDockerForRuntime') {
    dependsOn prepareDocker
    buildArgs.put('DEEPHAVEN_VERSION', "${project.version}")
    images.add('deephaven/java-and-python:local-build')
    target.set('runtime_reqs')
  }

  Docker.registerDockerImage(project, 'buildDockerForWheel') {
    dependsOn prepareDocker
    buildArgs.put('DEEPHAVEN_VERSION', "${project.version}")
    images.add('deephaven/deephaven-jpy-wheel:local-build')

    target.set('build')
  }
}
