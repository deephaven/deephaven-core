[versions]
arrow = "13.0.0"
autoservice = "1.0.1"
commons = "1.10.0"
dagger = "2.44"
elemental = "1.2.1"
flatbuffers = "1.12.0"
immutables = "2.9.2"
jackson-bom = "2.17.0"
javaparser = "3.23.0"
javax-validation = "1.0.0.GA"
jsinterop = "2.0.2"
# google is annoying, and have different versions released for the same groupId
jsinterop-base = "1.0.1"
slf4j = "2.0.11"

# test versions
jmock = "2.12.0"
junit = "5.7.2"
junit4 = "4.13.2"
testcontainers = "1.19.4"

[libraries]
arrow-compression = { module = "org.apache.arrow:arrow-compression", version.ref = "arrow" }
arrow-format = { module = "org.apache.arrow:arrow-format", version.ref = "arrow" }
arrow-vector = { module = "org.apache.arrow:arrow-vector", version.ref = "arrow" }
arrow-flight-core = { module = "org.apache.arrow:flight-core", version.ref = "arrow" }
arrow-flight-grpc = { module = "org.apache.arrow:flight-grpc", version.ref = "arrow" }
autoservice = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoservice" }
autoservice-compiler = { module = "com.google.auto.service:auto-service", version.ref = "autoservice" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
elemental-core = { module = "com.google.elemental2:elemental2-core", version.ref = "elemental" }
flatbuffers-java = { module = "com.google.flatbuffers:flatbuffers-java", version.ref = "flatbuffers" }
immutables = { module = "org.immutables:value", version.ref = "immutables" }
elemental-dom = { module = "com.google.elemental2:elemental2-dom", version.ref = "elemental" }
elemental-promise = { module = "com.google.elemental2:elemental2-promise", version.ref = "elemental" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson-bom" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8" }
javaparser-core = { module = "com.github.javaparser:javaparser-core", version.ref = "javaparser" }
javax-validation-api = { module = "javax.validation:validation-api", version.ref = "javax-validation" }
jsinterop-annotations = { module = "com.google.jsinterop:jsinterop-annotations", version.ref = "jsinterop" }
jsinterop-base = { module = "com.google.jsinterop:base", version.ref = "jsinterop-base" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

# test libraries
jmock-imposters = { module = "org.jmock:jmock-imposters", version.ref = "jmock" }
jmock-junit4 = { module = "org.jmock:jmock-junit4", version.ref = "jmock" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
testcontainers-minio = { module = "org.testcontainers:minio", version.ref = "testcontainers" }
