[versions]
arrow = "13.0.0"
autoservice = "1.0.1"
avro = "1.11.3"
awssdk = "2.24.5"
# See dependency matrix for particular gRPC versions at https://github.com/grpc/grpc-java/blob/master/SECURITY.md#netty
boringssl = "2.0.61.Final"
commons = "1.10.0"
dagger = "2.44"
elemental = "1.2.1"
flatbuffers = "1.12.0"
groovy = "3.0.21"
# Only bump this in concert with boringssl
grpc = "1.58.0"
guava = "33.2.0-jre"
gwt = "2.11.0"
# used by GwtTools
gwtJetty = "9.4.44.v20210927"
hadoop = "3.4.0"
iceberg = "1.5.2"
immutables = "2.9.2"
jackson = "2.17.0"
javaparser = "3.23.0"
javax-validation = "1.0.0.GA"
jetty = "11.0.20"
jsinterop = "2.0.2"
# google is annoying, and have different versions released for the same groupId
jsinterop-base = "1.0.1"
logback = "1.4.14"
parquet = "1.14.0"
protobuf = "3.25.3"
slf4j = "2.0.11"
sslcontext = "8.1.1"

# test versions
assertj = "3.19.0"
jmock = "2.12.0"
junit = "5.7.2"
junit4 = "4.13.2"
testcontainers = "1.19.4"

[libraries]
arrow-compression = { module = "org.apache.arrow:arrow-compression", version.ref = "arrow" }
arrow-format = { module = "org.apache.arrow:arrow-format", version.ref = "arrow" }
arrow-vector = { module = "org.apache.arrow:arrow-vector", version.ref = "arrow" }
arrow-flight-core = { module = "org.apache.arrow:flight-core", version.ref = "arrow" }
arrow-flight-grpc = { module = "org.apache.arrow:flight-grpc", version.ref = "arrow" }

autoservice = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoservice" }
autoservice-compiler = { module = "com.google.auto.service:auto-service", version.ref = "autoservice" }

avro = { module = "org.apache.avro:avro", version.ref = "avro" }

awssdk-bom = { module = "software.amazon.awssdk:bom", version.ref = "awssdk"}
awssdk-crt-client = { module = "software.amazon.awssdk:aws-crt-client" }
awssdk-glue = { module = "software.amazon.awssdk:glue" }
awssdk-s3 = { module = "software.amazon.awssdk:s3" }
awssdk-s3-transfer-manager = { module = "software.amazon.awssdk:s3-transfer-manager" }
awssdk-sts = { module = "software.amazon.awssdk:sts" }

boringssl = { module = "io.netty:netty-tcnative-boringssl-static", version.ref = "boringssl" }

commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons" }

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

elemental-core = { module = "com.google.elemental2:elemental2-core", version.ref = "elemental" }

flatbuffers-java = { module = "com.google.flatbuffers:flatbuffers-java", version.ref = "flatbuffers" }

groovy = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }
groovy-json = { module = "org.codehaus.groovy:groovy-json", version.ref = "groovy" }
groovy-templates = { module = "org.codehaus.groovy:groovy-templates", version.ref = "groovy" }

grpc-api = { module = "io.grpc:grpc-api" }
grpc-bom = { module = "io.grpc:grpc-bom", version.ref = "grpc"}
grpc-core = { module = "io.grpc:grpc-core" }
grpc-netty = { module = "io.grpc:grpc-netty" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf" }
grpc-services = { module = "io.grpc:grpc-services" }
grpc-stub = { module = "io.grpc:grpc-services" }
grpc-testing = { module = "io.grpc:grpc-testing" }
grpc-util = { module = "io.grpc:grpc-util" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }

gwt-user = { module = "org.gwtproject:gwt-user", version.ref = "gwt" }

hadoop-common = { module = "org.apache.hadoop:hadoop-common", version.ref = "hadoop" }
hadoop-hdfs-client = { module = "org.apache.hadoop:hadoop-hdfs-client", version.ref = "hadoop" }
# These are transitive, inlined versions; see io.deephaven.hadoop-common-dependencies
woodstox-core = { module = "com.fasterxml.woodstox:woodstox-core", version = "6.6.2" }
hadoop-shaded-guava = { module = "org.apache.hadoop.thirdparty:hadoop-shaded-guava", version = "1.2.0" }
commons-collections = { module = "commons-collections:commons-collections", version = "3.2.2" }

iceberg-api = { module = "org.apache.iceberg:iceberg-api" }
iceberg-aws = { module = "org.apache.iceberg:iceberg-aws" }
iceberg-bom = { module = "org.apache.iceberg:iceberg-bom", version.ref = "iceberg" }
iceberg-bundled-guava = { module = "org.apache.iceberg:iceberg-bundled-guava" }
iceberg-core = { module = "org.apache.iceberg:iceberg-core" }

immutables = { module = "org.immutables:value", version.ref = "immutables" }

elemental-dom = { module = "com.google.elemental2:elemental2-dom", version.ref = "elemental" }
elemental-promise = { module = "com.google.elemental2:elemental2-promise", version.ref = "elemental" }

jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8" }

javaparser-core = { module = "com.github.javaparser:javaparser-core", version.ref = "javaparser" }

javax-validation-api = { module = "javax.validation:validation-api", version.ref = "javax-validation" }

jetty-alpn-java-server = { module = "org.eclipse.jetty:jetty-alpn-java-server" }
jetty-alpn-server = { module = "org.eclipse.jetty:jetty-alpn-server" }
jetty-bom = { module = "org.eclipse.jetty:jetty-bom", version.ref = "jetty" }
jetty-http2-server = { module = "org.eclipse.jetty.http2:http2-server" }
jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet" }
jetty-servlets = { module = "org.eclipse.jetty:jetty-servlets" }
jetty-webapp = { module = "org.eclipse.jetty:jetty-webapp" }
jetty-websocket-jakarta-server = { module = "org.eclipse.jetty.websocket:websocket-jakarta-server" }

jsinterop-annotations = { module = "com.google.jsinterop:jsinterop-annotations", version.ref = "jsinterop" }
jsinterop-base = { module = "com.google.jsinterop:base", version.ref = "jsinterop-base" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

parquet-hadoop = { module = "org.apache.parquet:parquet-hadoop", version.ref = "parquet" }

protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

sslcontext-kickstart = { module = "io.github.hakky54:sslcontext-kickstart", version.ref = "sslcontext" }
sslcontext-kickstart-jetty = { module = "io.github.hakky54:sslcontext-kickstart-for-jetty", version.ref = "sslcontext" }
sslcontext-kickstart-netty = { module = "io.github.hakky54:sslcontext-kickstart-for-netty", version.ref = "sslcontext" }

# test libraries
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }

jmock-imposters = { module = "org.jmock:jmock-imposters", version.ref = "jmock" }
jmock-junit4 = { module = "org.jmock:jmock-junit4", version.ref = "jmock" }

junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine" }

junit4 = { module = "junit:junit", version.ref = "junit4" }

testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
testcontainers-minio = { module = "org.testcontainers:minio", version.ref = "testcontainers" }
