plugins {
    id 'com.bmuschko.docker-remote-api'
    id 'io.deephaven.project.register'
}

evaluationDependsOn Docker.registryProject('server-base')
evaluationDependsOn ':deephaven-jpy'
evaluationDependsOn ':deephaven-wheel'
evaluationDependsOn ':deephaven2-wheel'

def dockerContext = project.layout.buildDirectory.dir('context')

def prepareDocker = project.tasks.register('prepareDocker', Sync) {
    // deephaven-jpy.whl
    def deephavenJpyWheel = project(':deephaven-jpy').tasks.getByName('buildWheel')

    // deephaven.whl
    def deephavenWheel = project(':deephaven-wheel').tasks.getByName('buildWheel')

    // deephaven2.whl
    def deephaven2Wheel = project(':deephaven2-wheel').tasks.getByName('buildWheel')

    from (deephavenJpyWheel.outputs.files) {
        into 'deephaven-jpy-wheel'
    }
    from (deephavenWheel.outputs.files) {
        into 'deephaven-wheel'
    }
    from (deephaven2Wheel.outputs.files) {
        into 'deephaven2-wheel'
    }

    from 'src/main/docker'
    into dockerContext
}

def buildDocker = Docker.registerDockerImage(project, 'buildDocker') {
    dependsOn prepareDocker

    inputs.files Docker.registryFiles(project, 'server-base')

    inputDir.set dockerContext

    images.add('deephaven/runtime-base:local-build')
}

assemble.dependsOn buildDocker