buildscript {
    dependencies {
        gradleApi()
    }
}
plugins {
    id 'groovy'
    id 'idea'
    id 'groovy-gradle-plugin'
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

allprojects {
    apply plugin: 'java'
    tasks.named('jar', Jar).configure {
        Jar jar ->
            jar.preserveFileTimestamps = false
            jar.reproducibleFileOrder = true
            jar.outputs.cacheIf { true }
    }
}

dependencies {

    compile('de.esoco.gwt:gwt-gradle-plugin:1.1.1') {
        exclude group: 'org.codehaus.groovy'
    }

    compile 'com.bmuschko:gradle-docker-plugin:6.7.0'

    compile('com.netflix.nebula:gradle-ospackage-plugin:8.3.0')

    compile "gradle.plugin.com.jetbrains.python:gradle-python-envs:0.0.30"

    // we cheat here b/c our module is java 8, but javadoc is java 11.  This bypasses jvm-matching.
    // The javadoc jar is only ever used by one specific java 11 task, so it's harmless to include it here.
    runtime project(':javadoc').tasks.getByName('jar').outputs.files
}

