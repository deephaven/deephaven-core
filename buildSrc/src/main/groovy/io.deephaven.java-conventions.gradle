plugins {
  id 'java'
}

def archivesBaseNamePrefix = 'deephaven-'

def compilerVersion = Integer.parseInt((String)project.findProperty('compilerVersion') ?: '17')
def languageLevel = Integer.parseInt((String)project.findProperty('languageLevel') ?: '8')
def runtimeVersion = Integer.parseInt((String)project.findProperty('runtimeVersion') ?: '8')

if (languageLevel > compilerVersion) {
  throw new IllegalArgumentException("languageLevel must be less than or equal to compileVersion")
}
if (languageLevel < 8) {
  throw new IllegalArgumentException("languageLevel must be greater than or equal to 8")
}
if (runtimeVersion < languageLevel) {
  throw new IllegalArgumentException("runtimeVersion must be greater than or equal to languageLevel")
}

archivesBaseName = "${archivesBaseNamePrefix}${project.name}"

java {
  toolchain {
    // Note: even though we are being explicit with our compilers / launchers via task type, we want to set up the
    // plugin with our compiler version.
    languageVersion = JavaLanguageVersion.of(compilerVersion)
  }
}

def compiler = javaToolchains.compilerFor {
  languageVersion = JavaLanguageVersion.of(compilerVersion)
} as Provider<JavaCompiler>

def runtimeLauncher = javaToolchains.launcherFor {
  languageVersion = JavaLanguageVersion.of(runtimeVersion)
} as Provider<JavaLauncher>

// Note: even with source / target set, it doesn't seem like we can compile properly with 17.
// May need newer version of groovy?
def groovyCompilerLauncher = javaToolchains.launcherFor {
  //languageVersion = JavaLanguageVersion.of(compilerVersion)
  languageVersion = JavaLanguageVersion.of(8)
} as Provider<JavaLauncher>

tasks.withType(JavaCompile).configureEach {
  javaCompiler.set compiler

  options.fork = true
  options.encoding = 'UTF-8'
  options.incremental = true
  options.compilerArgs << '-parameters'

  if (compilerVersion != languageLevel) {
    options.release.set languageLevel
  }
}

tasks.withType(JavaExec).configureEach {
  javaLauncher.set runtimeLauncher
}

tasks.withType(Test).configureEach {
  javaLauncher.set runtimeLauncher
}

tasks.withType(GroovyCompile).configureEach {
  javaLauncher.set groovyCompilerLauncher

  // The release option doesn't seem to get picked up
  //options.release.set 8
  setSourceCompatibility('8')
  setTargetCompatibility('8')
}

tasks.withType(Jar).configureEach {
  Jar jar ->
    jar.preserveFileTimestamps = false
    jar.reproducibleFileOrder = true
}

tasks.named(LifecycleBasePlugin.CLEAN_TASK_NAME) {
  Delete d ->
    d.delete('out')
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Deephaven Database',
        'Implementation-Version': project.version,
        'Provider': 'gradle'
  }
}

configurations {
  testOutput.extendsFrom testRuntime
}