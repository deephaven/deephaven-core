import io.deephaven.project.util.PublishingTools
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'java'
  id 'signing'
  id 'maven-publish'
  id 'com.gradleup.shadow'
  id 'io.deephaven.javadoc-conventions'
}

java {
  withJavadocJar()
  withSourcesJar()
}

tasks.withType(Javadoc) {
  // https://github.com/gradle/gradle/issues/19869
  options.addStringOption('sourcepath', sourceSets.main.allJava.getSourceDirectories().getAsPath())
}

def shadowPublication = project
        .extensions
        .getByType(PublishingExtension)
        .publications
        .create('shadow', MavenPublication) {
          from(project.components.named('shadow').get())
        }

def shadowJar = project.tasks.named('shadowJar', ShadowJar) {
  archiveClassifier = ''
}

project.tasks.named('assemble') {
  it.dependsOn(shadowJar)
}

PublishingTools.setupRepositories(project)
PublishingTools.setupLicense(project, shadowPublication)
PublishingTools.setupMavenPublication(project, shadowPublication)
PublishingTools.setupSigning(project, shadowPublication)
// Projects will need to call PublishingTools.setupShadowName to setup appropriate shadow names
