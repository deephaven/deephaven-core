plugins {
    id 'base'
    id 'java'
}

configurations {
    jama
    junit

    fishBase
    fishIo.extendsFrom fishBase
    fishBaseTest.extendsFrom junit
    fishIoTest.extendsFrom fishBaseTest
    dhUtil.extendsFrom fishIo
}

dependencies {
    // First, one-off configurations for stuff we need "here and there"
    jama libs.commons.math3
    jama libs.jama

    junit libs.junit4
    junit libs.jmock.junit4
    junit libs.jmock.imposters

    // Now, all the various fish libs we depend on, with inherited dependencies matching
    // the actual dependencies used in fishlib... if we were strongly coupled, we could skip
    // having to maintain this...
    fishBase project(':Base'),
            libs.trove,
            libs.jetbrains.annotations,
            libs.commons.compress

    fishIo project(':IO')

    dhUtil project(':Configuration')
    dhUtil project(':DataStructures')

    fishBaseTest project(path: ':Base', configuration: 'tests')

    fishIoTest project(path: ':IO', configuration: 'tests')
}
