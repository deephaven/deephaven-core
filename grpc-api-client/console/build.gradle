plugins {
    id 'java'
    id 'application'
}

dependencies {
    implementation(project(':grpc-api')) {
        // way too many dependencies right now
        // but at least we can cut-off slf4j-simple
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    runtimeOnly project(':log-to-slf4j')
    Classpaths.inheritLogbackClassic(project)

    // Note: if we want to switch back to DH-first logging, we would need to comment out the above and
    // enable something like the following:
    // runtimeOnly project(':slf4j-to-log')
    // runtimeOnly project(':log-to-stream')
    // runtimeOnly project(':log-to-logbuffer')
}

startScripts.enabled = false

task createGroovyScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.grpc_api.example.ConsoleClient'
    applicationName = 'console-groovy'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication',
            '-XshowSettings:vm',
            '-Dconsole.sessionType=groovy' ]
}

task createPythonScripts(type: CreateStartScripts) {
    mainClassName = 'io.deephaven.grpc_api.example.ConsoleClient'
    applicationName = 'console-python'
    outputDir = new File(project.buildDir, name)
    classpath = startScripts.classpath
    defaultJvmOpts = [
            '-server',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            '-XX:+UseStringDeduplication',
            '-XshowSettings:vm',
            '-Dconsole.sessionType=python' ]
}

applicationDistribution.into('bin') {
    from(createGroovyScripts)
    from(createPythonScripts)
    fileMode = 0755
}
