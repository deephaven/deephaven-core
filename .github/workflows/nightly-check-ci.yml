name: Nightly Check CI

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
  # Note: this will set GITHUB_SHA to the latest commit on the default branch.
  schedule:
    # 2AM EST == 6AM UTC
    - cron:  '0 6 * * *'
  push:
    branches: [ 'fix-nightly-check' ]

jobs:
  check:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # note: this uses Zulu and not AdoptOpenJDK or other. should make sure we build and test on the same one...
      - name: Setup JDK
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.292'

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java.outputs.path }}" >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: check
          arguments: --scan --continue --rerun-tasks check
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-check-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-check-ci-reports
          path: '**/build/reports/tests/**'

  testSerial:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # note: this uses Zulu and not AdoptOpenJDK or other. should make sure we build and test on the same one...
      - name: Setup JDK
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.292'

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java.outputs.path }}" >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: testSerial
          arguments: --scan --continue --rerun-tasks testSerial
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testSerial-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testSerial-ci-reports
          path: '**/build/reports/tests/**'

  testParallel:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # note: this uses Zulu and not AdoptOpenJDK or other. should make sure we build and test on the same one...
      - name: Setup JDK
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.292'

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java.outputs.path }}" >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: testParallel
          arguments: --scan --continue --rerun-tasks testParallel
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testParallel-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testParallel-ci-reports
          path: '**/build/reports/tests/**'

  testOutOfBand:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # note: this uses Zulu and not AdoptOpenJDK or other. should make sure we build and test on the same one...
      - name: Setup JDK
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.292'

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java.outputs.path }}" >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: testOutOfBand
          arguments: --scan --continue --rerun-tasks testOutOfBand
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testOutOfBand-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testOutOfBand-ci-reports
          path: '**/build/reports/tests/**'