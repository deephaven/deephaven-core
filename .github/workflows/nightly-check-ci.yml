name: Nightly Check CI

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
  # Note: this will set GITHUB_SHA to the latest commit on the default branch.
  schedule:
    # 2AM EST == 6AM UTC
    - cron:  '0 6 * * *'
  push:
    branches: [ 'nightly/**', 'release/v*' ]

jobs:
  check:
    if: ${{ github.repository_owner == 'deephaven' || github.event_name != 'schedule' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '17.0.0'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: check
          arguments: --scan --continue --rerun-tasks check
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-check-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-check-ci-reports
          path: '**/build/reports/tests/**'

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: nightly-check-ci-jvm-err
          path: '*_pid*.log'
          if-no-files-found: ignore

      - name: Publish Test Results
        uses: scacap/action-surefire-report@v1
        if: ${{ github.repository_owner == 'deephaven' }}
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        with:
          check_name: check report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/*/TEST-*.xml'

      - name: Slack Nightly Failure
        uses: slackapi/slack-github-action@v1.15.0
        id: slack-nightly-failure
        if: ${{ failure() && github.repository_owner == 'deephaven' }}
        # TODO(deephaven-core#947): Parameterize nightly ci failure workflow and trigger
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NIGHTLY_FAILURE }}

  testSerial:
    if: ${{ github.repository_owner == 'deephaven' || github.event_name != 'schedule' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '17.0.0'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: testSerial
          arguments: --scan --continue --rerun-tasks testSerial
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testSerial-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testSerial-ci-reports
          path: '**/build/reports/tests/**'

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: nightly-testSerial-ci-jvm-err
          path: '*_pid*.log'
          if-no-files-found: ignore

      - name: Publish Test Results
        uses: scacap/action-surefire-report@v1
        if: ${{ github.repository_owner == 'deephaven' }}
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        with:
          check_name: testSerial report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/*/TEST-*.xml'

      - name: Slack Nightly Failure
        uses: slackapi/slack-github-action@v1.15.0
        id: slack-nightly-failure
        if: ${{ failure() && github.repository_owner == 'deephaven' }}
        # TODO(deephaven-core#947): Parameterize nightly ci failure workflow and trigger
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NIGHTLY_FAILURE }}

  testParallel:
    if: ${{ github.repository_owner == 'deephaven' || github.event_name != 'schedule' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '17.0.0'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: testParallel
          arguments: --scan --continue --rerun-tasks testParallel
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testParallel-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testParallel-ci-reports
          path: '**/build/reports/tests/**'

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: nightly-testParallel-ci-jvm-err
          path: '*_pid*.log'
          if-no-files-found: ignore

      - name: Publish Test Results
        uses: scacap/action-surefire-report@v1
        if: ${{ github.repository_owner == 'deephaven' }}
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        with:
          check_name: testParallel report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/*/TEST-*.xml'

      - name: Slack Nightly Failure
        uses: slackapi/slack-github-action@v1.15.0
        id: slack-nightly-failure
        if: ${{ failure() && github.repository_owner == 'deephaven' }}
        # TODO(deephaven-core#947): Parameterize nightly ci failure workflow and trigger
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NIGHTLY_FAILURE }}

  testOutOfBand:
    if: ${{ github.repository_owner == 'deephaven' || github.event_name != 'schedule' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'zulu'
          java-version: '17.0.0'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Run gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: testOutOfBand
          arguments: --scan --continue --rerun-tasks testOutOfBand
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testOutOfBand-ci-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-testOutOfBand-ci-reports
          path: '**/build/reports/tests/**'

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: nightly-testOutOfBand-ci-jvm-err
          path: '*_pid*.log'
          if-no-files-found: ignore

      - name: Publish Test Results
        uses: scacap/action-surefire-report@v1
        if: ${{ github.repository_owner == 'deephaven' }}
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        with:
          check_name: testOutOfBand report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/*/TEST-*.xml'

      - name: Slack Nightly Failure
        uses: slackapi/slack-github-action@v1.15.0
        id: slack-nightly-failure
        if: ${{ failure() && github.repository_owner == 'deephaven' }}
        # TODO(deephaven-core#947): Parameterize nightly ci failure workflow and trigger
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NIGHTLY_FAILURE }}
