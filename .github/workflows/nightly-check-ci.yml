name: Nightly Check CI

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
  # Note: this will set GITHUB_SHA to the latest commit on the default branch.
  schedule:
    # 2AM EST == 6AM UTC
    - cron:  '0 6 * * *'
  push:
    branches: [ 'nightly/**', 'release/v*' ]

jobs:
  nightly:
    strategy:
      fast-fail: false
      matrix:
        gradle-task: ['check', 'testSerial', 'testParallel', 'testOutOfBand']
        test-jvm-version: ['11', '17']
    if: ${{ github.repository_owner == 'deephaven' || github.event_name != 'schedule' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties
          cat gradle.properties

      - name: Run gradle ${{ matrix.gradle-task }} on java ${{ matrix.test-jvm-version }}
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: gradle-run
          arguments: --scan --continue --rerun-tasks ${{ matrix.gradle-task }} -PtestRuntimeVersion=${{ matrix.test-jvm-version }}
          gradle-version: wrapper

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: nightly-${{ matrix.gradle-task }}-java${{ matrix.test-jvm-version }}-ci-results
          path: |
            **/build/test-results/*/TEST-*.xml
            **/build/reports/tests/**

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: nightly-${{ matrix.gradle-task }}-java${{ matrix.test-jvm-version }}-ci-jvm-err
          path: |
            **/*_pid*.log
            **/core.*
          if-no-files-found: ignore

      - name: Publish Test Results
        uses: scacap/action-surefire-report@v1
        if: ${{ github.repository_owner == 'deephaven' }}
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        with:
          # We have to make a unique report per run https://github.com/ScaCap/action-surefire-report/issues/70
          check_name: check report ${{ matrix.gradle-task }} java${{ matrix.test-jvm-version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/*/TEST-*.xml'

      - name: Slack Nightly Failure
        uses: slackapi/slack-github-action@v1.18.0
        id: slack-nightly-failure
        if: ${{ failure() && github.repository_owner == 'deephaven' }}
        with:
          payload: |
            {
              "slack-message": "Nightly build failure in ${{ matrix.gradle-task }} on Java ${{ matrix.test-jvm-version }} @ ${{ github.event.head_commit.url }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NIGHTLY_FAILURE }}
