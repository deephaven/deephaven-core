name: Publish CI

on:
  push:
    branches: [ 'main', 'release/v*' ]
  pull_request:
    branches: [ main ]

jobs:
  publish:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      # TODO(deephaven-core#2614): Improve gradle/CI assemble and publishing of artifacts

      - name: Publish to Maven Local
        if: ${{ !startsWith(github.ref, 'refs/heads/release/v') }}
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: publish-local
          arguments: server-netty-app:build server-jetty-app:build py-server:build py-embedded-server:build publishToMavenLocal
          gradle-version: wrapper

      - name: Publish
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: publish
          # We need to be explicit here about no parallelism to ensure we don't create disjointed staging repositories.
          arguments: --no-parallel server-netty-app:build server-jetty-app:build py-server:build py-embedded-server:build publish
          gradle-version: wrapper
        env:
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.CI_AT_DEEPHAVEN_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.CI_AT_DEEPHAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingRequired: true

      - name: Upload Artifacts
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            server/jetty-app/build/distributions/
            py/server/build/wheel/
            py/embedded-server/build/wheel/

      - name: Publish deephaven-core to PyPi
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.DEEPHAVENCORE_PYPI_TOKEN }}
          packages_dir: py/server/build/wheel/

      - name: Publish deephaven-server to PyPi
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.DEEPHAVENSERVER_PYPI_TOKEN }}
          packages_dir: py/embedded-server/build/wheel/
