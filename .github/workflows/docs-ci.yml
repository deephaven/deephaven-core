name: Docs CI

on:
  pull_request:
    branches: [ 'main', 'rc/v*' ]
  push:
    branches: [ 'main', 'release/v*' ]

jobs:
  makedirs:
    if: ${{ github.repository_owner == 'deephaven' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Make Directories
        run: |
          mkdir -p tmp-deephaven-core-v2/${{ github.ref_name }}/
          cd tmp-deephaven-core-v2/${{ github.ref_name }}/
          mkdir -p javadoc pydoc client-api
          cd client-api
          mkdir -p javascript python cpp-examples cpp r protobuf
          
      - name: Deploy Directories
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz
          path: tmp-deephaven-core-v2/
          remote_path: deephaven-core-v2/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}
  symlink:
    # Unversioned links (latest) should take to the default which is main on the docs site.
    # May change in the future to the latest stable release. If so, that should add a check
    # that the ref starts with release/v and then use that version instead of main.
    if: ${{ github.event_name == 'push' }}
    needs: [javadoc, typedoc, pydoc, cppdoc, rdoc, protodoc]
    runs-on: ubuntu-24.04
    steps:
      - name: Make Symlinks
        run: |
          mkdir -p tmp-deephaven-core-v2/symlinks
          cd tmp-deephaven-core-v2/symlinks
          ln -s ../main latest
          
      - name: Deploy Symlinks
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz
          path: tmp-deephaven-core-v2/
          remote_path: deephaven-core-v2/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

  core-docs-check:
    if: ${{ github.event_name == 'pull_request' }} # PR previews are handled separately
    runs-on: ubuntu-24.04
    concurrency:
      group: core-docs-check-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v5
        with: # Does not need lfs to validate since the header file existing is enough for the check
          sparse-checkout: /docs/
          sparse-checkout-cone-mode: false

      - name: Check formatting
        run: ./docs/format -c

      - name: Validate docs
        run: ./docs/validate

  core-docs-sync:
    if: ${{ github.event_name == 'push' && github.repository_owner == 'deephaven' }}
    permissions:
      id-token: write # Required to upload to AWS
      contents: read
    runs-on: ubuntu-24.04
    concurrency:
      group: core-docs-sync-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          sparse-checkout: /docs/
          sparse-checkout-cone-mode: false
          lfs: true

      - name: DHC Version
        id: dhc-version
        env:
          REF_NAME: ${{ github.ref_name }}
        # Remove the 'release/v' prefix if it exists
        run: echo "version=${REF_NAME#release/v}" >> $GITHUB_OUTPUT

      - name: Sync core Python to the salmon bucket
        id: sync-python
        uses: deephaven/salmon-sync@v1
        with:
          source: docs/python
          destination: deephaven/deephaven-core/docs/${{ steps.dhc-version.outputs.version }}
          production: true
          temporary: false
          aws-role: ${{ vars.DOCS_AWS_ROLE }}

      - name: Sync core Groovy to the salmon bucket
        id: sync-groovy
        uses: deephaven/salmon-sync@v1
        with:
          source: docs/groovy
          destination: deephaven/deephaven-core/groovy/docs/${{ steps.dhc-version.outputs.version }}
          production: true
          temporary: false
          aws-role: ${{ vars.DOCS_AWS_ROLE }}

  javadoc:
    needs: [makedirs]
    runs-on: ubuntu-24.04
    concurrency:
      group: javadoc-${{ github.workflow }}-${{ github.ref }}
      # We don't want to cancel in-progress jobs against main because that might leave the upload in a bad state.
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      - name: All Javadoc
        run: ./gradlew --scan outputVersion combined-javadoc:allJavadoc

      - name: Get Deephaven Version
        id: dhc-version
        run: echo "version=$(cat build/version)" >> $GITHUB_OUTPUT

      - name: Upload Javadocs
        if: ${{ github.event_name == 'push' }} 
        uses: actions/upload-artifact@v5
        with:
          name: javadocs-${{ steps.dhc-version.outputs.version }}
          path: 'combined-javadoc/build/docs/javadoc/'

      - name: Deploy Javadoc
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: combined-javadoc/build/docs/javadoc/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/javadoc/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

  typedoc:
    needs: [makedirs]
    runs-on: ubuntu-24.04
    concurrency:
      group: typedoc-${{ github.workflow }}-${{ github.ref }}
      # We don't want to cancel in-progress jobs against main because that might leave the upload in a bad state.
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      - name: Run typedoc on JS API
        run: ./gradlew --scan outputVersion :web-client-api:types:typedoc

      - name: Get Deephaven Version
        id: dhc-version
        run: echo "version=$(cat build/version)" >> $GITHUB_OUTPUT
          
      - name: Upload JavaScript/TypeScript docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: typedoc-${{ steps.dhc-version.outputs.version }}
          path: 'web/client-api/types/build/documentation/'

      - name: Deploy JavaScript/TypeScript docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: web/client-api/types/build/documentation/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/client-api/javascript/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

  pydoc:
    needs: [makedirs]
    runs-on: ubuntu-24.04
    concurrency:
      group: pydoc-${{ github.workflow }}-${{ github.ref }}
      # We don't want to cancel in-progress jobs against main because that might leave the upload in a bad state.
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      - name: Generate Python Docs
        run: ./gradlew --scan outputVersion sphinx:pythonDocs sphinx:pydeephavenDocs

      - name: Get Deephaven Version
        id: dhc-version
        run: echo "version=$(cat build/version)" >> $GITHUB_OUTPUT
 
      - name: Upload Python Server Docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: pyserver-docs-${{ steps.dhc-version.outputs.version }}
          path: 'sphinx/build/docs/'
          
      - name: Upload Python Client Docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: pyclient-docs-${{ steps.dhc-version.outputs.version }}
          path: 'sphinx/build/pyclient-docs/'

      - name: Deploy Python Docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: sphinx/build/docs/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/pydoc/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

      - name: Deploy Client Python Docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: sphinx/build/pyclient-docs/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/client-api/python/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: docs-ci-pydoc-jvm-err
          path: '**/*_pid*.log'
          if-no-files-found: ignore

  cppdoc:
    needs: [makedirs]
    runs-on: ubuntu-24.04
    concurrency:
      group: cppdoc-${{ github.workflow }}-${{ github.ref }}
      # We don't want to cancel in-progress jobs against main because that might leave the upload in a bad state.
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      - name: Generate C++ Docs
        run: ./gradlew --scan outputVersion sphinx:cppClientDocs sphinx:cppExamplesDocs

      - name: Get Deephaven Version
        id: dhc-version
        run: echo "version=$(cat build/version)" >> $GITHUB_OUTPUT
  
      - name: Upload Client C++ Docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: cppclient-docs-${{ steps.dhc-version.outputs.version }}
          path: 'sphinx/build/cppClientDocs/'
          
      - name: Upload Client C++ Example Docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: cppclient-examples-${{ steps.dhc-version.outputs.version }}
          path: 'sphinx/build/cppExamplesDocs/'

      - name: Deploy Client C++ Docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: sphinx/build/cppClientDocs/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/client-api/cpp/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

      - name: Deploy Client C++ Example Docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: sphinx/build/cppExamplesDocs/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/client-api/cpp-examples/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

  rdoc:
    needs: [makedirs]
    runs-on: ubuntu-24.04
    concurrency:
      group: rdoc-${{ github.workflow }}-${{ github.ref }}
      # We don't want to cancel in-progress jobs against main because that might leave the upload in a bad state.
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      - name: Generate R Docs
        run: ./gradlew --scan outputVersion R:rClientSite

      - name: Get Deephaven Version
        id: dhc-version
        run: echo "version=$(cat build/version)" >> $GITHUB_OUTPUT
        
      - name: Upload R Docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: rdoc-${{ steps.dhc-version.outputs.version }}
          path: 'R/rdeephaven/docs/'

      - name: Deploy R Docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: R/rdeephaven/docs/
          remote_path: deephaven-core-v2/${{ github.ref_name }}/client-api/r/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}

      - name: Upload JVM Error Logs
        uses: actions/upload-artifact@v5
        if: failure()

  protodoc:
    needs: [makedirs]
    runs-on: ubuntu-24.04
    concurrency:
      group: protodoc-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          .github/scripts/gradle-properties.sh >> gradle.properties
          cat gradle.properties

      - name: Generate Protobuf Docs
        run: ./gradlew --scan outputVersion :proto:proto-backplane-grpc:generateProtobuf

      - name: Get Deephaven Version
        id: dhc-version
        run: echo "version=$(cat build/version)" >> $GITHUB_OUTPUT

      - name: Upload Protobuf Docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v5
        with:
          name: protobuf-docs-${{ steps.dhc-version.outputs.version }}
          path: 'proto/proto-backplane-grpc/build/protoc-output/proto-doc/single-html/index.html'

      - name: Deploy Protobuf Docs
        if: ${{ github.event_name == 'push' }}
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -rlptDvz --delete
          path: proto/proto-backplane-grpc/build/protoc-output/proto-doc/single-html/index.html
          remote_path: deephaven-core-v2/${{ github.ref_name }}/client-api/protobuf/
          remote_host: ${{ secrets.DOCS_HOST }}
          remote_port: ${{ secrets.DOCS_PORT }}
          remote_user: ${{ secrets.DOCS_USER }}
          remote_key: ${{ secrets.DEEPHAVEN_CORE_SSH_KEY }}
