name: Build CI

on:
  push:
    branches: [ 'main', 'build/**', 'release/v*' ]

jobs:
  grpc-api:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Get Semver
        id: semver
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        run: |
          semver=$(echo ${{ github.ref }} | tail -c +21)
          echo "::set-output name=semver::$semver"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/grpc-api
          flavor: |
            latest=false
          tags: |
            type=edge,branch=main
            type=raw,priority=950,enable=${{ startsWith(github.ref, 'refs/heads/release/v') }},value=${{ steps.semver.outputs.semver }}
            type=raw,enable=${{ startsWith(github.ref, 'refs/heads/release/v0.7') }},value=latest
            type=ref,event=branch
          labels: |
            org.opencontainers.image.vendor=Deephaven Data Labs
            org.opencontainers.image.title=Deephaven Core
            org.opencontainers.image.description=Deephaven Core
            org.opencontainers.image.licenses=Deephaven Community License Agreement 1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver: docker

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Dockerfile and context
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: build-grpc-api
          arguments: --scan grpc-api-server-docker:dockerCreateDockerfile
          gradle-version: wrapper

      # TODO: switch to new GitHub cache backend when available
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#github-cache
      # https://github.com/docker/buildx/pull/535
      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          context: ./grpc-api/server/docker/build/docker/
          push: ${{ github.event_name != 'pull_request' }}

  grpc-proxy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Get Semver
        id: semver
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        run: |
          semver=$(echo ${{ github.ref }} | tail -c +21)
          echo "::set-output name=semver::$semver"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/grpc-proxy
          flavor: |
            latest=false
          tags: |
            type=edge,branch=main
            type=raw,priority=950,enable=${{ startsWith(github.ref, 'refs/heads/release/v') }},value=${{ steps.semver.outputs.semver }}
            type=raw,enable=${{ startsWith(github.ref, 'refs/heads/release/v0.7') }},value=latest
            type=ref,event=branch
          labels: |
            org.opencontainers.image.vendor=Deephaven Data Labs
            org.opencontainers.image.title=Deephaven gRPC Web Proxy
            org.opencontainers.image.description=Deephaven gRPC web proxy, for the improbable-eng grpc to grpc-web/websocket proxy
            org.opencontainers.image.licenses=Apache-2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver: docker

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Dockerfile and context
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: build-grpc-proxy
          arguments: --scan grpc-proxy:prepareDocker
          gradle-version: wrapper

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          context: ./grpc-proxy/build/docker/
          push: ${{ github.event_name != 'pull_request' }}

  envoy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Get Semver
        id: semver
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        run: |
          semver=$(echo ${{ github.ref }} | tail -c +21)
          echo "::set-output name=semver::$semver"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/envoy
          flavor: |
            latest=false
          tags: |
            type=edge,branch=main
            type=raw,priority=950,enable=${{ startsWith(github.ref, 'refs/heads/release/v') }},value=${{ steps.semver.outputs.semver }}
            type=raw,enable=${{ startsWith(github.ref, 'refs/heads/release/v0.7') }},value=latest
            type=ref,event=branch
          labels: |
            org.opencontainers.image.vendor=Deephaven Data Labs
            org.opencontainers.image.title=Deephaven Envoy
            org.opencontainers.image.description=Deephaven envoy proxy
            org.opencontainers.image.licenses=Apache-2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver: docker

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Dockerfile and context
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: build-envoy
          arguments: --scan envoy:prepareDocker
          gradle-version: wrapper

      - name: Build
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          context: ./envoy/build/docker/
          push: ${{ github.event_name != 'pull_request' }}

  web:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Semver
        id: semver
        if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
        run: |
          semver=$(echo ${{ github.ref }} | tail -c +21)
          echo "::set-output name=semver::$semver"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/web
          flavor: |
            latest=false
          tags: |
            type=edge,branch=main
            type=raw,priority=950,enable=${{ startsWith(github.ref, 'refs/heads/release/v') }},value=${{ steps.semver.outputs.semver }}
            type=raw,enable=${{ startsWith(github.ref, 'refs/heads/release/v0.7') }},value=latest
            type=ref,event=branch
          labels: |
            org.opencontainers.image.vendor=Deephaven Data Labs
            org.opencontainers.image.title=Deephaven Web
            org.opencontainers.image.description=Deephaven web
            org.opencontainers.image.licenses=Deephaven Community License Agreement 1.0

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup JDK 17
        id: setup-java-17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }},${{ steps.setup-java-17.outputs.path }}," >> gradle.properties

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver: docker

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Dockerfile and context
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: build-web
          arguments: --scan web-client-ide:prepareDocker
          gradle-version: wrapper

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          context: ./web/client-ide/build/docker/
          push: ${{ github.event_name != 'pull_request' }}


### Notes about `driver: docker`
###
### By default, the driver used is `docker-container`. This does not allow the Dockerfile to
### reference images that were built in earlier steps. Since our grpc-api and web Dockerfiles
### reference earlier images (built during the gradle step), we need to change the driver to
### `docker`.
###
### See https://github.com/docker/buildx/blob/master/docs/reference/buildx_create.md#driver