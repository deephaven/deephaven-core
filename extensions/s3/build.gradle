plugins {
    id 'java-library'
    id 'io.deephaven.project.register'
}

description 'Used to create a channel provider plugin for reading and writing files stored in S3.'

dependencies {
    api project(':util-channel')

    implementation project(':Base')
    implementation project(':Util')
    implementation project(':Configuration')
    implementation project(':log-factory')

    implementation platform('software.amazon.awssdk:bom:2.23.19')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:aws-crt-client'

    compileOnly depAnnotations

    // For OSUtil
    testImplementation project(':Stats')

    Classpaths.inheritAutoService(project)
    Classpaths.inheritImmutables(project)

    Classpaths.inheritJUnitClassic(project, 'testImplementation')
    Classpaths.inheritAssertJ(project)

    testImplementation project(':engine-table')
    testImplementation project(':engine-test-utils')
    testImplementation project(':extensions-parquet-table')

    testImplementation "org.testcontainers:testcontainers:1.19.4"
    testImplementation "org.testcontainers:localstack:1.19.4"
    testImplementation "org.testcontainers:minio:1.19.4"

    testRuntimeOnly project(':test-configs')
    testRuntimeOnly project(':log-to-slf4j')
    Classpaths.inheritSlf4j(project, 'slf4j-simple', 'testRuntimeOnly')
}

TestTools.addEngineOutOfBandTest(project)

testOutOfBand {
    systemProperty 'testcontainers.localstack.image', project.property('testcontainers.localstack.image')
    systemProperty 'testcontainers.minio.image', project.property('testcontainers.minio.image')
}
