plugins {
    id 'java-library'
    id 'io.deephaven.project.register'
}

evaluationDependsOn Docker.registryProject('localstack')
evaluationDependsOn Docker.registryProject('minio')

description 'Used to create a channel provider plugin for reading and writing files stored in S3.'

dependencies {
    api project(':util-channel')

    implementation project(':Base')
    implementation project(':Util')
    implementation project(':Configuration')
    implementation project(':log-factory')

    Classpaths.inheritAWSSDK(project)

    compileOnly depAnnotations

    // For OSUtil
    testImplementation project(':Stats')

    Classpaths.inheritAutoService(project)
    Classpaths.inheritImmutables(project)

    Classpaths.inheritJUnitPlatform(project)
    Classpaths.inheritAssertJ(project)
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'software.amazon.awssdk:s3-transfer-manager'
    Classpaths.inheritTestContainers(project)

    testRuntimeOnly project(':test-configs')
    testRuntimeOnly project(':log-to-slf4j')
    Classpaths.inheritSlf4j(project, 'slf4j-simple', 'testRuntimeOnly')
}

test {
    useJUnitPlatform {
        excludeTags("testcontainers")
    }
}

tasks.register('testOutOfBand', Test) {
    useJUnitPlatform {
        includeTags("testcontainers")
    }

    dependsOn Docker.registryTask(project, 'localstack')
    systemProperty 'testcontainers.localstack.image', Docker.localImageName('localstack')

    dependsOn Docker.registryTask(project, 'minio')
    systemProperty 'testcontainers.minio.image', Docker.localImageName('minio')
}

