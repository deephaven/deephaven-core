QueryCompiler.logEnabledDefault=false
UpdatePerformanceTracker.reportingMode=LISTENER_ONLY
UpdatePerformanceTracker.reportIntervalMillis=60000
measurement.per_thread_cpu=false
allocation.stats.enabled=false
statsdriver.enabled=true

#
# NIO driver thread pool
#
# TODO: if we reach the maximum thread count, the driver will crash the process if it comes
# TODO: to a handoff and there is no thread waiting to become the leader.  The most likely reason
# TODO: for this to happen is a deadlock, but another possibility is a temporary situation in
# TODO: all of the created threads are waiting on RPCs or locks.
#
NIO.driver.workTimeout=100
NIO.driver.initialThreadCount=4
NIO.driver.maxThreadCount=16
NIO.driver.useFast=true

QueryLibrary.defaultPackageImportList=default_package_imports.txt
QueryLibrary.defaultClassImportList=default_class_imports.txt
QueryLibrary.defaultStaticImportList=default_static_imports.txt

StringUtils.cacheSize=0

TrackedFileHandleFactory.maxOpenFiles=1024

###### Time Zone & Calendars #####
timezone.aliases=/default_time_zone_aliases.csv
Calendar.default=UTC
Calendar.importPath=/default_calendar_imports.txt

QueryPerformanceRecorder.packageFilter.internal=defaultPackageFilters.qpr

########## Deephaven Groovy and Python Session defaults ##########

GroovyDeephavenSession.initScripts=

PythonDeephavenSession.initScripts=

default.processEnvironmentFactory=io.deephaven.util.process.DefaultProcessEnvironment$Factory

deephaven.console.type=python

# Default session duration is 5 minutes
http.session.durationMs=300000

# Default to requiring a single password to access the server
AuthHandlers=io.deephaven.authentication.psk.PskAuthenticationHandler
authentication.anonymous.warn=true

web.storage.layout.directory=/layouts
web.storage.notebook.directory=/notebooks

# Enable WebGL support in the web interface, or forcibly disable it and prevent users from enabling it.
web.webgl=true
web.webgl.editable=true

# Default to not flattening web viewports, but allow it as an option
web.flattenViewports=false

# List of configuration properties to provide to unauthenticated clients, so that they can decide how best to prove their
# identity to the server.
authentication.client.configuration.list=AuthHandlers

# List of configuration properties to provide to authenticated clients, so they can interact with the server.
client.configuration.list=java.version,deephaven.version,barrage.version,groovy.version,python.version,http.session.durationMs,file.separator,web.storage.layout.directory,web.storage.notebook.directory,web.webgl,web.webgl.editable,web.flattenViewports

# Version list to add to the configuration property list. Each `=`-delimited pair denotes a short name for a versioned
# jar, and a class that is found in that jar. Any such keys will be made available to the client.configuration.list
# as <key>.version.
client.version.list=deephaven=io.deephaven.engine.table.Table,barrage=io.deephaven.barrage.flatbuf.BarrageMessageWrapper,groovy=groovy.lang.GroovyShell

# Disabled by default, applications should enable this after their TLS certificates are
# deployed and confirmed to work, as disabling this after the fact can result in clients
# remembering the old value for a long time.
http.add.header.Strict-Transport-Security.enabled = false
http.add.header.Strict-Transport-Security.value = max-age=31536000; includeSubDomains

# Disable by default, but can be enabled if iframe widgets will not be used from other origins.
# This can optionally be fine tuned to allow specific origins or same origin loading.
http.add.header.X-Frame-Options.enabled = false
http.add.header.X-Frame-Options.value = DENY

# Disabled by default, this CSP policy prevents embedding pages in an iframe. This is a more
# modern equivalent to the X-Frame-Options header above, and also can be fine tuned to allow
# specific remote origins or same origin.
http.add.header.Content-Security-Policy.enabled = false
http.add.header.Content-Security-Policy.value = frame-ancestors 'none';

# Enabled by default as the risk should be low for breaking other pages. We advise against
# fine tuning this, but instead if it is breaking a specific use case, outright disable it.
# See https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/X-XSS-Protection
# for more information.
http.add.header.X-XSS-Protection.enabled = true
http.add.header.X-XSS-Protection.value = 1; mode=block

# Enabled by default, the server should be able to set all of its own content-type headers
# correctly. It is possible that third-party plugins could cause issues with this, so it can
# be disabled if desired.
http.add.header.X-Content-Type-Options.enabled = true
http.add.header.X-Content-Type-Options.value = nosniff

# Enabled by default, the server doesn't make use of any referrer information. Can be enabled
# as desired to handle other use cases.
http.add.header.Referrer-Policy.enabled = true
http.add.header.Referrer-Policy.value = no-referrer

# Enabled by default, these settings restrict documents loaded from Deephaven-core to block
# no-cors calls and permit running the page in a secure context.
http.add.header.Cross-Origin-Resource-Policy.enabled = true
http.add.header.Cross-Origin-Resource-Policy.value = same-origin
http.add.header.Cross-Origin-Embedder-Policy.enabled = true
http.add.header.Cross-Origin-Embedder-Policy.value = require-corp
http.add.header.Cross-Origin-Opener-Policy.enabled = true
http.add.header.Cross-Origin-Opener-Policy.value = same-origin
