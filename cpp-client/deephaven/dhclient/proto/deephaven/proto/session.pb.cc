// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: deephaven/proto/session.proto
// Protobuf C++ Version: 5.28.1

#include "deephaven/proto/session.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace io {
namespace deephaven {
namespace proto {
namespace backplane {
namespace grpc {

inline constexpr WrappedAuthenticationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WrappedAuthenticationRequest::WrappedAuthenticationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WrappedAuthenticationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WrappedAuthenticationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WrappedAuthenticationRequestDefaultTypeInternal() {}
  union {
    WrappedAuthenticationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WrappedAuthenticationRequestDefaultTypeInternal _WrappedAuthenticationRequest_default_instance_;

inline constexpr TerminationNotificationResponse_StackTrace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : elements_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TerminationNotificationResponse_StackTrace::TerminationNotificationResponse_StackTrace(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TerminationNotificationResponse_StackTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerminationNotificationResponse_StackTraceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerminationNotificationResponse_StackTraceDefaultTypeInternal() {}
  union {
    TerminationNotificationResponse_StackTrace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerminationNotificationResponse_StackTraceDefaultTypeInternal _TerminationNotificationResponse_StackTrace_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TerminationNotificationRequest::TerminationNotificationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TerminationNotificationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerminationNotificationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerminationNotificationRequestDefaultTypeInternal() {}
  union {
    TerminationNotificationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerminationNotificationRequestDefaultTypeInternal _TerminationNotificationRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReleaseResponse::ReleaseResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReleaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseResponseDefaultTypeInternal() {}
  union {
    ReleaseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseResponseDefaultTypeInternal _ReleaseResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PublishResponse::PublishResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PublishResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishResponseDefaultTypeInternal() {}
  union {
    PublishResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishResponseDefaultTypeInternal _PublishResponse_default_instance_;

inline constexpr HandshakeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_header_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_deadline_time_millis_{::int64_t{0}},
        token_expiration_delay_millis_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeResponse::HandshakeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandshakeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeResponseDefaultTypeInternal() {}
  union {
    HandshakeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeResponseDefaultTypeInternal _HandshakeResponse_default_instance_;

inline constexpr HandshakeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auth_protocol_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeRequest::HandshakeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandshakeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeRequestDefaultTypeInternal() {}
  union {
    HandshakeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeRequestDefaultTypeInternal _HandshakeRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ExportResponse::ExportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ExportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportResponseDefaultTypeInternal() {}
  union {
    ExportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportResponseDefaultTypeInternal _ExportResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ExportNotificationRequest::ExportNotificationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ExportNotificationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportNotificationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportNotificationRequestDefaultTypeInternal() {}
  union {
    ExportNotificationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportNotificationRequestDefaultTypeInternal _ExportNotificationRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CloseSessionResponse::CloseSessionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CloseSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseSessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseSessionResponseDefaultTypeInternal() {}
  union {
    CloseSessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseSessionResponseDefaultTypeInternal _CloseSessionResponse_default_instance_;

inline constexpr TerminationNotificationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stack_traces_{},
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        abnormal_termination_{false},
        is_from_uncaught_exception_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TerminationNotificationResponse::TerminationNotificationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TerminationNotificationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerminationNotificationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerminationNotificationResponseDefaultTypeInternal() {}
  union {
    TerminationNotificationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerminationNotificationResponseDefaultTypeInternal _TerminationNotificationResponse_default_instance_;

inline constexpr ReleaseRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseRequest::ReleaseRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReleaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseRequestDefaultTypeInternal() {}
  union {
    ReleaseRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseRequestDefaultTypeInternal _ReleaseRequest_default_instance_;

inline constexpr PublishRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_id_{nullptr},
        result_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PublishRequest::PublishRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PublishRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishRequestDefaultTypeInternal() {}
  union {
    PublishRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishRequestDefaultTypeInternal _PublishRequest_default_instance_;

inline constexpr ExportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_id_{nullptr},
        result_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExportRequest::ExportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportRequestDefaultTypeInternal() {}
  union {
    ExportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportRequestDefaultTypeInternal _ExportRequest_default_instance_;

inline constexpr ExportNotification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        context_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dependent_handle_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ticket_{nullptr},
        export_state_{static_cast< ::io::deephaven::proto::backplane::grpc::ExportNotification_State >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ExportNotification::ExportNotification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportNotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportNotificationDefaultTypeInternal() {}
  union {
    ExportNotification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportNotificationDefaultTypeInternal _ExportNotification_default_instance_;
}  // namespace grpc
}  // namespace backplane
}  // namespace proto
}  // namespace deephaven
}  // namespace io
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_deephaven_2fproto_2fsession_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_deephaven_2fproto_2fsession_2eproto = nullptr;
const ::uint32_t
    TableStruct_deephaven_2fproto_2fsession_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::WrappedAuthenticationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::WrappedAuthenticationRequest, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::WrappedAuthenticationRequest, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeRequest, _impl_.auth_protocol_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeRequest, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeResponse, _impl_.metadata_header_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeResponse, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeResponse, _impl_.token_deadline_time_millis_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::HandshakeResponse, _impl_.token_expiration_delay_millis_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::CloseSessionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ReleaseRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ReleaseRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ReleaseRequest, _impl_.id_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ReleaseResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportRequest, _impl_.source_id_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportRequest, _impl_.result_id_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::PublishRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::PublishRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::PublishRequest, _impl_.source_id_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::PublishRequest, _impl_.result_id_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::PublishResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotificationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotification, _impl_.ticket_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotification, _impl_.export_state_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotification, _impl_.context_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::ExportNotification, _impl_.dependent_handle_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace, _impl_.elements_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse, _impl_.abnormal_termination_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse, _impl_.is_from_uncaught_exception_),
        PROTOBUF_FIELD_OFFSET(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse, _impl_.stack_traces_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::WrappedAuthenticationRequest)},
        {10, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::HandshakeRequest)},
        {20, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::HandshakeResponse)},
        {32, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::CloseSessionResponse)},
        {40, 49, -1, sizeof(::io::deephaven::proto::backplane::grpc::ReleaseRequest)},
        {50, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::ReleaseResponse)},
        {58, 68, -1, sizeof(::io::deephaven::proto::backplane::grpc::ExportRequest)},
        {70, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::ExportResponse)},
        {78, 88, -1, sizeof(::io::deephaven::proto::backplane::grpc::PublishRequest)},
        {90, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::PublishResponse)},
        {98, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::ExportNotificationRequest)},
        {106, 118, -1, sizeof(::io::deephaven::proto::backplane::grpc::ExportNotification)},
        {122, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::TerminationNotificationRequest)},
        {130, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace)},
        {141, -1, -1, sizeof(::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::io::deephaven::proto::backplane::grpc::_WrappedAuthenticationRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_HandshakeRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_HandshakeResponse_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_CloseSessionResponse_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_ReleaseRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_ReleaseResponse_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_ExportRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_ExportResponse_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_PublishRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_PublishResponse_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_ExportNotificationRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_ExportNotification_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_TerminationNotificationRequest_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_TerminationNotificationResponse_StackTrace_default_instance_._instance,
    &::io::deephaven::proto::backplane::grpc::_TerminationNotificationResponse_default_instance_._instance,
};
const char descriptor_table_protodef_deephaven_2fproto_2fsession_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035deephaven/proto/session.proto\022!io.deep"
    "haven.proto.backplane.grpc\032\034deephaven/pr"
    "oto/ticket.proto\"I\n\034WrappedAuthenticatio"
    "nRequest\022\014\n\004type\030\004 \001(\t\022\017\n\007payload\030\005 \001(\014J"
    "\004\010\002\020\003J\004\010\003\020\004\"B\n\020HandshakeRequest\022\031\n\rauth_"
    "protocol\030\001 \001(\021B\002\030\001\022\023\n\007payload\030\002 \001(\014B\002\030\001\""
    "\242\001\n\021HandshakeResponse\022\033\n\017metadata_header"
    "\030\001 \001(\014B\002\030\001\022\031\n\rsession_token\030\002 \001(\014B\002\030\001\022(\n"
    "\032token_deadline_time_millis\030\003 \001(\022B\004\030\0010\001\022"
    "+\n\035token_expiration_delay_millis\030\004 \001(\022B\004"
    "\030\0010\001\"\026\n\024CloseSessionResponse\"G\n\016ReleaseR"
    "equest\0225\n\002id\030\001 \001(\0132).io.deephaven.proto."
    "backplane.grpc.Ticket\"\021\n\017ReleaseResponse"
    "\"\213\001\n\rExportRequest\022<\n\tsource_id\030\001 \001(\0132)."
    "io.deephaven.proto.backplane.grpc.Ticket"
    "\022<\n\tresult_id\030\002 \001(\0132).io.deephaven.proto"
    ".backplane.grpc.Ticket\"\020\n\016ExportResponse"
    "\"\214\001\n\016PublishRequest\022<\n\tsource_id\030\001 \001(\0132)"
    ".io.deephaven.proto.backplane.grpc.Ticke"
    "t\022<\n\tresult_id\030\002 \001(\0132).io.deephaven.prot"
    "o.backplane.grpc.Ticket\"\021\n\017PublishRespon"
    "se\"\033\n\031ExportNotificationRequest\"\267\003\n\022Expo"
    "rtNotification\0229\n\006ticket\030\001 \001(\0132).io.deep"
    "haven.proto.backplane.grpc.Ticket\022Q\n\014exp"
    "ort_state\030\002 \001(\0162;.io.deephaven.proto.bac"
    "kplane.grpc.ExportNotification.State\022\017\n\007"
    "context\030\003 \001(\t\022\030\n\020dependent_handle\030\004 \001(\t\""
    "\347\001\n\005State\022\013\n\007UNKNOWN\020\000\022\013\n\007PENDING\020\001\022\016\n\nP"
    "UBLISHING\020\002\022\n\n\006QUEUED\020\003\022\013\n\007RUNNING\020\004\022\014\n\010"
    "EXPORTED\020\005\022\014\n\010RELEASED\020\006\022\r\n\tCANCELLED\020\007\022"
    "\n\n\006FAILED\020\010\022\025\n\021DEPENDENCY_FAILED\020\t\022\032\n\026DE"
    "PENDENCY_NEVER_FOUND\020\n\022\030\n\024DEPENDENCY_CAN"
    "CELLED\020\013\022\027\n\023DEPENDENCY_RELEASED\020\014\" \n\036Ter"
    "minationNotificationRequest\"\227\002\n\037Terminat"
    "ionNotificationResponse\022\034\n\024abnormal_term"
    "ination\030\001 \001(\010\022\016\n\006reason\030\002 \001(\t\022\"\n\032is_from"
    "_uncaught_exception\030\003 \001(\010\022c\n\014stack_trace"
    "s\030\004 \003(\0132M.io.deephaven.proto.backplane.g"
    "rpc.TerminationNotificationResponse.Stac"
    "kTrace\032=\n\nStackTrace\022\014\n\004type\030\001 \001(\t\022\017\n\007me"
    "ssage\030\002 \001(\t\022\020\n\010elements\030\003 \003(\t2\271\010\n\016Sessio"
    "nService\022|\n\nNewSession\0223.io.deephaven.pr"
    "oto.backplane.grpc.HandshakeRequest\0324.io"
    ".deephaven.proto.backplane.grpc.Handshak"
    "eResponse\"\003\210\002\001\022\205\001\n\023RefreshSessionToken\0223"
    ".io.deephaven.proto.backplane.grpc.Hands"
    "hakeRequest\0324.io.deephaven.proto.backpla"
    "ne.grpc.HandshakeResponse\"\003\210\002\001\022~\n\014CloseS"
    "ession\0223.io.deephaven.proto.backplane.gr"
    "pc.HandshakeRequest\0327.io.deephaven.proto"
    ".backplane.grpc.CloseSessionResponse\"\000\022r"
    "\n\007Release\0221.io.deephaven.proto.backplane"
    ".grpc.ReleaseRequest\0322.io.deephaven.prot"
    "o.backplane.grpc.ReleaseResponse\"\000\022y\n\020Ex"
    "portFromTicket\0220.io.deephaven.proto.back"
    "plane.grpc.ExportRequest\0321.io.deephaven."
    "proto.backplane.grpc.ExportResponse\"\000\022|\n"
    "\021PublishFromTicket\0221.io.deephaven.proto."
    "backplane.grpc.PublishRequest\0322.io.deeph"
    "aven.proto.backplane.grpc.PublishRespons"
    "e\"\000\022\216\001\n\023ExportNotifications\022<.io.deephav"
    "en.proto.backplane.grpc.ExportNotificati"
    "onRequest\0325.io.deephaven.proto.backplane"
    ".grpc.ExportNotification\"\0000\001\022\242\001\n\027Termina"
    "tionNotification\022A.io.deephaven.proto.ba"
    "ckplane.grpc.TerminationNotificationRequ"
    "est\032B.io.deephaven.proto.backplane.grpc."
    "TerminationNotificationResponse\"\000BCH\001P\001Z"
    "=github.com/deephaven/deephaven-core/go/"
    "internal/proto/sessionb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_deephaven_2fproto_2fsession_2eproto_deps[1] =
    {
        &::descriptor_table_deephaven_2fproto_2fticket_2eproto,
};
static ::absl::once_flag descriptor_table_deephaven_2fproto_2fsession_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_deephaven_2fproto_2fsession_2eproto = {
    false,
    false,
    2790,
    descriptor_table_protodef_deephaven_2fproto_2fsession_2eproto,
    "deephaven/proto/session.proto",
    &descriptor_table_deephaven_2fproto_2fsession_2eproto_once,
    descriptor_table_deephaven_2fproto_2fsession_2eproto_deps,
    1,
    15,
    schemas,
    file_default_instances,
    TableStruct_deephaven_2fproto_2fsession_2eproto::offsets,
    file_level_enum_descriptors_deephaven_2fproto_2fsession_2eproto,
    file_level_service_descriptors_deephaven_2fproto_2fsession_2eproto,
};
namespace io {
namespace deephaven {
namespace proto {
namespace backplane {
namespace grpc {
const ::google::protobuf::EnumDescriptor* ExportNotification_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_deephaven_2fproto_2fsession_2eproto);
  return file_level_enum_descriptors_deephaven_2fproto_2fsession_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ExportNotification_State_internal_data_[] = {
    851968u, 0u, };
bool ExportNotification_State_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ExportNotification_State ExportNotification::UNKNOWN;
constexpr ExportNotification_State ExportNotification::PENDING;
constexpr ExportNotification_State ExportNotification::PUBLISHING;
constexpr ExportNotification_State ExportNotification::QUEUED;
constexpr ExportNotification_State ExportNotification::RUNNING;
constexpr ExportNotification_State ExportNotification::EXPORTED;
constexpr ExportNotification_State ExportNotification::RELEASED;
constexpr ExportNotification_State ExportNotification::CANCELLED;
constexpr ExportNotification_State ExportNotification::FAILED;
constexpr ExportNotification_State ExportNotification::DEPENDENCY_FAILED;
constexpr ExportNotification_State ExportNotification::DEPENDENCY_NEVER_FOUND;
constexpr ExportNotification_State ExportNotification::DEPENDENCY_CANCELLED;
constexpr ExportNotification_State ExportNotification::DEPENDENCY_RELEASED;
constexpr ExportNotification_State ExportNotification::State_MIN;
constexpr ExportNotification_State ExportNotification::State_MAX;
constexpr int ExportNotification::State_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class WrappedAuthenticationRequest::_Internal {
 public:
};

WrappedAuthenticationRequest::WrappedAuthenticationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
}
inline PROTOBUF_NDEBUG_INLINE WrappedAuthenticationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::WrappedAuthenticationRequest& from_msg)
      : type_(arena, from.type_),
        payload_(arena, from.payload_),
        _cached_size_{0} {}

WrappedAuthenticationRequest::WrappedAuthenticationRequest(
    ::google::protobuf::Arena* arena,
    const WrappedAuthenticationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WrappedAuthenticationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
}
inline PROTOBUF_NDEBUG_INLINE WrappedAuthenticationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        payload_(arena),
        _cached_size_{0} {}

inline void WrappedAuthenticationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WrappedAuthenticationRequest::~WrappedAuthenticationRequest() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WrappedAuthenticationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WrappedAuthenticationRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WrappedAuthenticationRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WrappedAuthenticationRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WrappedAuthenticationRequest>(),
            ::google::protobuf::Message::GetNewImpl<WrappedAuthenticationRequest>(),
            ::google::protobuf::Message::GetClearImpl<WrappedAuthenticationRequest>(), &WrappedAuthenticationRequest::ByteSizeLong,
                &WrappedAuthenticationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WrappedAuthenticationRequest, _impl_._cached_size_),
            false,
        },
        &WrappedAuthenticationRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WrappedAuthenticationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 75, 2> WrappedAuthenticationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967271,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::WrappedAuthenticationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WrappedAuthenticationRequest, _impl_.type_)}},
    // bytes payload = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WrappedAuthenticationRequest, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 4;
    {PROTOBUF_FIELD_OFFSET(WrappedAuthenticationRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes payload = 5;
    {PROTOBUF_FIELD_OFFSET(WrappedAuthenticationRequest, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\76\4\0\0\0\0\0\0"
    "io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest"
    "type"
  }},
};

PROTOBUF_NOINLINE void WrappedAuthenticationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WrappedAuthenticationRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WrappedAuthenticationRequest& this_ = static_cast<const WrappedAuthenticationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WrappedAuthenticationRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WrappedAuthenticationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 4;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest.type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bytes payload = 5;
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WrappedAuthenticationRequest::ByteSizeLong(const MessageLite& base) {
          const WrappedAuthenticationRequest& this_ = static_cast<const WrappedAuthenticationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WrappedAuthenticationRequest::ByteSizeLong() const {
          const WrappedAuthenticationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 4;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // bytes payload = 5;
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_payload());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WrappedAuthenticationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WrappedAuthenticationRequest*>(&to_msg);
  auto& from = static_cast<const WrappedAuthenticationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WrappedAuthenticationRequest::CopyFrom(const WrappedAuthenticationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.WrappedAuthenticationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WrappedAuthenticationRequest::InternalSwap(WrappedAuthenticationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
}

::google::protobuf::Metadata WrappedAuthenticationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeRequest::_Internal {
 public:
};

HandshakeRequest::HandshakeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.HandshakeRequest)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::HandshakeRequest& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

HandshakeRequest::HandshakeRequest(
    ::google::protobuf::Arena* arena,
    const HandshakeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandshakeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.auth_protocol_ = from._impl_.auth_protocol_;

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.HandshakeRequest)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void HandshakeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.auth_protocol_ = {};
}
HandshakeRequest::~HandshakeRequest() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.HandshakeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    HandshakeRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_HandshakeRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &HandshakeRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<HandshakeRequest>(),
            ::google::protobuf::Message::GetNewImpl<HandshakeRequest>(),
            ::google::protobuf::Message::GetClearImpl<HandshakeRequest>(), &HandshakeRequest::ByteSizeLong,
                &HandshakeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(HandshakeRequest, _impl_._cached_size_),
            false,
        },
        &HandshakeRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* HandshakeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> HandshakeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::HandshakeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes payload = 2 [deprecated = true];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeRequest, _impl_.payload_)}},
    // sint32 auth_protocol = 1 [deprecated = true];
    {::_pbi::TcParser::FastZ32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeRequest, _impl_.auth_protocol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // sint32 auth_protocol = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HandshakeRequest, _impl_.auth_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // bytes payload = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HandshakeRequest, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.HandshakeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.auth_protocol_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandshakeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandshakeRequest& this_ = static_cast<const HandshakeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandshakeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandshakeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.HandshakeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // sint32 auth_protocol = 1 [deprecated = true];
          if (this_._internal_auth_protocol() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                1, this_._internal_auth_protocol(), target);
          }

          // bytes payload = 2 [deprecated = true];
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.HandshakeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandshakeRequest::ByteSizeLong(const MessageLite& base) {
          const HandshakeRequest& this_ = static_cast<const HandshakeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandshakeRequest::ByteSizeLong() const {
          const HandshakeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.HandshakeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes payload = 2 [deprecated = true];
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_payload());
            }
            // sint32 auth_protocol = 1 [deprecated = true];
            if (this_._internal_auth_protocol() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_auth_protocol());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandshakeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeRequest*>(&to_msg);
  auto& from = static_cast<const HandshakeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.HandshakeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_auth_protocol() != 0) {
    _this->_impl_.auth_protocol_ = from._impl_.auth_protocol_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeRequest::CopyFrom(const HandshakeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.HandshakeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeRequest::InternalSwap(HandshakeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
        swap(_impl_.auth_protocol_, other->_impl_.auth_protocol_);
}

::google::protobuf::Metadata HandshakeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeResponse::_Internal {
 public:
};

HandshakeResponse::HandshakeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.HandshakeResponse)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::HandshakeResponse& from_msg)
      : metadata_header_(arena, from.metadata_header_),
        session_token_(arena, from.session_token_),
        _cached_size_{0} {}

HandshakeResponse::HandshakeResponse(
    ::google::protobuf::Arena* arena,
    const HandshakeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandshakeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, token_deadline_time_millis_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, token_deadline_time_millis_),
           offsetof(Impl_, token_expiration_delay_millis_) -
               offsetof(Impl_, token_deadline_time_millis_) +
               sizeof(Impl_::token_expiration_delay_millis_));

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.HandshakeResponse)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_header_(arena),
        session_token_(arena),
        _cached_size_{0} {}

inline void HandshakeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, token_deadline_time_millis_),
           0,
           offsetof(Impl_, token_expiration_delay_millis_) -
               offsetof(Impl_, token_deadline_time_millis_) +
               sizeof(Impl_::token_expiration_delay_millis_));
}
HandshakeResponse::~HandshakeResponse() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.HandshakeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.metadata_header_.Destroy();
  _impl_.session_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    HandshakeResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_HandshakeResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &HandshakeResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<HandshakeResponse>(),
            ::google::protobuf::Message::GetNewImpl<HandshakeResponse>(),
            ::google::protobuf::Message::GetClearImpl<HandshakeResponse>(), &HandshakeResponse::ByteSizeLong,
                &HandshakeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_._cached_size_),
            false,
        },
        &HandshakeResponse::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* HandshakeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> HandshakeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::HandshakeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // sint64 token_expiration_delay_millis = 4 [deprecated = true, jstype = JS_STRING];
    {::_pbi::TcParser::FastZ64S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.token_expiration_delay_millis_)}},
    // bytes metadata_header = 1 [deprecated = true];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.metadata_header_)}},
    // bytes session_token = 2 [deprecated = true];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.session_token_)}},
    // sint64 token_deadline_time_millis = 3 [deprecated = true, jstype = JS_STRING];
    {::_pbi::TcParser::FastZ64S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.token_deadline_time_millis_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes metadata_header = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.metadata_header_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes session_token = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.session_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // sint64 token_deadline_time_millis = 3 [deprecated = true, jstype = JS_STRING];
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.token_deadline_time_millis_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // sint64 token_expiration_delay_millis = 4 [deprecated = true, jstype = JS_STRING];
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.token_expiration_delay_millis_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.HandshakeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_header_.ClearToEmpty();
  _impl_.session_token_.ClearToEmpty();
  ::memset(&_impl_.token_deadline_time_millis_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.token_expiration_delay_millis_) -
      reinterpret_cast<char*>(&_impl_.token_deadline_time_millis_)) + sizeof(_impl_.token_expiration_delay_millis_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandshakeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandshakeResponse& this_ = static_cast<const HandshakeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandshakeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandshakeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.HandshakeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes metadata_header = 1 [deprecated = true];
          if (!this_._internal_metadata_header().empty()) {
            const std::string& _s = this_._internal_metadata_header();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes session_token = 2 [deprecated = true];
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // sint64 token_deadline_time_millis = 3 [deprecated = true, jstype = JS_STRING];
          if (this_._internal_token_deadline_time_millis() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
                3, this_._internal_token_deadline_time_millis(), target);
          }

          // sint64 token_expiration_delay_millis = 4 [deprecated = true, jstype = JS_STRING];
          if (this_._internal_token_expiration_delay_millis() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
                4, this_._internal_token_expiration_delay_millis(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.HandshakeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandshakeResponse::ByteSizeLong(const MessageLite& base) {
          const HandshakeResponse& this_ = static_cast<const HandshakeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandshakeResponse::ByteSizeLong() const {
          const HandshakeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.HandshakeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes metadata_header = 1 [deprecated = true];
            if (!this_._internal_metadata_header().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_metadata_header());
            }
            // bytes session_token = 2 [deprecated = true];
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_session_token());
            }
            // sint64 token_deadline_time_millis = 3 [deprecated = true, jstype = JS_STRING];
            if (this_._internal_token_deadline_time_millis() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
                  this_._internal_token_deadline_time_millis());
            }
            // sint64 token_expiration_delay_millis = 4 [deprecated = true, jstype = JS_STRING];
            if (this_._internal_token_expiration_delay_millis() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
                  this_._internal_token_expiration_delay_millis());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandshakeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeResponse*>(&to_msg);
  auto& from = static_cast<const HandshakeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.HandshakeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_metadata_header().empty()) {
    _this->_internal_set_metadata_header(from._internal_metadata_header());
  }
  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  if (from._internal_token_deadline_time_millis() != 0) {
    _this->_impl_.token_deadline_time_millis_ = from._impl_.token_deadline_time_millis_;
  }
  if (from._internal_token_expiration_delay_millis() != 0) {
    _this->_impl_.token_expiration_delay_millis_ = from._impl_.token_expiration_delay_millis_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeResponse::CopyFrom(const HandshakeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.HandshakeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeResponse::InternalSwap(HandshakeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_header_, &other->_impl_.metadata_header_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.token_expiration_delay_millis_)
      + sizeof(HandshakeResponse::_impl_.token_expiration_delay_millis_)
      - PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.token_deadline_time_millis_)>(
          reinterpret_cast<char*>(&_impl_.token_deadline_time_millis_),
          reinterpret_cast<char*>(&other->_impl_.token_deadline_time_millis_));
}

::google::protobuf::Metadata HandshakeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CloseSessionResponse::_Internal {
 public:
};

CloseSessionResponse::CloseSessionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.CloseSessionResponse)
}
CloseSessionResponse::CloseSessionResponse(
    ::google::protobuf::Arena* arena,
    const CloseSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CloseSessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.CloseSessionResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CloseSessionResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CloseSessionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CloseSessionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<CloseSessionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CloseSessionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CloseSessionResponse>(), &CloseSessionResponse::ByteSizeLong,
                &CloseSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CloseSessionResponse, _impl_._cached_size_),
            false,
        },
        &CloseSessionResponse::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CloseSessionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CloseSessionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::CloseSessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata CloseSessionResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleaseRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ReleaseRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ReleaseRequest, _impl_._has_bits_);
};

void ReleaseRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ReleaseRequest::ReleaseRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.ReleaseRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReleaseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::ReleaseRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ReleaseRequest::ReleaseRequest(
    ::google::protobuf::Arena* arena,
    const ReleaseRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReleaseRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(
                              arena, *from._impl_.id_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.ReleaseRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReleaseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReleaseRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
ReleaseRequest::~ReleaseRequest() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.ReleaseRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReleaseRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.id_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ReleaseRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ReleaseRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ReleaseRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ReleaseRequest>(),
            ::google::protobuf::Message::GetNewImpl<ReleaseRequest>(),
            ::google::protobuf::Message::GetClearImpl<ReleaseRequest>(), &ReleaseRequest::ByteSizeLong,
                &ReleaseRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ReleaseRequest, _impl_._cached_size_),
            false,
        },
        &ReleaseRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ReleaseRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ReleaseRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReleaseRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::ReleaseRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .io.deephaven.proto.backplane.grpc.Ticket id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ReleaseRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .io.deephaven.proto.backplane.grpc.Ticket id = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::Ticket>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ReleaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.ReleaseRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.id_ != nullptr);
    _impl_.id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReleaseRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReleaseRequest& this_ = static_cast<const ReleaseRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReleaseRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReleaseRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.ReleaseRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .io.deephaven.proto.backplane.grpc.Ticket id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.id_, this_._impl_.id_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.ReleaseRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReleaseRequest::ByteSizeLong(const MessageLite& base) {
          const ReleaseRequest& this_ = static_cast<const ReleaseRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReleaseRequest::ByteSizeLong() const {
          const ReleaseRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.ReleaseRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .io.deephaven.proto.backplane.grpc.Ticket id = 1;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.id_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReleaseRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseRequest*>(&to_msg);
  auto& from = static_cast<const ReleaseRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.ReleaseRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.id_ != nullptr);
    if (_this->_impl_.id_ == nullptr) {
      _this->_impl_.id_ =
          ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(arena, *from._impl_.id_);
    } else {
      _this->_impl_.id_->MergeFrom(*from._impl_.id_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseRequest::CopyFrom(const ReleaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.ReleaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReleaseRequest::InternalSwap(ReleaseRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata ReleaseRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleaseResponse::_Internal {
 public:
};

ReleaseResponse::ReleaseResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.ReleaseResponse)
}
ReleaseResponse::ReleaseResponse(
    ::google::protobuf::Arena* arena,
    const ReleaseResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReleaseResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.ReleaseResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ReleaseResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_ReleaseResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ReleaseResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<ReleaseResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ReleaseResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ReleaseResponse>(), &ReleaseResponse::ByteSizeLong,
                &ReleaseResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ReleaseResponse, _impl_._cached_size_),
            false,
        },
        &ReleaseResponse::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ReleaseResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ReleaseResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::ReleaseResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ReleaseResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_._has_bits_);
};

void ExportRequest::clear_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_id_ != nullptr) _impl_.source_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ExportRequest::clear_result_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_id_ != nullptr) _impl_.result_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ExportRequest::ExportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.ExportRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::ExportRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ExportRequest::ExportRequest(
    ::google::protobuf::Arena* arena,
    const ExportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(
                              arena, *from._impl_.source_id_)
                        : nullptr;
  _impl_.result_id_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(
                              arena, *from._impl_.result_id_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.ExportRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_id_),
           0,
           offsetof(Impl_, result_id_) -
               offsetof(Impl_, source_id_) +
               sizeof(Impl_::result_id_));
}
ExportRequest::~ExportRequest() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.ExportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.source_id_;
  delete _impl_.result_id_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ExportRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ExportRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ExportRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ExportRequest>(),
            ::google::protobuf::Message::GetNewImpl<ExportRequest>(),
            ::google::protobuf::Message::GetClearImpl<ExportRequest>(), &ExportRequest::ByteSizeLong,
                &ExportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_._cached_size_),
            false,
        },
        &ExportRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ExportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ExportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::ExportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_.result_id_)}},
    // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_.source_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
    {PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_.source_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
    {PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_.result_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::Ticket>()},
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::Ticket>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.ExportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.source_id_ != nullptr);
      _impl_.source_id_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.result_id_ != nullptr);
      _impl_.result_id_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportRequest& this_ = static_cast<const ExportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.ExportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.source_id_, this_._impl_.source_id_->GetCachedSize(), target,
                stream);
          }

          // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.result_id_, this_._impl_.result_id_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.ExportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportRequest::ByteSizeLong(const MessageLite& base) {
          const ExportRequest& this_ = static_cast<const ExportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportRequest::ByteSizeLong() const {
          const ExportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.ExportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.source_id_);
            }
            // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_id_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportRequest*>(&to_msg);
  auto& from = static_cast<const ExportRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.ExportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.source_id_ != nullptr);
      if (_this->_impl_.source_id_ == nullptr) {
        _this->_impl_.source_id_ =
            ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(arena, *from._impl_.source_id_);
      } else {
        _this->_impl_.source_id_->MergeFrom(*from._impl_.source_id_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.result_id_ != nullptr);
      if (_this->_impl_.result_id_ == nullptr) {
        _this->_impl_.result_id_ =
            ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(arena, *from._impl_.result_id_);
      } else {
        _this->_impl_.result_id_->MergeFrom(*from._impl_.result_id_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportRequest::CopyFrom(const ExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.ExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportRequest::InternalSwap(ExportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_.result_id_)
      + sizeof(ExportRequest::_impl_.result_id_)
      - PROTOBUF_FIELD_OFFSET(ExportRequest, _impl_.source_id_)>(
          reinterpret_cast<char*>(&_impl_.source_id_),
          reinterpret_cast<char*>(&other->_impl_.source_id_));
}

::google::protobuf::Metadata ExportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportResponse::_Internal {
 public:
};

ExportResponse::ExportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.ExportResponse)
}
ExportResponse::ExportResponse(
    ::google::protobuf::Arena* arena,
    const ExportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.ExportResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ExportResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_ExportResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ExportResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<ExportResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ExportResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ExportResponse>(), &ExportResponse::ByteSizeLong,
                &ExportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ExportResponse, _impl_._cached_size_),
            false,
        },
        &ExportResponse::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ExportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ExportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::ExportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ExportResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PublishRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PublishRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_._has_bits_);
};

void PublishRequest::clear_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_id_ != nullptr) _impl_.source_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PublishRequest::clear_result_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_id_ != nullptr) _impl_.result_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PublishRequest::PublishRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.PublishRequest)
}
inline PROTOBUF_NDEBUG_INLINE PublishRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::PublishRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PublishRequest::PublishRequest(
    ::google::protobuf::Arena* arena,
    const PublishRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PublishRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(
                              arena, *from._impl_.source_id_)
                        : nullptr;
  _impl_.result_id_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(
                              arena, *from._impl_.result_id_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.PublishRequest)
}
inline PROTOBUF_NDEBUG_INLINE PublishRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PublishRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_id_),
           0,
           offsetof(Impl_, result_id_) -
               offsetof(Impl_, source_id_) +
               sizeof(Impl_::result_id_));
}
PublishRequest::~PublishRequest() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.PublishRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PublishRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.source_id_;
  delete _impl_.result_id_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PublishRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PublishRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PublishRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PublishRequest>(),
            ::google::protobuf::Message::GetNewImpl<PublishRequest>(),
            ::google::protobuf::Message::GetClearImpl<PublishRequest>(), &PublishRequest::ByteSizeLong,
                &PublishRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_._cached_size_),
            false,
        },
        &PublishRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PublishRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PublishRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::PublishRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.result_id_)}},
    // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.source_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
    {PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.source_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
    {PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.result_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::Ticket>()},
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::Ticket>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PublishRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.PublishRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.source_id_ != nullptr);
      _impl_.source_id_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.result_id_ != nullptr);
      _impl_.result_id_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PublishRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PublishRequest& this_ = static_cast<const PublishRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PublishRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PublishRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.PublishRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.source_id_, this_._impl_.source_id_->GetCachedSize(), target,
                stream);
          }

          // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.result_id_, this_._impl_.result_id_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.PublishRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PublishRequest::ByteSizeLong(const MessageLite& base) {
          const PublishRequest& this_ = static_cast<const PublishRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PublishRequest::ByteSizeLong() const {
          const PublishRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.PublishRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .io.deephaven.proto.backplane.grpc.Ticket source_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.source_id_);
            }
            // .io.deephaven.proto.backplane.grpc.Ticket result_id = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_id_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PublishRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PublishRequest*>(&to_msg);
  auto& from = static_cast<const PublishRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.PublishRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.source_id_ != nullptr);
      if (_this->_impl_.source_id_ == nullptr) {
        _this->_impl_.source_id_ =
            ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(arena, *from._impl_.source_id_);
      } else {
        _this->_impl_.source_id_->MergeFrom(*from._impl_.source_id_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.result_id_ != nullptr);
      if (_this->_impl_.result_id_ == nullptr) {
        _this->_impl_.result_id_ =
            ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(arena, *from._impl_.result_id_);
      } else {
        _this->_impl_.result_id_->MergeFrom(*from._impl_.result_id_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PublishRequest::CopyFrom(const PublishRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.PublishRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PublishRequest::InternalSwap(PublishRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.result_id_)
      + sizeof(PublishRequest::_impl_.result_id_)
      - PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.source_id_)>(
          reinterpret_cast<char*>(&_impl_.source_id_),
          reinterpret_cast<char*>(&other->_impl_.source_id_));
}

::google::protobuf::Metadata PublishRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PublishResponse::_Internal {
 public:
};

PublishResponse::PublishResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.PublishResponse)
}
PublishResponse::PublishResponse(
    ::google::protobuf::Arena* arena,
    const PublishResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PublishResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.PublishResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PublishResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_PublishResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PublishResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<PublishResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PublishResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PublishResponse>(), &PublishResponse::ByteSizeLong,
                &PublishResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PublishResponse, _impl_._cached_size_),
            false,
        },
        &PublishResponse::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PublishResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PublishResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::PublishResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PublishResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportNotificationRequest::_Internal {
 public:
};

ExportNotificationRequest::ExportNotificationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.ExportNotificationRequest)
}
ExportNotificationRequest::ExportNotificationRequest(
    ::google::protobuf::Arena* arena,
    const ExportNotificationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportNotificationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.ExportNotificationRequest)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ExportNotificationRequest::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_ExportNotificationRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ExportNotificationRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<ExportNotificationRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ExportNotificationRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ExportNotificationRequest>(), &ExportNotificationRequest::ByteSizeLong,
                &ExportNotificationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ExportNotificationRequest, _impl_._cached_size_),
            false,
        },
        &ExportNotificationRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ExportNotificationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ExportNotificationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::ExportNotificationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ExportNotificationRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportNotification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExportNotification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_._has_bits_);
};

void ExportNotification::clear_ticket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ticket_ != nullptr) _impl_.ticket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ExportNotification::ExportNotification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.ExportNotification)
}
inline PROTOBUF_NDEBUG_INLINE ExportNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::ExportNotification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        context_(arena, from.context_),
        dependent_handle_(arena, from.dependent_handle_) {}

ExportNotification::ExportNotification(
    ::google::protobuf::Arena* arena,
    const ExportNotification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportNotification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ticket_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(
                              arena, *from._impl_.ticket_)
                        : nullptr;
  _impl_.export_state_ = from._impl_.export_state_;

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.ExportNotification)
}
inline PROTOBUF_NDEBUG_INLINE ExportNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        context_(arena),
        dependent_handle_(arena) {}

inline void ExportNotification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ticket_),
           0,
           offsetof(Impl_, export_state_) -
               offsetof(Impl_, ticket_) +
               sizeof(Impl_::export_state_));
}
ExportNotification::~ExportNotification() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.ExportNotification)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExportNotification::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.context_.Destroy();
  _impl_.dependent_handle_.Destroy();
  delete _impl_.ticket_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ExportNotification::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ExportNotification_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ExportNotification::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ExportNotification>(),
            ::google::protobuf::Message::GetNewImpl<ExportNotification>(),
            ::google::protobuf::Message::GetClearImpl<ExportNotification>(), &ExportNotification::ByteSizeLong,
                &ExportNotification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_._cached_size_),
            false,
        },
        &ExportNotification::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ExportNotification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 84, 2> ExportNotification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::ExportNotification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string dependent_handle = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.dependent_handle_)}},
    // .io.deephaven.proto.backplane.grpc.Ticket ticket = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.ticket_)}},
    // .io.deephaven.proto.backplane.grpc.ExportNotification.State export_state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExportNotification, _impl_.export_state_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.export_state_)}},
    // string context = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.context_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .io.deephaven.proto.backplane.grpc.Ticket ticket = 1;
    {PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.ticket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .io.deephaven.proto.backplane.grpc.ExportNotification.State export_state = 2;
    {PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.export_state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string context = 3;
    {PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.context_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dependent_handle = 4;
    {PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.dependent_handle_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::Ticket>()},
  }}, {{
    "\64\0\0\7\20\0\0\0"
    "io.deephaven.proto.backplane.grpc.ExportNotification"
    "context"
    "dependent_handle"
  }},
};

PROTOBUF_NOINLINE void ExportNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.ExportNotification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_.ClearToEmpty();
  _impl_.dependent_handle_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ticket_ != nullptr);
    _impl_.ticket_->Clear();
  }
  _impl_.export_state_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportNotification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportNotification& this_ = static_cast<const ExportNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportNotification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.ExportNotification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .io.deephaven.proto.backplane.grpc.Ticket ticket = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.ticket_, this_._impl_.ticket_->GetCachedSize(), target,
                stream);
          }

          // .io.deephaven.proto.backplane.grpc.ExportNotification.State export_state = 2;
          if (this_._internal_export_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_export_state(), target);
          }

          // string context = 3;
          if (!this_._internal_context().empty()) {
            const std::string& _s = this_._internal_context();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.ExportNotification.context");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string dependent_handle = 4;
          if (!this_._internal_dependent_handle().empty()) {
            const std::string& _s = this_._internal_dependent_handle();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.ExportNotification.dependent_handle");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.ExportNotification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportNotification::ByteSizeLong(const MessageLite& base) {
          const ExportNotification& this_ = static_cast<const ExportNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportNotification::ByteSizeLong() const {
          const ExportNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.ExportNotification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string context = 3;
            if (!this_._internal_context().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_context());
            }
            // string dependent_handle = 4;
            if (!this_._internal_dependent_handle().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dependent_handle());
            }
          }
           {
            // .io.deephaven.proto.backplane.grpc.Ticket ticket = 1;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ticket_);
            }
          }
           {
            // .io.deephaven.proto.backplane.grpc.ExportNotification.State export_state = 2;
            if (this_._internal_export_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_export_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportNotification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportNotification*>(&to_msg);
  auto& from = static_cast<const ExportNotification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.ExportNotification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_context().empty()) {
    _this->_internal_set_context(from._internal_context());
  }
  if (!from._internal_dependent_handle().empty()) {
    _this->_internal_set_dependent_handle(from._internal_dependent_handle());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ticket_ != nullptr);
    if (_this->_impl_.ticket_ == nullptr) {
      _this->_impl_.ticket_ =
          ::google::protobuf::Message::CopyConstruct<::io::deephaven::proto::backplane::grpc::Ticket>(arena, *from._impl_.ticket_);
    } else {
      _this->_impl_.ticket_->MergeFrom(*from._impl_.ticket_);
    }
  }
  if (from._internal_export_state() != 0) {
    _this->_impl_.export_state_ = from._impl_.export_state_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportNotification::CopyFrom(const ExportNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.ExportNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportNotification::InternalSwap(ExportNotification* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.context_, &other->_impl_.context_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dependent_handle_, &other->_impl_.dependent_handle_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.export_state_)
      + sizeof(ExportNotification::_impl_.export_state_)
      - PROTOBUF_FIELD_OFFSET(ExportNotification, _impl_.ticket_)>(
          reinterpret_cast<char*>(&_impl_.ticket_),
          reinterpret_cast<char*>(&other->_impl_.ticket_));
}

::google::protobuf::Metadata ExportNotification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TerminationNotificationRequest::_Internal {
 public:
};

TerminationNotificationRequest::TerminationNotificationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.TerminationNotificationRequest)
}
TerminationNotificationRequest::TerminationNotificationRequest(
    ::google::protobuf::Arena* arena,
    const TerminationNotificationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TerminationNotificationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.TerminationNotificationRequest)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TerminationNotificationRequest::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_TerminationNotificationRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TerminationNotificationRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<TerminationNotificationRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<TerminationNotificationRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<TerminationNotificationRequest>(), &TerminationNotificationRequest::ByteSizeLong,
                &TerminationNotificationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TerminationNotificationRequest, _impl_._cached_size_),
            false,
        },
        &TerminationNotificationRequest::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TerminationNotificationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TerminationNotificationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::TerminationNotificationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata TerminationNotificationRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TerminationNotificationResponse_StackTrace::_Internal {
 public:
};

TerminationNotificationResponse_StackTrace::TerminationNotificationResponse_StackTrace(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
}
inline PROTOBUF_NDEBUG_INLINE TerminationNotificationResponse_StackTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace& from_msg)
      : elements_{visibility, arena, from.elements_},
        type_(arena, from.type_),
        message_(arena, from.message_),
        _cached_size_{0} {}

TerminationNotificationResponse_StackTrace::TerminationNotificationResponse_StackTrace(
    ::google::protobuf::Arena* arena,
    const TerminationNotificationResponse_StackTrace& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TerminationNotificationResponse_StackTrace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
}
inline PROTOBUF_NDEBUG_INLINE TerminationNotificationResponse_StackTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : elements_{visibility, arena},
        type_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void TerminationNotificationResponse_StackTrace::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TerminationNotificationResponse_StackTrace::~TerminationNotificationResponse_StackTrace() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TerminationNotificationResponse_StackTrace::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TerminationNotificationResponse_StackTrace::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TerminationNotificationResponse_StackTrace_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TerminationNotificationResponse_StackTrace::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TerminationNotificationResponse_StackTrace>(),
            ::google::protobuf::Message::GetNewImpl<TerminationNotificationResponse_StackTrace>(),
            ::google::protobuf::Message::GetClearImpl<TerminationNotificationResponse_StackTrace>(), &TerminationNotificationResponse_StackTrace::ByteSizeLong,
                &TerminationNotificationResponse_StackTrace::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_._cached_size_),
            false,
        },
        &TerminationNotificationResponse_StackTrace::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TerminationNotificationResponse_StackTrace::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 104, 2> TerminationNotificationResponse_StackTrace::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_.type_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_.message_)}},
    // repeated string elements = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_.elements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string elements = 3;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse_StackTrace, _impl_.elements_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\114\4\7\10\0\0\0\0"
    "io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace"
    "type"
    "message"
    "elements"
  }},
};

PROTOBUF_NOINLINE void TerminationNotificationResponse_StackTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elements_.Clear();
  _impl_.type_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TerminationNotificationResponse_StackTrace::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TerminationNotificationResponse_StackTrace& this_ = static_cast<const TerminationNotificationResponse_StackTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TerminationNotificationResponse_StackTrace::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TerminationNotificationResponse_StackTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string elements = 3;
          for (int i = 0, n = this_._internal_elements_size(); i < n; ++i) {
            const auto& s = this_._internal_elements().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace.elements");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TerminationNotificationResponse_StackTrace::ByteSizeLong(const MessageLite& base) {
          const TerminationNotificationResponse_StackTrace& this_ = static_cast<const TerminationNotificationResponse_StackTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TerminationNotificationResponse_StackTrace::ByteSizeLong() const {
          const TerminationNotificationResponse_StackTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string elements = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_elements().size());
              for (int i = 0, n = this_._internal_elements().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_elements().Get(i));
              }
            }
          }
           {
            // string type = 1;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TerminationNotificationResponse_StackTrace::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TerminationNotificationResponse_StackTrace*>(&to_msg);
  auto& from = static_cast<const TerminationNotificationResponse_StackTrace&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_elements()->MergeFrom(from._internal_elements());
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TerminationNotificationResponse_StackTrace::CopyFrom(const TerminationNotificationResponse_StackTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TerminationNotificationResponse_StackTrace::InternalSwap(TerminationNotificationResponse_StackTrace* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.elements_.InternalSwap(&other->_impl_.elements_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata TerminationNotificationResponse_StackTrace::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TerminationNotificationResponse::_Internal {
 public:
};

TerminationNotificationResponse::TerminationNotificationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
}
inline PROTOBUF_NDEBUG_INLINE TerminationNotificationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse& from_msg)
      : stack_traces_{visibility, arena, from.stack_traces_},
        reason_(arena, from.reason_),
        _cached_size_{0} {}

TerminationNotificationResponse::TerminationNotificationResponse(
    ::google::protobuf::Arena* arena,
    const TerminationNotificationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TerminationNotificationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, abnormal_termination_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, abnormal_termination_),
           offsetof(Impl_, is_from_uncaught_exception_) -
               offsetof(Impl_, abnormal_termination_) +
               sizeof(Impl_::is_from_uncaught_exception_));

  // @@protoc_insertion_point(copy_constructor:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
}
inline PROTOBUF_NDEBUG_INLINE TerminationNotificationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stack_traces_{visibility, arena},
        reason_(arena),
        _cached_size_{0} {}

inline void TerminationNotificationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, abnormal_termination_),
           0,
           offsetof(Impl_, is_from_uncaught_exception_) -
               offsetof(Impl_, abnormal_termination_) +
               sizeof(Impl_::is_from_uncaught_exception_));
}
TerminationNotificationResponse::~TerminationNotificationResponse() {
  // @@protoc_insertion_point(destructor:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TerminationNotificationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TerminationNotificationResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TerminationNotificationResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TerminationNotificationResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TerminationNotificationResponse>(),
            ::google::protobuf::Message::GetNewImpl<TerminationNotificationResponse>(),
            ::google::protobuf::Message::GetClearImpl<TerminationNotificationResponse>(), &TerminationNotificationResponse::ByteSizeLong,
                &TerminationNotificationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_._cached_size_),
            false,
        },
        &TerminationNotificationResponse::kDescriptorMethods,
        &descriptor_table_deephaven_2fproto_2fsession_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TerminationNotificationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 80, 2> TerminationNotificationResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace stack_traces = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.stack_traces_)}},
    // bool abnormal_termination = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TerminationNotificationResponse, _impl_.abnormal_termination_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.abnormal_termination_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.reason_)}},
    // bool is_from_uncaught_exception = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TerminationNotificationResponse, _impl_.is_from_uncaught_exception_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.is_from_uncaught_exception_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool abnormal_termination = 1;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.abnormal_termination_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_from_uncaught_exception = 3;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.is_from_uncaught_exception_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace stack_traces = 4;
    {PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.stack_traces_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::io::deephaven::proto::backplane::grpc::TerminationNotificationResponse_StackTrace>()},
  }}, {{
    "\101\0\6\0\0\0\0\0"
    "io.deephaven.proto.backplane.grpc.TerminationNotificationResponse"
    "reason"
  }},
};

PROTOBUF_NOINLINE void TerminationNotificationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stack_traces_.Clear();
  _impl_.reason_.ClearToEmpty();
  ::memset(&_impl_.abnormal_termination_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_from_uncaught_exception_) -
      reinterpret_cast<char*>(&_impl_.abnormal_termination_)) + sizeof(_impl_.is_from_uncaught_exception_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TerminationNotificationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TerminationNotificationResponse& this_ = static_cast<const TerminationNotificationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TerminationNotificationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TerminationNotificationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool abnormal_termination = 1;
          if (this_._internal_abnormal_termination() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_abnormal_termination(), target);
          }

          // string reason = 2;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool is_from_uncaught_exception = 3;
          if (this_._internal_is_from_uncaught_exception() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_from_uncaught_exception(), target);
          }

          // repeated .io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace stack_traces = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_stack_traces_size());
               i < n; i++) {
            const auto& repfield = this_._internal_stack_traces().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TerminationNotificationResponse::ByteSizeLong(const MessageLite& base) {
          const TerminationNotificationResponse& this_ = static_cast<const TerminationNotificationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TerminationNotificationResponse::ByteSizeLong() const {
          const TerminationNotificationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .io.deephaven.proto.backplane.grpc.TerminationNotificationResponse.StackTrace stack_traces = 4;
             {
              total_size += 1UL * this_._internal_stack_traces_size();
              for (const auto& msg : this_._internal_stack_traces()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string reason = 2;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // bool abnormal_termination = 1;
            if (this_._internal_abnormal_termination() != 0) {
              total_size += 2;
            }
            // bool is_from_uncaught_exception = 3;
            if (this_._internal_is_from_uncaught_exception() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TerminationNotificationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TerminationNotificationResponse*>(&to_msg);
  auto& from = static_cast<const TerminationNotificationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stack_traces()->MergeFrom(
      from._internal_stack_traces());
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_abnormal_termination() != 0) {
    _this->_impl_.abnormal_termination_ = from._impl_.abnormal_termination_;
  }
  if (from._internal_is_from_uncaught_exception() != 0) {
    _this->_impl_.is_from_uncaught_exception_ = from._impl_.is_from_uncaught_exception_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TerminationNotificationResponse::CopyFrom(const TerminationNotificationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.deephaven.proto.backplane.grpc.TerminationNotificationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TerminationNotificationResponse::InternalSwap(TerminationNotificationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stack_traces_.InternalSwap(&other->_impl_.stack_traces_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.is_from_uncaught_exception_)
      + sizeof(TerminationNotificationResponse::_impl_.is_from_uncaught_exception_)
      - PROTOBUF_FIELD_OFFSET(TerminationNotificationResponse, _impl_.abnormal_termination_)>(
          reinterpret_cast<char*>(&_impl_.abnormal_termination_),
          reinterpret_cast<char*>(&other->_impl_.abnormal_termination_));
}

::google::protobuf::Metadata TerminationNotificationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace backplane
}  // namespace proto
}  // namespace deephaven
}  // namespace io
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_deephaven_2fproto_2fsession_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
