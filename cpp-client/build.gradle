import io.deephaven.tools.docker.DiffTask

plugins {
    id 'com.bmuschko.docker-remote-api'
    id 'io.deephaven.project.register'
    id 'io.deephaven.deephaven-in-docker'
    id 'license'
}

evaluationDependsOn Docker.registryProject('cpp-client-base')

configurations {
    cpp {}
}
dependencies {
    cpp project(path: ':proto:proto-backplane-grpc', configuration: 'cpp')
}
def protoSourceDir = layout.projectDirectory.dir('deephaven/dhclient/proto')
def compare = tasks.register('compareProtobuf', DiffTask) {
    expectedContents.set configurations.cpp
    actualContents.set protoSourceDir
    generateTask.set ':cpp-client:updateProtobuf'
}
// fail a "check" build if these are out of date
tasks.getByName('quick').dependsOn(compare)

tasks.register('updateProtobuf', Sync) {
    finalizedBy compare
    from configurations.cpp
    into protoSourceDir
}

license {
    header rootProject.file('license-header')
    include '**/*.h'
    include '**/*.cc'
    strictCheck true
    useDefaultMappings true
    ignoreFailures true
}
tasks.getByName('license').dependsOn(tasks.create("licensePy", com.hierynomus.gradle.license.tasks.LicenseCheck) {
    source = ['deephaven']
})
tasks.getByName('licenseFormat').dependsOn(tasks.create("licenseFormatPy", com.hierynomus.gradle.license.tasks.LicenseFormat) {
    source = ['deephaven']
})

project.tasks.getByName('quick').dependsOn project.tasks.getByName('license')

// start a grpc-api server
String randomSuffix = UUID.randomUUID().toString();
deephavenDocker {
    envVars.set([
            'START_OPTS':'-Xmx512m -DAuthHandlers=io.deephaven.auth.AnonymousAuthenticationHandler'
    ])
    containerName.set "dh-server-for-cpp-${randomSuffix}"
    networkName.set "cpp-test-network-${randomSuffix}"
}

def testCppClient = Docker.registerDockerTask(project, 'testCppClient') {
    // Only tested on x86, and we only build dependencies for x86
    platform = 'linux/amd64'

    copyIn {
        from(layout.projectDirectory) {
            include 'cpp-tests-to-junit.sh'
            include 'deephaven/CMakeLists.txt'
            include 'deephaven/dhcore/**'
            include 'deephaven/dhclient/**'
            include 'deephaven/examples/**'
            include 'deephaven/tests/**'
        }
    }
    copyOut {
        into layout.buildDirectory.dir('test-results')
    }
    dockerfile {
        from('deephaven/cpp-client-base:local-build')
        //
        // Build client library.
        //
        runCommand('mkdir -p /cpp-client/deephaven/{dhcore,dhclient,examples,tests}')
        copyFile('deephaven/CMakeLists.txt',  '/cpp-client/deephaven/')
        copyFile('deephaven/dhcore/',  '/cpp-client/deephaven/dhcore/')
        copyFile('deephaven/dhclient/', '/cpp-client/deephaven/dhclient/')
        copyFile('deephaven/examples/', '/cpp-client/deephaven/examples/')
        copyFile('deephaven/tests/', '/cpp-client/deephaven/tests/')
        runCommand('''set -eux; \\
                      mkdir -p /cpp-client/deephaven/build; \\
                      cd /cpp-client/deephaven/build; \\
                      . /cpp-client/deps/env.sh; \\
                      cmake -DCMAKE_INSTALL_PREFIX=/cpp-client/install \\
                        -DCMAKE_BUILD_TYPE=Release \\
                        -DBUILD_SHARED_LIBS=ON \\
                        .. ; \\
                      make -j\$NCPUS install
                   ''')
        //
        // Build tests.
        //
        runCommand('mkdir -p /cpp-client/install/bin /out')
        copyFile('cpp-tests-to-junit.sh', '/cpp-client/install/bin')
        runCommand('''set -eux; \\
                      cd /cpp-client/deephaven/build/tests; \\
                      echo build/tests: ==; ls .; echo ../../tests; ls ../../tests; \\
                      . /cpp-client/deps/env.sh; \\
                      make -j\$NCPUS; \\
                      mkdir -p /cpp-client/install/bin; \\
                      cp -f /cpp-client/deephaven/build/tests/tests /cpp-client/install/bin; \
                      cd ..; \\
                      rm -fr /cpp-client/deephaven/build; \\
                      sed -i \\
                        2i"LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/cpp-client/install/lib; export LD_LIBRARY_PATH" \\
                        /cpp-client/install/bin/cpp-tests-to-junit.sh
                   ''')
        //
        // Setup for test run.
        //
        environmentVariable 'DH_HOST', deephavenDocker.containerName.get()
        environmentVariable 'DH_PORT', '10000'
    }
    containerDependencies.dependsOn = [deephavenDocker.healthyTask]
    containerDependencies.finalizedBy = deephavenDocker.endTask
    network = deephavenDocker.networkName.get()
    parentContainers = [ Docker.registryTask(project, 'cpp-client-base') ]
    entrypoint = ['/cpp-client/install/bin/cpp-tests-to-junit.sh', '/out/cpp-test.xml', '/out/cpp-test.log']
}
deephavenDocker.shouldLogIfTaskFails testCppClient
tasks.check.dependsOn(testCppClient)
