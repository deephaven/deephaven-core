plugins {
    id 'com.bmuschko.docker-remote-api'
    id 'io.deephaven.project.register'
    id 'io.deephaven.deephaven-in-docker'
    id 'license'
}

license {
    header rootProject.file('license-header')
    include '**/*.h'
    include '**/*.cc'
    strictCheck true
    useDefaultMappings true
    ignoreFailures true
}
tasks.getByName('license').dependsOn(tasks.create("licensePy", com.hierynomus.gradle.license.tasks.LicenseCheck) {
    source = ['deephaven', 'tests', '../cpp-examples']
})
tasks.getByName('licenseFormat').dependsOn(tasks.create("licenseFormatPy", com.hierynomus.gradle.license.tasks.LicenseFormat) {
    source = ['deephaven', 'tests', '../cpp-examples']
})

project.tasks.getByName('quick').dependsOn project.tasks.getByName('license')

// start a grpc-api server
String randomSuffix = UUID.randomUUID().toString();
deephavenDocker {
    containerName.set "dh-server-for-cpp-${randomSuffix}"
    networkName.set "cpp-test-network-${randomSuffix}"
}

def testCppClient = Docker.registerDockerTask(project, 'testCppClient') {
    copyIn {
        from(layout.projectDirectory) {
            include 'build-dependencies.sh'
            include 'cpp-test-to-junit.sh'
            include 'deephaven/CMakeLists.txt'
            include 'deephaven/client/**'
            include 'tests/CMakeLists.txt'
            include 'tests/*.cc'
            include 'tests/*.h'
            include 'tests/third_party/**'
        }
    }
    copyOut {}
    dockerfile file('Dockerfile')
    containerDependencies.dependsOn = [deephavenDocker.healthyTask]
    containerDependencies.finalizedBy = deephavenDocker.endTask
    network = deephavenDocker.networkName.get()
    entrypoint = ['bash', '-c', 'mkdir -p /out && cd /cpp-client && ' +
                  'DH_HOST=' + deephavenDocker.containerName.get() +
                  'DH_PORT=8080 ./cpp-test-to-junit.sh /out/cpp-test.xml /out/cpp-test.log']
}
tasks.check.dependsOn(testCppClient)
