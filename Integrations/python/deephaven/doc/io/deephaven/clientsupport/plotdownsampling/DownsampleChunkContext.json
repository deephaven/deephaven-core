{
 "className": "io.deephaven.clientsupport.plotdownsampling.DownsampleChunkContext",
 "methods": {
  "addYColumnsOfInterest": "Indicates that any of these Y columns will actually be used, and should be pre-populated if not yet present\n\n:param yCols: (int[]) - an array of indexes into the original yColumnSources constructor parameter",
  "getXValues": "Requests a chunk from the X column source, using the internally tracked GetContext\n\n:param keys: (io.deephaven.engine.rowset.RowSequence) - the keys in the column that values are needed for\n:param usePrev: (boolean) - whether or not previous values should be fetched\n:return: (io.deephaven.chunk.LongChunk<io.deephaven.chunk.attributes.Values>) a LongChunk containing the values specified",
  "getYValues": "**Incompatible overloads text - text from the first overload:**\n\nRequests a chunk of data from the specified Y column source, using the internally tracked GetContexts.\n\n*Overload 1*  \n  :param yCols: (int[]) - the indexes of the columns from the original yColumnSources to get data from\n  :param keys: (io.deephaven.engine.rowset.RowSequence) - the keys in the columns that values are needed for\n  :param usePrev: (boolean) - whether or not previous values should be fetched\n  :return: (io.deephaven.chunk.Chunk<? extends io.deephaven.chunk.attributes.Values>[]) an array containing the data in the specified rows. The array will be the same size as the original\n           yColumnSources, with only the indexes in yCols populated.\n  \n*Overload 2*  \n  :param yColIndex: (int) - the index of the column from the original yColumnSources to get data from\n  :param keys: (io.deephaven.engine.rowset.RowSequence) - the keys in the column that values are needed for\n  :param usePrev: (boolean) - whether or not previous values should be fetched\n  :return: (io.deephaven.chunk.Chunk<? extends io.deephaven.chunk.attributes.Values>) a chunk containing the values specified"
 },
 "path": "io.deephaven.clientsupport.plotdownsampling.DownsampleChunkContext",
 "text": "Provides chunks for given sources so that downsampling can walk several columns at once, allowing GetContext\n instances to be lazily created as needed, and all tracked together so they can all be closed with a single call.",
 "typeName": "class"
}