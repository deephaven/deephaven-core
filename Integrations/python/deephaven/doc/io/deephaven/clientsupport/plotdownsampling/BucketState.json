{
 "className": "io.deephaven.clientsupport.plotdownsampling.BucketState",
 "methods": {
  "append": ":param rowIndex: long\n:param valueChunks: io.deephaven.chunk.Chunk<? extendsio.deephaven.chunk.attributes.Values>[]\n:param chunkIndex: int",
  "getKey": ":return: long",
  "getOffset": ":return: long",
  "getRowSet": ":return: io.deephaven.engine.rowset.RowSet",
  "makeRowSet": ":return: io.deephaven.engine.rowset.RowSet",
  "remove": ":param rowIndex: long",
  "rescanIfNeeded": ":param context: io.deephaven.clientsupport.plotdownsampling.DownsampleChunkContext",
  "shift": ":param shiftData: io.deephaven.engine.rowset.RowSetShiftData",
  "toString": ":return: java.lang.String",
  "update": ":param rowIndex: long\n:param valueChunks: io.deephaven.chunk.Chunk<? extendsio.deephaven.chunk.attributes.Values>[]\n:param chunkIndex: int",
  "validate": ":param usePrev: boolean\n:param context: io.deephaven.clientsupport.plotdownsampling.DownsampleChunkContext\n:param allYColumnIndexes: int[]"
 },
 "path": "io.deephaven.clientsupport.plotdownsampling.BucketState",
 "text": "Represents a given \"pixel\" in the downsampled output - the first and last value within that pixel, and the max/min\n value of each column we're interested in within that pixel.\n\n The arrays of values for a given downsampled table are shared between all states, so each BucketState instance tracks\n its own offset in those arrays.",
 "typeName": "class"
}