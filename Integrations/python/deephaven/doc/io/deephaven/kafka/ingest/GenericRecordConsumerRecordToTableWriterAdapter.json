{
 "className": "io.deephaven.kafka.ingest.GenericRecordConsumerRecordToTableWriterAdapter",
 "methods": {
  "consumeRecord": "Consume a Kafka record, producing zero or more rows in the output.\n\n:param record: (org.apache.kafka.clients.consumer.ConsumerRecord<?,?>) - the record received from KafkaConsumer.poll(Duration).",
  "make": ":param writer: io.deephaven.tablelogger.TableWriter<?>\n:param kafkaPartitionColumn: java.lang.String\n:param offsetColumnName: java.lang.String\n:param timestampColumnName: java.lang.String\n:param rawKeyColumnName: java.lang.String\n:param keyColumns: java.util.Map<java.lang.String,java.lang.String>\n:param valueColumns: java.util.Map<java.lang.String,java.lang.String>\n:return: io.deephaven.kafka.ingest.GenericRecordConsumerRecordToTableWriterAdapter"
 },
 "path": "io.deephaven.kafka.ingest.GenericRecordConsumerRecordToTableWriterAdapter",
 "text": "Convert an Avro GenericRecord to Deephaven rows.\n\n  Each GenericRecord produces a single row of output, according to the maps of Table column names to Avro field names\n  for the keys and values.",
 "typeName": "class"
}