{
 "className": "io.deephaven.kafka.ingest.SimpleConsumerRecordToTableWriterAdapter",
 "methods": {
  "consumeRecord": "Consume a Kafka record, producing zero or more rows in the output.\n\n:param record: (org.apache.kafka.clients.consumer.ConsumerRecord<?,?>) - the record received from KafkaConsumer.poll(Duration).",
  "make": ":param tw: io.deephaven.tablelogger.TableWriter\n:param kafkaPartitionColumnName: java.lang.String\n:param offsetColumnName: java.lang.String\n:param timestampColumnName: java.lang.String\n:param keyColumnName: java.lang.String\n:param valueColumnName: java.lang.String\n:return: io.deephaven.kafka.ingest.ConsumerRecordToTableWriterAdapter",
  "makeFactory": "Create a ConsumerRecordToTableWriterAdapter that maps simple keys and values to single columns in a\n Deephaven table.  Each Kafka record becomes a row in the table's output.\n\n:param kafkaPartitionColumnName: (java.lang.String) - the name of the Integer column representing the Kafka partition, if null the partition\n                                  is not mapped to a Deephaven column\n:param offsetColumnName: (java.lang.String) - the name of the Long column representing the Kafka offset, if null the offset is not\n                                  mapped to a Deephaven column\n:param timestampColumnName: (java.lang.String) - the name of the DateTime column representing the Kafka partition, if null the\n                                  partition is not mapped to a Deephaven column\n:param keyColumnName: (java.lang.String) - the name of the Deephaven column for the record's key\n:param valueColumnName: (java.lang.String) - the name of the Deephaven column for the record's value\n:return: (java.util.function.Function<io.deephaven.tablelogger.TableWriter<?>,io.deephaven.kafka.ingest.ConsumerRecordToTableWriterAdapter>) an adapter for the TableWriter"
 },
 "path": "io.deephaven.kafka.ingest.SimpleConsumerRecordToTableWriterAdapter",
 "text": "An adapter that maps keys and values to single Deephaven columns.  Each Kafka record produces one Deephaven row.",
 "typeName": "class"
}