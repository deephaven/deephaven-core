{
 "className": "io.deephaven.kafka.ingest.SimpleConsumerRecordToStreamPublisherAdapter",
 "methods": {
  "consumeRecords": "Consume a List of Kafka records, producing zero or more rows in the output.\n\n:param extend: java.util.List<?",
  "make": "*Overload 1*  \n  :param publisher: io.deephaven.kafka.StreamPublisherImpl\n  :param kafkaPartitionColumnIndex: int\n  :param offsetColumnIndex: int\n  :param timestampColumnIndex: int\n  :param keyColumnIndex: int\n  :param valueColumnIndex: int\n  :return: io.deephaven.kafka.ingest.ConsumerRecordToStreamPublisherAdapter\n  \n*Overload 2*  \n  :param publisher: io.deephaven.kafka.StreamPublisherImpl\n  :param kafkaPartitionColumnIndex: int\n  :param offsetColumnIndex: int\n  :param timestampColumnIndex: int\n  :param keyProcessor: io.deephaven.kafka.ingest.KeyOrValueProcessor\n  :param valueProcessor: io.deephaven.kafka.ingest.KeyOrValueProcessor\n  :param simpleKeyColumnIndex: int\n  :param simpleValueColumnIndex: int\n  :return: io.deephaven.kafka.ingest.ConsumerRecordToStreamPublisherAdapter"
 },
 "path": "io.deephaven.kafka.ingest.SimpleConsumerRecordToStreamPublisherAdapter",
 "text": "An adapter that maps keys and values to single Deephaven columns.  Each Kafka record produces one Deephaven row.",
 "typeName": "class"
}