{
 "className": "io.deephaven.kafka.publish.GenericRecordKeyOrValueSerializer",
 "methods": {
  "handleChunk": "Process the given update index and returns a list of JSON strings, reach representing one row of data.\n\n:param context: (io.deephaven.kafka.publish.KeyOrValueSerializer.Context) - A KeyOrValueSerializer.Context created by KeyOrValueSerializer.makeContext(int)\n:param toProcess: (io.deephaven.db.v2.utils.OrderedKeys) - An Index indicating which rows were involved\n:param previous: (boolean) - True if this should be performed using the 'previous' data instead of current, as for removals.\n:return: (io.deephaven.db.v2.sources.chunk.ObjectChunk<org.apache.avro.generic.GenericRecord,io.deephaven.db.v2.sources.chunk.Attributes.Values>) A List of Strings containing all of the parsed update statements",
  "makeContext": "Create a context for calling KeyOrValueSerializer.handleChunk(Context, OrderedKeys, boolean).\n\n:param size: (int) - The maximum number of rows that will be serialized for each chunk\n:return: (io.deephaven.kafka.publish.KeyOrValueSerializer.Context) A Context for the KeyOrValueSerializer"
 },
 "path": "io.deephaven.kafka.publish.GenericRecordKeyOrValueSerializer",
 "typeName": "class"
}