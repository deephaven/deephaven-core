{
 "className": "io.deephaven.time.TimeZone",
 "methods": {
  "getTimeZone": "Returns the underlying Joda time zone for this TimeZone.\n\n:return: (org.joda.time.DateTimeZone) the underlying Joda time zone.",
  "getTzDefault": "Get the default time zone.\n\n:return: (io.deephaven.time.TimeZone) the default TimeZone",
  "lookup": "Find the corresponding TimeZone for a given Joda DateTimeZone.\n\n:param dateTimeZone: (org.joda.time.DateTimeZone) - the time zone to search for\n:return: (io.deephaven.time.TimeZone) the corresponding TimeZone, or null if none was found",
  "setTzDefault": "Set the default time zone.\n\n:param tzDefault: (io.deephaven.time.TimeZone) - the TimeZone to be used as the default.",
  "valueOf": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)\n\n:param name: (java.lang.String) - the name of the enum constant to be returned.\n:return: (io.deephaven.time.TimeZone) the enum constant with the specified name",
  "values": "Returns an array containing the constants of this enum type, in\nthe order they are declared.\n\n:return: (io.deephaven.time.TimeZone[]) an array containing the constants of this enum type, in the order they are declared",
  "valuesByOffset": "This method returns the same contents as values(), but ordered by geographic location / UTC\n offset. If two elements exist within the same timezone, they are second-order-sorted by name\n\n:return: (io.deephaven.time.TimeZone[]) An array of DBTimeZones ordered by UTC-offset"
 },
 "path": "io.deephaven.time.TimeZone",
 "text": "Defines Deephaven-supported timezones, which may be used for PQ-scheduling and display purposes",
 "typeName": "enum"
}