{
 "className": "io.deephaven.net.impl.nio.FastNIODriver",
 "methods": {
  "createDrivers": "*Overload 1*  \n  :param name: java.lang.String\n  :param log: io.deephaven.io.logger.Logger\n  :param initialThreads: int\n  :param maxThreads: int\n  :param workTimeout: long\n  :param spinsUntilPark: int\n  :param crashOnMax: boolean\n  :return: io.deephaven.net.impl.nio.FastNIODriver\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param log: io.deephaven.io.logger.Logger\n  :param initialThreads: int\n  :param maxThreads: int\n  :param workTimeout: long\n  :param spinsUntilPark: int\n  :param crashOnMax: boolean\n  :param doTimingStats: boolean\n  :param doSpinSelect: boolean\n  :return: io.deephaven.net.impl.nio.FastNIODriver",
  "createSchedulers": "*Overload 1*  \n  :param name: java.lang.String\n  :param property: java.lang.String\n  :param log: io.deephaven.io.logger.Logger\n  :return: io.deephaven.io.sched.Scheduler[]\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param property: java.lang.String\n  :param log: io.deephaven.io.logger.Logger\n  :param config: io.deephaven.configuration.Configuration\n  :return: io.deephaven.io.sched.Scheduler[]",
  "getScheduler": ":return: io.deephaven.io.sched.Scheduler",
  "isShutdown": ":return: boolean",
  "junit_getCreated": ":return: int",
  "junit_getDestroyed": ":return: int",
  "junit_getWaiting": ":return: int",
  "numTotalThreads": ":param property: java.lang.String\n:return: int",
  "shutdown": ":param maxWait: long\n:return: boolean",
  "summary": ":return: java.lang.String",
  "threadsPerScheduler": ":param property: java.lang.String\n:return: int"
 },
 "path": "io.deephaven.net.impl.nio.FastNIODriver",
 "typeName": "class"
}