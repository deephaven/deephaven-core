{
 "className": "io.deephaven.qst.column.header.ColumnHeaders5",
 "methods": {
  "header": "*Overload 1*  \n  Note: Java generics information - <T6>\n  \n  :param name: java.lang.String\n  :param clazz: java.lang.Class<T6>\n  :return: io.deephaven.qst.column.header.ColumnHeaders6<ColumnHeaders5.T1,ColumnHeaders5.T2,ColumnHeaders5.T3,ColumnHeaders5.T4,ColumnHeaders5.T5,T6>\n  \n*Overload 2*  \n  Note: Java generics information - <T6>\n  \n  :param name: java.lang.String\n  :param type: io.deephaven.qst.type.Type<T6>\n  :return: io.deephaven.qst.column.header.ColumnHeaders6<ColumnHeaders5.T1,ColumnHeaders5.T2,ColumnHeaders5.T3,ColumnHeaders5.T4,ColumnHeaders5.T5,T6>\n  \n*Overload 3*  \n  Note: Java generics information - <T6>\n  \n  :param header: io.deephaven.qst.column.header.ColumnHeader<T6>\n  :return: io.deephaven.qst.column.header.ColumnHeaders6<ColumnHeaders5.T1,ColumnHeaders5.T2,ColumnHeaders5.T3,ColumnHeaders5.T4,ColumnHeaders5.T5,T6>",
  "header5": ":return: io.deephaven.qst.column.header.ColumnHeader<ColumnHeaders5.T5>",
  "iterator": ":return: java.util.Iterator<io.deephaven.qst.column.header.ColumnHeader<?>>",
  "others": ":return: io.deephaven.qst.column.header.ColumnHeaders4<ColumnHeaders5.T1,ColumnHeaders5.T2,ColumnHeaders5.T3,ColumnHeaders5.T4>",
  "row": ":param a: ColumnHeaders5.T1\n:param b: ColumnHeaders5.T2\n:param c: ColumnHeaders5.T3\n:param d: ColumnHeaders5.T4\n:param e: ColumnHeaders5.T5\n:return: io.deephaven.qst.column.header.ColumnHeaders5.Rows",
  "start": ":param initialCapacity: int\n:return: io.deephaven.qst.column.header.ColumnHeaders5.Rows"
 },
 "path": "io.deephaven.qst.column.header.ColumnHeaders5",
 "typeName": "class"
}