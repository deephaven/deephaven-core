{
 "className": "io.deephaven.qst.column.header.ColumnHeader",
 "methods": {
  "componentType": ":return: io.deephaven.qst.type.Type<ColumnHeader.T1>",
  "header": "*Overload 1*  \n  Note: Java generics information - <T2>\n  \n  :param name: java.lang.String\n  :param clazz: java.lang.Class<T2>\n  :return: io.deephaven.qst.column.header.ColumnHeaders2<ColumnHeader.T1,T2>\n  \n*Overload 2*  \n  Note: Java generics information - <T2>\n  \n  :param name: java.lang.String\n  :param type: io.deephaven.qst.type.Type<T2>\n  :return: io.deephaven.qst.column.header.ColumnHeaders2<ColumnHeader.T1,T2>\n  \n*Overload 3*  \n  Note: Java generics information - <T2>\n  \n  :param header: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :return: io.deephaven.qst.column.header.ColumnHeaders2<ColumnHeader.T1,T2>",
  "iterator": ":return: java.util.Iterator<io.deephaven.qst.column.header.ColumnHeader<?>>",
  "name": ":return: java.lang.String",
  "of": "*Overload 1*  \n  Note: Java generics information - <T>\n  \n  :param name: java.lang.String\n  :param componentType: java.lang.Class<T>\n  :return: io.deephaven.qst.column.header.ColumnHeader<T>\n  \n*Overload 2*  \n  Note: Java generics information - <T>\n  \n  :param name: java.lang.String\n  :param componentType: io.deephaven.qst.type.Type<T>\n  :return: io.deephaven.qst.column.header.ColumnHeader<T>\n  \n*Overload 3*  \n  Note: Java generics information - <T1,\n  T2>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :return: io.deephaven.qst.column.header.ColumnHeaders2<T1,T2>\n  \n*Overload 4*  \n  Note: Java generics information - <T1,\n  T2,\n  T3>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :return: io.deephaven.qst.column.header.ColumnHeaders3<T1,T2,T3>\n  \n*Overload 5*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :return: io.deephaven.qst.column.header.ColumnHeaders4<T1,T2,T3,T4>\n  \n*Overload 6*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4,\n  T5>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :param c5: io.deephaven.qst.column.header.ColumnHeader<T5>\n  :return: io.deephaven.qst.column.header.ColumnHeaders5<T1,T2,T3,T4,T5>\n  \n*Overload 7*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :param c5: io.deephaven.qst.column.header.ColumnHeader<T5>\n  :param c6: io.deephaven.qst.column.header.ColumnHeader<T6>\n  :return: io.deephaven.qst.column.header.ColumnHeaders6<T1,T2,T3,T4,T5,T6>\n  \n*Overload 8*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :param c5: io.deephaven.qst.column.header.ColumnHeader<T5>\n  :param c6: io.deephaven.qst.column.header.ColumnHeader<T6>\n  :param c7: io.deephaven.qst.column.header.ColumnHeader<T7>\n  :return: io.deephaven.qst.column.header.ColumnHeaders7<T1,T2,T3,T4,T5,T6,T7>\n  \n*Overload 9*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :param c5: io.deephaven.qst.column.header.ColumnHeader<T5>\n  :param c6: io.deephaven.qst.column.header.ColumnHeader<T6>\n  :param c7: io.deephaven.qst.column.header.ColumnHeader<T7>\n  :param c8: io.deephaven.qst.column.header.ColumnHeader<T8>\n  :return: io.deephaven.qst.column.header.ColumnHeaders8<T1,T2,T3,T4,T5,T6,T7,T8>\n  \n*Overload 10*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :param c5: io.deephaven.qst.column.header.ColumnHeader<T5>\n  :param c6: io.deephaven.qst.column.header.ColumnHeader<T6>\n  :param c7: io.deephaven.qst.column.header.ColumnHeader<T7>\n  :param c8: io.deephaven.qst.column.header.ColumnHeader<T8>\n  :param c9: io.deephaven.qst.column.header.ColumnHeader<T9>\n  :return: io.deephaven.qst.column.header.ColumnHeaders9<T1,T2,T3,T4,T5,T6,T7,T8,T9>\n  \n*Overload 11*  \n  Note: Java generics information - <T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9>\n  \n  :param c1: io.deephaven.qst.column.header.ColumnHeader<T1>\n  :param c2: io.deephaven.qst.column.header.ColumnHeader<T2>\n  :param c3: io.deephaven.qst.column.header.ColumnHeader<T3>\n  :param c4: io.deephaven.qst.column.header.ColumnHeader<T4>\n  :param c5: io.deephaven.qst.column.header.ColumnHeader<T5>\n  :param c6: io.deephaven.qst.column.header.ColumnHeader<T6>\n  :param c7: io.deephaven.qst.column.header.ColumnHeader<T7>\n  :param c8: io.deephaven.qst.column.header.ColumnHeader<T8>\n  :param c9: io.deephaven.qst.column.header.ColumnHeader<T9>\n  :param headers: io.deephaven.qst.column.header.ColumnHeader<?>...\n  :return: io.deephaven.qst.column.header.ColumnHeadersN<T1,T2,T3,T4,T5,T6,T7,T8,T9>",
  "ofBoolean": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Boolean>",
  "ofByte": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Byte>",
  "ofChar": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Character>",
  "ofDouble": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Double>",
  "ofFloat": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Float>",
  "ofInstant": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.time.Instant>",
  "ofInt": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Integer>",
  "ofLong": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Long>",
  "ofShort": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.Short>",
  "ofString": ":param name: java.lang.String\n:return: io.deephaven.qst.column.header.ColumnHeader<java.lang.String>",
  "row": ":param a: ColumnHeader.T1\n:return: io.deephaven.qst.column.header.ColumnHeader.Rows",
  "start": ":param initialCapacity: int\n:return: io.deephaven.qst.column.header.ColumnHeader.Rows"
 },
 "path": "io.deephaven.qst.column.header.ColumnHeader",
 "text": "A column header is name and type pair.\n\n \n Multiple column headers, up to 9, can be strongly-linked together to provide a convenient\n interface for building new tables in a row-oriented, type-safe manner.",
 "typeName": "class"
}