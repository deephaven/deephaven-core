{
 "className": "io.deephaven.qst.table.TableCreatorImpl",
 "methods": {
  "merge": "Merges the given tables.\n\n:param tables: (java.lang.Iterable<io.deephaven.qst.table.TableSpec>) - the tables\n:return: (io.deephaven.qst.table.MergeTable) the merged results",
  "of": "**Incompatible overloads text - text from the first overload:**\n\nCreates a new table.\n\n*Overload 1*  \n  :param newTable: (io.deephaven.qst.table.NewTable) - the new table specification\n  :return: (io.deephaven.qst.table.NewTable) the new table\n  \n*Overload 2*  \n  :param emptyTable: (io.deephaven.qst.table.EmptyTable) - the empty table specification\n  :return: (io.deephaven.qst.table.EmptyTable) the empty table\n  \n*Overload 3*  \n  :param timeTable: (io.deephaven.qst.table.TimeTable) - the time table specifications\n  :return: (io.deephaven.qst.table.TimeTable) the time table",
  "valueOf": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)\n\n:param name: (java.lang.String) - the name of the enum constant to be returned.\n:return: (io.deephaven.qst.table.TableCreatorImpl) the enum constant with the specified name",
  "values": "Returns an array containing the constants of this enum type, in\nthe order they are declared.\n\n:return: (io.deephaven.qst.table.TableCreatorImpl[]) an array containing the constants of this enum type, in the order they are declared"
 },
 "path": "io.deephaven.qst.table.TableCreatorImpl",
 "text": "A \"no-op\" table creator impl, based on the QST structure itself. Mainly useful for testing the equivalence for the\n TableOperations of TableSpec; but publicly available for functional completeness.",
 "typeName": "enum"
}