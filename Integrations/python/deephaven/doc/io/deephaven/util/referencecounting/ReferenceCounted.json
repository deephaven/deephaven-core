{
 "className": "io.deephaven.util.referencecounting.ReferenceCounted",
 "methods": {
  "append": ":param logOutput: io.deephaven.base.log.LogOutput\n:return: io.deephaven.base.log.LogOutput",
  "decrementReferenceCount": "Decrement the reference count by one, if it has ever been increased and has not already been decreased to zero.\n Invokes the implementation's onReferenceCountAtZero() method if decrementing to zero.",
  "incrementReferenceCount": "Increment the reference count by one, if it has not already been decreased to zero.",
  "resetReferenceCount": "Reset this reference count to its initial state for reuse.",
  "toString": ":return: java.lang.String",
  "tryDecrementReferenceCount": "Decrement the reference count by one, if it has ever been increased and has not already been decreased to zero.\n Invokes the implementation's onReferenceCountAtZero() method if decrementing to zero.\n\n:return: (boolean) Whether the reference count was successfully decremented",
  "tryIncrementReferenceCount": "Increment the reference count by 1, if it has not already been decreased to 0.\n\n:return: (boolean) Whether the reference count was successfully incremented"
 },
 "path": "io.deephaven.util.referencecounting.ReferenceCounted",
 "text": "Implements a recurring reference counting pattern - a concurrent reference count that should refuse to go below zero,\n and invokes onReferenceCountAtZero() exactly once when the count returns to zero.",
 "typeName": "class"
}