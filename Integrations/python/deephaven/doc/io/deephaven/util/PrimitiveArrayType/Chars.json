{
 "className": "io.deephaven.util.PrimitiveArrayType$Chars",
 "methods": {
  "arrayCopy": "A strongly-typed equivalent to System.arraycopy(Object, int, Object, int, int).\n\n:param src: (char[]) - the source array.\n:param srcPos: (int) - starting position in the source array.\n:param dest: (char[]) - the destination array.\n:param destPos: (int) - starting position in the destination data.\n:param length: (int) - the number of array elements to be copied.",
  "getArrayType": ":return: java.lang.Class<char[]>",
  "getLength": "A strongly-typed equivalent to Array.getLength(Object).\n\n:param array: (char[]) - the array\n:return: (int) the length of the array",
  "getPrimitiveType": ":return: java.lang.Class<?>",
  "newInstance": "A strongly-typed equivalent to Array.newInstance(Class, int).\n\n:param len: (int) - the length of the new array\n:return: (char[]) the new array",
  "valueOf": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)\n\n:param name: (java.lang.String) - the name of the enum constant to be returned.\n:return: (io.deephaven.util.PrimitiveArrayType.Chars) the enum constant with the specified name",
  "values": "Returns an array containing the constants of this enum type, in\nthe order they are declared.\n\n:return: (io.deephaven.util.PrimitiveArrayType.Chars[]) an array containing the constants of this enum type, in the order they are declared",
  "walk": "Note: Java generics information - <V extends io.deephaven.util.PrimitiveArrayType.Visitor>\n\n:param visitor: V\n:return: V"
 },
 "path": "io.deephaven.util.PrimitiveArrayType.Chars",
 "typeName": "enum"
}