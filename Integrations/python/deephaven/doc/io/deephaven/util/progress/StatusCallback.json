{
 "className": "io.deephaven.util.progress.StatusCallback",
 "methods": {
  "finish": "Indicates that no further updates are expected.\n\n*Overload 1*  \n  :param status: (java.lang.String) - optional message\n  \n*Overload 2*  \n  :param statusSupplier: (java.util.function.Supplier<java.lang.String>) - optional message supplier",
  "getStepValue": "Get the current value of the the current step/subrange.\n\n:return: (int) the % complete of the current step - a number between 1 and 100",
  "getValue": "get the current value of the progress object.\n\n:return: (int) the % complete of the topmost ProcessStatus - a number between 1 and 100",
  "remaining": "**Incompatible overloads text - text from the first overload:**\n\nSyntactic sugar for converting part of remaining capacity to a subrange.\n\n*Overload 1*  \n  :return: (io.deephaven.util.progress.StatusCallback) a new ProcessStatusSubrange for the remaining part of this one.\n  \n*Overload 2*  \n  :param pct: int\n  :return: (io.deephaven.util.progress.StatusCallback) a new ProcessStatusSubrange for pct percent of the remaining part of this one.",
  "subrange": "Get a new status callback representing a sub range of this one.\n\n TODO: it's iffy whether this belongs in the interface, but is pretty handy. Could easily be a factory.\n\n:param min: (int) - 0% in the subrange corresponds to min in the parent\n:param max: (int) - 100% in the subrange corresponds to max in the parent\n:return: (io.deephaven.util.progress.StatusCallback) a new status callback representing the specified subrange of this callback",
  "update": "Update the progress % and status message.\n\n*Overload 1*  \n  :param progress: (int) - percent complete (0-100)\n  :param status: (java.lang.String) - optional message text\n  \n*Overload 2*  \n  :param progress: (int) - percent complete (0-100)\n  :param statusSupplier: (java.util.function.Supplier<java.lang.String>) - optional message supplier"
 },
 "path": "io.deephaven.util.progress.StatusCallback",
 "text": "TODO docs",
 "typeName": "interface"
}