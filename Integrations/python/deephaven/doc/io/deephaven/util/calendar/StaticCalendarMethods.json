{
 "className": "io.deephaven.util.calendar.StaticCalendarMethods",
 "methods": {
  "businessDaysInRange": "*Overload 1*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String[]\n  \n*Overload 2*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :return: java.lang.String[]",
  "currentDay": ":return: java.lang.String",
  "dayOfWeek": "*Overload 1*  \n  :return: java.time.DayOfWeek\n  \n*Overload 2*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.time.DayOfWeek\n  \n*Overload 3*  \n  :param date: java.lang.String\n  :return: java.time.DayOfWeek",
  "daysInRange": "*Overload 1*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String[]\n  \n*Overload 2*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :return: java.lang.String[]",
  "diffBusinessDay": ":param start: io.deephaven.db.tables.utils.DBDateTime\n:param end: io.deephaven.db.tables.utils.DBDateTime\n:return: double",
  "diffBusinessNanos": ":param start: io.deephaven.db.tables.utils.DBDateTime\n:param end: io.deephaven.db.tables.utils.DBDateTime\n:return: long",
  "diffBusinessYear": ":param start: io.deephaven.db.tables.utils.DBDateTime\n:param end: io.deephaven.db.tables.utils.DBDateTime\n:return: double",
  "diffNonBusinessDay": ":param start: io.deephaven.db.tables.utils.DBDateTime\n:param end: io.deephaven.db.tables.utils.DBDateTime\n:return: double",
  "diffNonBusinessNanos": ":param start: io.deephaven.db.tables.utils.DBDateTime\n:param end: io.deephaven.db.tables.utils.DBDateTime\n:return: long",
  "fractionOfBusinessDayComplete": ":param time: io.deephaven.db.tables.utils.DBDateTime\n:return: double",
  "fractionOfBusinessDayRemaining": ":param time: io.deephaven.db.tables.utils.DBDateTime\n:return: double",
  "fractionOfStandardBusinessDay": "*Overload 1*  \n  :return: double\n  \n*Overload 2*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: double\n  \n*Overload 3*  \n  :param date: java.lang.String\n  :return: double",
  "getBusinessSchedule": "*Overload 1*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 2*  \n  :param date: java.lang.String\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 3*  \n  :param date: java.time.LocalDate\n  :return: io.deephaven.util.calendar.BusinessSchedule",
  "isBusinessDay": "*Overload 1*  \n  :return: boolean\n  \n*Overload 2*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: boolean\n  \n*Overload 3*  \n  :param date: java.lang.String\n  :return: boolean\n  \n*Overload 4*  \n  :param date: java.time.LocalDate\n  :return: boolean",
  "isBusinessTime": ":param time: io.deephaven.db.tables.utils.DBDateTime\n:return: boolean",
  "isLastBusinessDayOfMonth": "*Overload 1*  \n  :return: boolean\n  \n*Overload 2*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: boolean\n  \n*Overload 3*  \n  :param date: java.lang.String\n  :return: boolean",
  "isLastBusinessDayOfWeek": "*Overload 1*  \n  :return: boolean\n  \n*Overload 2*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: boolean\n  \n*Overload 3*  \n  :param date: java.lang.String\n  :return: boolean",
  "name": ":return: java.lang.String",
  "nextBusinessDay": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param days: int\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: java.lang.String\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: java.lang.String\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: java.lang.String",
  "nextBusinessSchedule": "*Overload 1*  \n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 2*  \n  :param days: int\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: io.deephaven.util.calendar.BusinessSchedule",
  "nextDay": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param days: int\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: java.lang.String\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: java.lang.String\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: java.lang.String",
  "nextNonBusinessDay": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param days: int\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: java.lang.String\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: java.lang.String\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: java.lang.String",
  "nonBusinessDaysInRange": "*Overload 1*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String[]\n  \n*Overload 2*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :return: java.lang.String[]",
  "numberOfBusinessDays": "*Overload 1*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :return: int\n  \n*Overload 2*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :param endInclusive: boolean\n  :return: int\n  \n*Overload 3*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :return: int\n  \n*Overload 4*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :param endInclusive: boolean\n  :return: int",
  "numberOfDays": "*Overload 1*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :return: int\n  \n*Overload 2*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :param endInclusive: boolean\n  :return: int\n  \n*Overload 3*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :return: int\n  \n*Overload 4*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :param endInclusive: boolean\n  :return: int",
  "numberOfNonBusinessDays": "*Overload 1*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :return: int\n  \n*Overload 2*  \n  :param start: io.deephaven.db.tables.utils.DBDateTime\n  :param end: io.deephaven.db.tables.utils.DBDateTime\n  :param endInclusive: boolean\n  :return: int\n  \n*Overload 3*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :return: int\n  \n*Overload 4*  \n  :param start: java.lang.String\n  :param end: java.lang.String\n  :param endInclusive: boolean\n  :return: int",
  "previousBusinessDay": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param days: int\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: java.lang.String\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: java.lang.String\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: java.lang.String",
  "previousBusinessSchedule": "*Overload 1*  \n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 2*  \n  :param days: int\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: io.deephaven.util.calendar.BusinessSchedule\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: io.deephaven.util.calendar.BusinessSchedule",
  "previousDay": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param days: int\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: java.lang.String\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: java.lang.String\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: java.lang.String",
  "previousNonBusinessDay": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param days: int\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :return: java.lang.String\n  \n*Overload 4*  \n  :param time: io.deephaven.db.tables.utils.DBDateTime\n  :param days: int\n  :return: java.lang.String\n  \n*Overload 5*  \n  :param date: java.lang.String\n  :return: java.lang.String\n  \n*Overload 6*  \n  :param date: java.lang.String\n  :param days: int\n  :return: java.lang.String",
  "standardBusinessDayLengthNanos": ":return: long",
  "timeZone": ":return: io.deephaven.db.tables.utils.DBTimeZone"
 },
 "path": "io.deephaven.util.calendar.StaticCalendarMethods",
 "text": "Convenience methods for BusinessCalendar and Calendar.",
 "typeName": "class"
}