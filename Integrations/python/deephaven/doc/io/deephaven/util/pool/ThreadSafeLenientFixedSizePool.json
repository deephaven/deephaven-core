{
 "className": "io.deephaven.util.pool.ThreadSafeLenientFixedSizePool",
 "methods": {
  "give": "Gives an unused item back to the pool. Passing null is safe and has no effect. If the pool has a\n clearing procedure, the item will be cleared. Depending on pool policy, if the pool is full, this may block,\n discard the item, or throw a PoolFullException.\n\n:param item: ThreadSafeLenientFixedSizePool.T",
  "take": "Takes an item from the pool. Depending on pool policy, if there are no items available, this may block, create a\n new item, or throw a PoolEmptyException.\n\n:return: ThreadSafeLenientFixedSizePool.T",
  "takeMaybeNull": ":return: ThreadSafeLenientFixedSizePool.T",
  "tryTake": "Take an item if immediately available, else return null.\n\n:return: (ThreadSafeLenientFixedSizePool.T) a pool item or null"
 },
 "path": "io.deephaven.util.pool.ThreadSafeLenientFixedSizePool",
 "text": "A pool that\n \nholds at least size items,\n creates size items in the pool immediately,\n creates a new item when the pool underflows,\n discards the item when the pool overflows,\n optionally clears the items given to it, and\n IS thread-safe",
 "typeName": "class"
}