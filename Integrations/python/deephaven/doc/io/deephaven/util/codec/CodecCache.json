{
 "className": "io.deephaven.util.codec.CodecCache",
 "methods": {
  "getCodec": "Get or create a cached ObjectCodec.\n\nNote: Java generics information - <TYPE>\n\n:param className: java.lang.String\n:param arguments: java.lang.String\n:return: (io.deephaven.util.codec.ObjectCodec<TYPE>) The corresponding ObjectCodec",
  "getDefaultCodecClass": "Get the default ObjectCodec class to use for the given column type.\n\n:param dataType: (java.lang.Class<?>) - The column data type\n:return: (java.lang.String) The name of the default ObjectCodec subclass to use for encoding the given type",
  "valueOf": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)\n\n:param name: (java.lang.String) - the name of the enum constant to be returned.\n:return: (io.deephaven.util.codec.CodecCache) the enum constant with the specified name",
  "values": "Returns an array containing the constants of this enum type, in\nthe order they are declared. This method may be used to iterate\nover the constants as follows:\n\nfor (CodecCache c : CodecCache.values())\n    System.out.println(c);\n\n\n:return: (io.deephaven.util.codec.CodecCache[]) an array containing the constants of this enum type, in the order they are declared"
 },
 "path": "io.deephaven.util.codec.CodecCache",
 "text": "Cache for ObjectCodec instances.",
 "typeName": "enum"
}