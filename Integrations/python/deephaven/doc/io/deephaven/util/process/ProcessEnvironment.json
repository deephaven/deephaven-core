{
 "className": "io.deephaven.util.process.ProcessEnvironment",
 "methods": {
  "basicInteractiveProcessInitialization": "Do the basic installation most interactive (usually client) processes need: (1) instantiateFromConfiguration (2)\n set (3) Invoke onStartup()\n\n:param configuration: (io.deephaven.configuration.Configuration) - The configuration\n:param mainClassName: (java.lang.String) - The main class name\n:param log: (io.deephaven.io.logger.Logger) - The log\n:return: (io.deephaven.util.process.ProcessEnvironment) The ProcessEnvironment",
  "basicServerInitialization": "Do the basic installation most server processes need: (1) basicInteractiveProcessInitialization (as a subset of\n what servers need) (2) Set current thread name as mainClassName.main (3) Install the fatal error reporter\n as default uncaught exception handler\n\n:param configuration: (io.deephaven.configuration.Configuration) - The configuration\n:param mainClassName: (java.lang.String) - The main class name\n:param log: (io.deephaven.io.logger.Logger) - The log\n:return: (io.deephaven.util.process.ProcessEnvironment) The ProcessEnvironment",
  "clear": "Set the global instance to null, and reset its shutdown manager. Intended for use in unit tests, only.",
  "get": "Accessor the for the global instance. Fails if the instance is null, in order to make programming errors clear.\n\n:return: (io.deephaven.util.process.ProcessEnvironment) The global instance",
  "getFatalErrorReporter": "Access a shared fatal error reporter.\n\n:return: (io.deephaven.util.process.FatalErrorReporter) The FatalErrorReporter",
  "getGlobalFatalErrorReporter": ":return: io.deephaven.util.process.FatalErrorReporter",
  "getGlobalMainClassName": ":return: java.lang.String",
  "getGlobalShutdownManager": ":return: io.deephaven.util.process.ShutdownManager",
  "getMainClassName": "Access the main class name.\n\n:return: (java.lang.String) The main class name",
  "getShutdownManager": "Access a shared manager for tasks to be executed on shutdown.\n\n:return: (io.deephaven.util.process.ShutdownManager) The ShutdownManager",
  "instantiateFromConfiguration": "Instantiate (and set as the global instance) a ProcessEnvironment specified according to the following factory\n class name properties, in descending order of precedence: mainClassName.processEnvironmentFactory\n default.processEnvironmentFactory\n\n Checked exceptions thrown in this process always result in process termination.\n\n:param configuration: (io.deephaven.configuration.Configuration) - The configuration\n:param mainClassName: (java.lang.String) - The main class name\n:param log: (io.deephaven.io.logger.Logger) - The log\n:return: (io.deephaven.util.process.ProcessEnvironment) The new ProcessEnvironment",
  "onShutdown": "Hook for shutting down an installation-specific environment for a given process. This is intended for controlled\n invocation, rather than as part of a shutdown hook - onStartup() should setup any mandatory shutdown\n hooks, and code in said shutdown hooks should be idempotent w.r.t. onShutdown().",
  "onStartup": "Hook for setting up an installation-specific environment for a given process.",
  "set": "Setter for the global instance. It is an error to invoke this without allowReplace if the global instance may\n already have been set.\n\n:param instance: (io.deephaven.util.process.ProcessEnvironment) - The new global instance\n:param allowReplace: (boolean) - Whether to allow replacing an existing global instance\n:return: (io.deephaven.util.process.ProcessEnvironment) The global instance",
  "tryGet": "Accessor the for the global instance.\n\n:return: (io.deephaven.util.process.ProcessEnvironment) The global instance, or null if it is not set."
 },
 "path": "io.deephaven.util.process.ProcessEnvironment",
 "text": "Interface for installation-specific environment. Processes that use instances of this interface are responsible for\n determining when to call the various methods.\n\n All implementations must setup a ShutdownManager and an implementation of FatalErrorReporter.",
 "typeName": "interface"
}