{
 "className": "io.deephaven.util.SoftRecycler",
 "methods": {
  "borrowItem": ":return: SoftRecycler.T",
  "returnItem": ":param item: SoftRecycler.T"
 },
 "path": "io.deephaven.util.SoftRecycler",
 "text": "This class makes a little \"recycle bin\" for your objects of type T. When you want an object, call borrowItem(). When\n you do so, either a fresh T will be constructed for you, or a reused T will be pulled from the recycle bin. When you\n are done with the object and want to recycle it, call returnItem(). This class will keep a maximum of 'capacity'\n items in its recycle bin. Additionally, the items are held by SoftReferences, so the garbage collector may reclaim\n them if it feels like it. The items are borrowed in LIFO order, which hopefully is somewhat cache-friendly.\n\n Note that the caller has no special obligation to return a borrowed item nor to return borrowed items in any\n particular order. If your code has a need to keep a borrowed item forever, there is no problem with that. But if you\n want your objects to be reused, you have to return them.",
 "typeName": "class"
}