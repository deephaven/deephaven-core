{
 "className": "io.deephaven.engine.rowset.RowSetShiftData$Builder",
 "methods": {
  "appendShiftData": "Use this method to append shifts that propagate from a parent table to a subset of a dependent table. The\n canonical use-case is merge, where tables are shifted in key-space so that they do not overlap each other. If\n one of these merged tables has a shift, then it must propagate these shifts to the merged table in the\n appropriately shifted key space.\n \n This method also supports shifting the entire range in addition to propagating upstream shifts. For example,\n if a table needs more keyspace, then any tables slotted to the right (in a greater keyspace) will need to\n shift out of the way to free up the keyspace for the table.\n \n This method assumes that 1) the upstream shift data is valid and 2) shifts can be truncated when they extend\n beyond the table's known range.\n\n:param innerShiftData: (io.deephaven.engine.rowset.RowSetShiftData) - the upstream shifts oriented in upstream keyspace [0, innerRange)\n:param prevOffset: (long) - the previous offset where this sub-table began\n:param prevCardinality: (long) - the cardinality of the keyspace previously allocated to this table\n:param currOffset: (long) - the new offset where this sub-table begins (may be equal to prevOffset)\n:param currCardinality: (long) - the cardinality of the keyspace currently allocated to this table",
  "build": "Make final modifications to the RowSetShiftData and return it.\n\n:return: (io.deephaven.engine.rowset.RowSetShiftData) the built RowSetShiftData",
  "getMinimumValidBeginForNextDelta": ":param nextShiftDelta: long\n:return: long",
  "lastShiftEnd": "Gets the last row key assigned to a shift.\n\n:return: (long) The greatest row key assigned to a shift or -1 if no shifts exist yet.",
  "limitPreviousShiftFor": "This method adjusts the previous shift so that the upcoming shift will not be considered overlapping. This is\n useful if the previous shift included empty space for efficiency, but would intersect with our new shift.\n\n:param nextShiftBegin: (long) - The first real-key that needs to shift in the upcoming shift.\n:param nextShiftDelta: (long) - The delta that applies to the upcoming shift.",
  "nonempty": ":return: (boolean) true iff there is at least one shift appended to this builder",
  "shiftRange": "Shift a range of keys. The shift must be consistent with previously added shifts.\n\n:param beginRange: (long) - first key to shift (inclusive)\n:param endRange: (long) - last key to shift (inclusive)\n:param shiftDelta: (long) - offset to shift by; may be negative"
 },
 "path": "io.deephaven.engine.rowset.RowSetShiftData.Builder",
 "text": "Helper utility to build instances of RowSetShiftData with internally consistent data. No other ranges\n should be added to this builder after build() is invoked.",
 "typeName": "class"
}