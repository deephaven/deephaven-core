{
 "className": "io.deephaven.engine.table.impl.UnboxedDateTimeColumnSource",
 "methods": {
  "allowsReinterpret": "Test if a reinterpret call will succeed.\n\nNote: Java generics information - <ALTERNATE_DATA_TYPE>\n\n:param alternateDataType: (java.lang.Class<ALTERNATE_DATA_TYPE>) - The alternative type to consider\n:return: (boolean) If a reinterpret on this column source with the supplied alternateDataType will succeed.",
  "doReinterpret": "Supply allowed reinterpret results. The default implementation handles the most common case to avoid code\n duplication.\n\nNote: Java generics information - <ALTERNATE_DATA_TYPE>\n\n:param alternateDataType: (java.lang.Class<ALTERNATE_DATA_TYPE>) - The alternate data type\n:return: (io.deephaven.engine.table.ColumnSource<ALTERNATE_DATA_TYPE>) The resulting ColumnSource",
  "getLong": ":param index: long\n:return: long",
  "getPrevLong": ":param index: long\n:return: long",
  "isImmutable": "Determine if this column source is immutable, meaning that the values at a given row key never change.\n\n:return: (boolean) true if the values at a given row key of the column source never change, false otherwise"
 },
 "path": "io.deephaven.engine.table.impl.UnboxedDateTimeColumnSource",
 "text": "Reinterpret result for many ColumnSource implementations that internally represent DateTime values as\n long values.",
 "typeName": "class"
}