{
 "className": "io.deephaven.engine.table.impl.util.MergeSortedHelper$SortedMergeColumnSource",
 "methods": {
  "get": ":param index: long\n:return: MergeSortedHelper.SortedMergeColumnSource.T",
  "getBoolean": ":param index: long\n:return: java.lang.Boolean",
  "getByte": ":param index: long\n:return: byte",
  "getChar": ":param index: long\n:return: char",
  "getComponentType": ":return: java.lang.Class<?>",
  "getDouble": ":param index: long\n:return: double",
  "getFloat": ":param index: long\n:return: float",
  "getInt": ":param index: long\n:return: int",
  "getLong": ":param index: long\n:return: long",
  "getPrev": ":param index: long\n:return: MergeSortedHelper.SortedMergeColumnSource.T",
  "getPrevBoolean": ":param index: long\n:return: java.lang.Boolean",
  "getPrevByte": ":param index: long\n:return: byte",
  "getPrevChar": ":param index: long\n:return: char",
  "getPrevDouble": ":param index: long\n:return: double",
  "getPrevFloat": ":param index: long\n:return: float",
  "getPrevInt": ":param index: long\n:return: int",
  "getPrevLong": ":param index: long\n:return: long",
  "getPrevShort": ":param index: long\n:return: short",
  "getShort": ":param index: long\n:return: short",
  "isImmutable": "Determine if this column source is immutable, meaning that the values at a given row key never change.\n\n:return: (boolean) true if the values at a given row key of the column source never change, false otherwise",
  "isStateless": "Most column sources will return the same value for a given row without respect to the order that the rows are\n read. Those columns sources are considered \"stateless\" and should return true.\n\n Some column sources, however may be dependent on evaluation order. For example, a formula that updates a Map must\n be evaluated from the first row to the last row. A column source that has the potential to depend on the order of\n evaluation must return false.\n\n:return: (boolean) true if this is a stateless column source",
  "preventsParallelism": "Can this column source be evaluated on an arbitrary thread?\n\n Most column sources can be evaluated on an arbitrary thread, however those that do call into Python can not be\n evaluated on an arbitrary thread as the calling thread may already have the GIL, which would result in a deadlock\n when the column source takes the GIL to evaluate formulas.\n\n:return: (boolean) true if this column prevents parallelization"
 },
 "path": "io.deephaven.engine.table.impl.util.MergeSortedHelper.SortedMergeColumnSource",
 "typeName": "class"
}