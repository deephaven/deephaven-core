{
 "className": "io.deephaven.engine.table.impl.sort.permute.PermuteKernel",
 "methods": {
  "makePermuteKernel": ":param chunkType: io.deephaven.chunk.ChunkType\n:return: io.deephaven.engine.table.impl.sort.permute.PermuteKernel",
  "permute": "**Incompatible overloads text - text from the first overload:**\n\nPermute the inputValues into outputValues according to positions in inputPositions and outputPositions.\n \n outputValues[outputPositions] = inputValues[inputPositions]\n\n*Overload 1*  \n  Note: Java generics information - <T extends io.deephaven.chunk.attributes.Any>\n  \n  :param extend: io.deephaven.chunk.Chunk<?\n  :param outputPositions: (io.deephaven.chunk.IntChunk<io.deephaven.chunk.attributes.ChunkPositions>) - a chunk of positions, parallel to inputValues, that indicates the position in outputValues\n          for the corresponding inputValues value\n  :param supe: io.deephaven.chunk.WritableChunk<?\n  \n*Overload 2*  \n  Note: Java generics information - <T extends io.deephaven.chunk.attributes.Any>\n  \n  :param inputPositions: (io.deephaven.chunk.IntChunk<io.deephaven.chunk.attributes.ChunkPositions>) - a chunk of positions that indicates the position in inputValues to copy to the outputValues\n          chunk\n  :param extend: io.deephaven.chunk.Chunk<?\n  :param outputPositions: (io.deephaven.chunk.IntChunk<io.deephaven.chunk.attributes.ChunkPositions>) - a chunk of positions, parallel to inputPositions, that indicates the position in\n          outputValues for the corresponding inputValues value\n  :param supe: io.deephaven.chunk.WritableChunk<?",
  "permuteInput": "Permute the inputValues into outputValues according to the positions in inputPositions.\n\nNote: Java generics information - <T extends io.deephaven.chunk.attributes.Any>\n\n:param extend: io.deephaven.chunk.Chunk<?\n:param inputPositions: (io.deephaven.chunk.IntChunk<io.deephaven.chunk.attributes.ChunkPositions>) - a chunk of positions, parallel to outputValues, that indicates the position in inputValues\n        for the corresponding outputValues value\n:param supe: io.deephaven.chunk.WritableChunk<?"
 },
 "path": "io.deephaven.engine.table.impl.sort.permute.PermuteKernel",
 "typeName": "interface"
}