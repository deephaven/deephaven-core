{
 "className": "io.deephaven.engine.table.impl.lang.QueryLanguageFunctionUtils",
 "methods": {
  "binaryAnd": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 3*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 4*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 5*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 6*  \n  :param a: java.lang.Boolean\n  :param b: java.lang.Boolean\n  :return: java.lang.Boolean",
  "binaryAndArray": "*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 5*  \n  :param a: long[]\n  :param b: long\n  :return: long[]\n  \n*Overload 6*  \n  :param a: long\n  :param b: long[]\n  :return: long[]\n  \n*Overload 7*  \n  :param a: char[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 8*  \n  :param a: char[]\n  :param b: char\n  :return: int[]\n  \n*Overload 9*  \n  :param a: char\n  :param b: char[]\n  :return: int[]\n  \n*Overload 10*  \n  :param a: byte[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 11*  \n  :param a: byte[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 12*  \n  :param a: byte\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 13*  \n  :param a: short[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: short[]\n  :param b: short\n  :return: int[]\n  \n*Overload 15*  \n  :param a: short\n  :param b: short[]\n  :return: int[]",
  "binaryOr": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 3*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 4*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 5*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 6*  \n  :param a: java.lang.Boolean\n  :param b: java.lang.Boolean\n  :return: java.lang.Boolean",
  "binaryOrArray": "*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 5*  \n  :param a: long[]\n  :param b: long\n  :return: long[]\n  \n*Overload 6*  \n  :param a: long\n  :param b: long[]\n  :return: long[]\n  \n*Overload 7*  \n  :param a: char[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 8*  \n  :param a: char[]\n  :param b: char\n  :return: int[]\n  \n*Overload 9*  \n  :param a: char\n  :param b: char[]\n  :return: int[]\n  \n*Overload 10*  \n  :param a: byte[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 11*  \n  :param a: byte[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 12*  \n  :param a: byte\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 13*  \n  :param a: short[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: short[]\n  :param b: short\n  :return: int[]\n  \n*Overload 15*  \n  :param a: short\n  :param b: short[]\n  :return: int[]",
  "booleanPyCast": ":param a: java.lang.Object\n:return: boolean",
  "byteCast": "*Overload 1*  \n  :param a: int\n  :return: byte\n  \n*Overload 2*  \n  :param a: double\n  :return: byte\n  \n*Overload 3*  \n  :param a: long\n  :return: byte\n  \n*Overload 4*  \n  :param a: float\n  :return: byte\n  \n*Overload 5*  \n  :param a: char\n  :return: byte\n  \n*Overload 6*  \n  :param a: short\n  :return: byte\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: byte",
  "bytePyCast": ":param a: java.lang.Object\n:return: byte",
  "charCast": "*Overload 1*  \n  :param a: int\n  :return: char\n  \n*Overload 2*  \n  :param a: double\n  :return: char\n  \n*Overload 3*  \n  :param a: long\n  :return: char\n  \n*Overload 4*  \n  :param a: float\n  :return: char\n  \n*Overload 5*  \n  :param a: byte\n  :return: char\n  \n*Overload 6*  \n  :param a: short\n  :return: char\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: char",
  "charPyCast": ":param a: java.lang.Object\n:return: char",
  "compareTo": "*Overload 1*  \n  :param obj1: java.lang.Comparable\n  :param obj2: java.lang.Comparable\n  :return: int\n  \n*Overload 2*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 3*  \n  :param a: int\n  :param b: double\n  :return: int\n  \n*Overload 4*  \n  :param a: int\n  :param b: long\n  :return: int\n  \n*Overload 5*  \n  :param a: int\n  :param b: float\n  :return: int\n  \n*Overload 6*  \n  :param a: int\n  :param b: char\n  :return: int\n  \n*Overload 7*  \n  :param a: int\n  :param b: byte\n  :return: int\n  \n*Overload 8*  \n  :param a: int\n  :param b: short\n  :return: int\n  \n*Overload 9*  \n  :param a: double\n  :param b: int\n  :return: int\n  \n*Overload 10*  \n  :param a: double\n  :param b: double\n  :return: int\n  \n*Overload 11*  \n  :param a: double\n  :param b: long\n  :return: int\n  \n*Overload 12*  \n  :param a: double\n  :param b: float\n  :return: int\n  \n*Overload 13*  \n  :param a: double\n  :param b: char\n  :return: int\n  \n*Overload 14*  \n  :param a: double\n  :param b: byte\n  :return: int\n  \n*Overload 15*  \n  :param a: double\n  :param b: short\n  :return: int\n  \n*Overload 16*  \n  :param a: long\n  :param b: int\n  :return: int\n  \n*Overload 17*  \n  :param a: long\n  :param b: double\n  :return: int\n  \n*Overload 18*  \n  :param a: long\n  :param b: long\n  :return: int\n  \n*Overload 19*  \n  :param a: long\n  :param b: float\n  :return: int\n  \n*Overload 20*  \n  :param a: long\n  :param b: char\n  :return: int\n  \n*Overload 21*  \n  :param a: long\n  :param b: byte\n  :return: int\n  \n*Overload 22*  \n  :param a: long\n  :param b: short\n  :return: int\n  \n*Overload 23*  \n  :param a: float\n  :param b: int\n  :return: int\n  \n*Overload 24*  \n  :param a: float\n  :param b: double\n  :return: int\n  \n*Overload 25*  \n  :param a: float\n  :param b: long\n  :return: int\n  \n*Overload 26*  \n  :param a: float\n  :param b: float\n  :return: int\n  \n*Overload 27*  \n  :param a: float\n  :param b: char\n  :return: int\n  \n*Overload 28*  \n  :param a: float\n  :param b: byte\n  :return: int\n  \n*Overload 29*  \n  :param a: float\n  :param b: short\n  :return: int\n  \n*Overload 30*  \n  :param a: char\n  :param b: int\n  :return: int\n  \n*Overload 31*  \n  :param a: char\n  :param b: double\n  :return: int\n  \n*Overload 32*  \n  :param a: char\n  :param b: long\n  :return: int\n  \n*Overload 33*  \n  :param a: char\n  :param b: float\n  :return: int\n  \n*Overload 34*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 35*  \n  :param a: char\n  :param b: byte\n  :return: int\n  \n*Overload 36*  \n  :param a: char\n  :param b: short\n  :return: int\n  \n*Overload 37*  \n  :param a: byte\n  :param b: int\n  :return: int\n  \n*Overload 38*  \n  :param a: byte\n  :param b: double\n  :return: int\n  \n*Overload 39*  \n  :param a: byte\n  :param b: long\n  :return: int\n  \n*Overload 40*  \n  :param a: byte\n  :param b: float\n  :return: int\n  \n*Overload 41*  \n  :param a: byte\n  :param b: char\n  :return: int\n  \n*Overload 42*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 43*  \n  :param a: byte\n  :param b: short\n  :return: int\n  \n*Overload 44*  \n  :param a: short\n  :param b: int\n  :return: int\n  \n*Overload 45*  \n  :param a: short\n  :param b: double\n  :return: int\n  \n*Overload 46*  \n  :param a: short\n  :param b: long\n  :return: int\n  \n*Overload 47*  \n  :param a: short\n  :param b: float\n  :return: int\n  \n*Overload 48*  \n  :param a: short\n  :param b: char\n  :return: int\n  \n*Overload 49*  \n  :param a: short\n  :param b: byte\n  :return: int\n  \n*Overload 50*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 52*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: int\n  \n*Overload 53*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 54*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: int\n  \n*Overload 55*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 56*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: int\n  \n*Overload 57*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 58*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: int\n  \n*Overload 59*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 60*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: int\n  \n*Overload 61*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 62*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: int\n  \n*Overload 63*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: int\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: int\n  \n*Overload 65*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: int\n  \n*Overload 66*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: int\n  \n*Overload 67*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: int\n  \n*Overload 68*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: int\n  \n*Overload 69*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: int\n  \n*Overload 70*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: int\n  \n*Overload 71*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: int\n  \n*Overload 72*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: int\n  \n*Overload 73*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: int\n  \n*Overload 74*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: int\n  \n*Overload 75*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: int\n  \n*Overload 76*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: int",
  "divide": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: double\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: double\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: double\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: float\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: double\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: double\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: double\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: double\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: double\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: double\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: double\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: double\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: double\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: double\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: double\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: double\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: double\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: float\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: double\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: double\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: double\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: double\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: double\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: double\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: float\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: double\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: double\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: double\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: double\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: double\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: double\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: float\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: double\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: double\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: double\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: double\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: double\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: double\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: float\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: double\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: double\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: double\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: double\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: double\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: double\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: float\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: double\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: double\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: double\n  \n*Overload 50*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: java.math.BigDecimal\n  \n*Overload 52*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 53*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: java.math.BigDecimal\n  \n*Overload 54*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 55*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: java.math.BigDecimal\n  \n*Overload 56*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 57*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: java.math.BigDecimal\n  \n*Overload 58*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 59*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 60*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 61*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 62*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 63*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: java.math.BigDecimal\n  \n*Overload 65*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 66*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: java.math.BigDecimal\n  \n*Overload 67*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 68*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: java.math.BigDecimal\n  \n*Overload 69*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 70*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: java.math.BigDecimal\n  \n*Overload 71*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 72*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 73*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 74*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 75*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal",
  "divideArray": "There are 147 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: double[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: double[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: double[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: double[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: double[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: double[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: float[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: float[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: float[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: double[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: double[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: double[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: double[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: double[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: double[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: double[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: double[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: double[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: double[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: double[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: double[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: double[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: double[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: double[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: double[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: double[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: double[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: double[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: double[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: double[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: double[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: double[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: double[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: double[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: double[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: double[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: double[]",
  "doBooleanPyCast": ":param a: java.lang.Object\n:return: java.lang.Boolean",
  "doStringPyCast": ":param a: java.lang.Object\n:return: java.lang.String",
  "doubleCast": "*Overload 1*  \n  :param a: int\n  :return: double\n  \n*Overload 2*  \n  :param a: long\n  :return: double\n  \n*Overload 3*  \n  :param a: float\n  :return: double\n  \n*Overload 4*  \n  :param a: char\n  :return: double\n  \n*Overload 5*  \n  :param a: byte\n  :return: double\n  \n*Overload 6*  \n  :param a: short\n  :return: double\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: double",
  "doublePyCast": ":param a: java.lang.Object\n:return: double",
  "eq": "*Overload 1*  \n  :param obj1: java.lang.Object\n  :param obj2: java.lang.Object\n  :return: boolean\n  \n*Overload 2*  \n  :param a: int\n  :param b: int\n  :return: boolean\n  \n*Overload 3*  \n  :param a: int\n  :param b: double\n  :return: boolean\n  \n*Overload 4*  \n  :param a: int\n  :param b: long\n  :return: boolean\n  \n*Overload 5*  \n  :param a: int\n  :param b: float\n  :return: boolean\n  \n*Overload 6*  \n  :param a: int\n  :param b: char\n  :return: boolean\n  \n*Overload 7*  \n  :param a: int\n  :param b: byte\n  :return: boolean\n  \n*Overload 8*  \n  :param a: int\n  :param b: short\n  :return: boolean\n  \n*Overload 9*  \n  :param a: double\n  :param b: int\n  :return: boolean\n  \n*Overload 10*  \n  :param a: double\n  :param b: double\n  :return: boolean\n  \n*Overload 11*  \n  :param a: double\n  :param b: long\n  :return: boolean\n  \n*Overload 12*  \n  :param a: double\n  :param b: float\n  :return: boolean\n  \n*Overload 13*  \n  :param a: double\n  :param b: char\n  :return: boolean\n  \n*Overload 14*  \n  :param a: double\n  :param b: byte\n  :return: boolean\n  \n*Overload 15*  \n  :param a: double\n  :param b: short\n  :return: boolean\n  \n*Overload 16*  \n  :param a: long\n  :param b: int\n  :return: boolean\n  \n*Overload 17*  \n  :param a: long\n  :param b: double\n  :return: boolean\n  \n*Overload 18*  \n  :param a: long\n  :param b: long\n  :return: boolean\n  \n*Overload 19*  \n  :param a: long\n  :param b: float\n  :return: boolean\n  \n*Overload 20*  \n  :param a: long\n  :param b: char\n  :return: boolean\n  \n*Overload 21*  \n  :param a: long\n  :param b: byte\n  :return: boolean\n  \n*Overload 22*  \n  :param a: long\n  :param b: short\n  :return: boolean\n  \n*Overload 23*  \n  :param a: float\n  :param b: int\n  :return: boolean\n  \n*Overload 24*  \n  :param a: float\n  :param b: double\n  :return: boolean\n  \n*Overload 25*  \n  :param a: float\n  :param b: long\n  :return: boolean\n  \n*Overload 26*  \n  :param a: float\n  :param b: float\n  :return: boolean\n  \n*Overload 27*  \n  :param a: float\n  :param b: char\n  :return: boolean\n  \n*Overload 28*  \n  :param a: float\n  :param b: byte\n  :return: boolean\n  \n*Overload 29*  \n  :param a: float\n  :param b: short\n  :return: boolean\n  \n*Overload 30*  \n  :param a: char\n  :param b: int\n  :return: boolean\n  \n*Overload 31*  \n  :param a: char\n  :param b: double\n  :return: boolean\n  \n*Overload 32*  \n  :param a: char\n  :param b: long\n  :return: boolean\n  \n*Overload 33*  \n  :param a: char\n  :param b: float\n  :return: boolean\n  \n*Overload 34*  \n  :param a: char\n  :param b: char\n  :return: boolean\n  \n*Overload 35*  \n  :param a: char\n  :param b: byte\n  :return: boolean\n  \n*Overload 36*  \n  :param a: char\n  :param b: short\n  :return: boolean\n  \n*Overload 37*  \n  :param a: byte\n  :param b: int\n  :return: boolean\n  \n*Overload 38*  \n  :param a: byte\n  :param b: double\n  :return: boolean\n  \n*Overload 39*  \n  :param a: byte\n  :param b: long\n  :return: boolean\n  \n*Overload 40*  \n  :param a: byte\n  :param b: float\n  :return: boolean\n  \n*Overload 41*  \n  :param a: byte\n  :param b: char\n  :return: boolean\n  \n*Overload 42*  \n  :param a: byte\n  :param b: byte\n  :return: boolean\n  \n*Overload 43*  \n  :param a: byte\n  :param b: short\n  :return: boolean\n  \n*Overload 44*  \n  :param a: short\n  :param b: int\n  :return: boolean\n  \n*Overload 45*  \n  :param a: short\n  :param b: double\n  :return: boolean\n  \n*Overload 46*  \n  :param a: short\n  :param b: long\n  :return: boolean\n  \n*Overload 47*  \n  :param a: short\n  :param b: float\n  :return: boolean\n  \n*Overload 48*  \n  :param a: short\n  :param b: char\n  :return: boolean\n  \n*Overload 49*  \n  :param a: short\n  :param b: byte\n  :return: boolean\n  \n*Overload 50*  \n  :param a: short\n  :param b: short\n  :return: boolean\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 52*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: boolean\n  \n*Overload 53*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 54*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: boolean\n  \n*Overload 55*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 56*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: boolean\n  \n*Overload 57*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 58*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: boolean\n  \n*Overload 59*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 60*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: boolean\n  \n*Overload 61*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 62*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: boolean\n  \n*Overload 63*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 65*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: boolean\n  \n*Overload 66*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 67*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: boolean\n  \n*Overload 68*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 69*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: boolean\n  \n*Overload 70*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 71*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: boolean\n  \n*Overload 72*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 73*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: boolean\n  \n*Overload 74*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 75*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: boolean\n  \n*Overload 76*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: boolean",
  "eqArray": "There are 155 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: boolean[]",
  "floatCast": "*Overload 1*  \n  :param a: int\n  :return: float\n  \n*Overload 2*  \n  :param a: double\n  :return: float\n  \n*Overload 3*  \n  :param a: long\n  :return: float\n  \n*Overload 4*  \n  :param a: char\n  :return: float\n  \n*Overload 5*  \n  :param a: byte\n  :return: float\n  \n*Overload 6*  \n  :param a: short\n  :return: float\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: float",
  "floatPyCast": ":param a: java.lang.Object\n:return: float",
  "greater": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: boolean\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: boolean\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: boolean\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: boolean\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: boolean\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: boolean\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: boolean\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: boolean\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: boolean\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: boolean\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: boolean\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: boolean\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: boolean\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: boolean\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: boolean\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: boolean\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: boolean\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: boolean\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: boolean\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: boolean\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: boolean\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: boolean\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: boolean\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: boolean\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: boolean\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: boolean\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: boolean\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: boolean\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: boolean\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: boolean\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: boolean\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: boolean\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: boolean\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: boolean\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: boolean\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: boolean\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: boolean\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: boolean\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: boolean\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: boolean\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: boolean\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: boolean\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: boolean\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: boolean\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: boolean\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: boolean\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: boolean\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: boolean\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: boolean\n  \n*Overload 50*  \n  :param a: java.lang.Comparable\n  :param b: java.lang.Comparable\n  :return: boolean\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 52*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: boolean\n  \n*Overload 53*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 54*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: boolean\n  \n*Overload 55*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 56*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: boolean\n  \n*Overload 57*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 58*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: boolean\n  \n*Overload 59*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 60*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: boolean\n  \n*Overload 61*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 62*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: boolean\n  \n*Overload 63*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 65*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: boolean\n  \n*Overload 66*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 67*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: boolean\n  \n*Overload 68*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 69*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: boolean\n  \n*Overload 70*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 71*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: boolean\n  \n*Overload 72*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 73*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: boolean\n  \n*Overload 74*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 75*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: boolean\n  \n*Overload 76*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: boolean",
  "greaterArray": "There are 150 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: boolean[]",
  "greaterEquals": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: boolean\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: boolean\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: boolean\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: boolean\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: boolean\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: boolean\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: boolean\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: boolean\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: boolean\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: boolean\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: boolean\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: boolean\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: boolean\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: boolean\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: boolean\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: boolean\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: boolean\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: boolean\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: boolean\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: boolean\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: boolean\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: boolean\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: boolean\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: boolean\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: boolean\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: boolean\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: boolean\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: boolean\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: boolean\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: boolean\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: boolean\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: boolean\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: boolean\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: boolean\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: boolean\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: boolean\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: boolean\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: boolean\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: boolean\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: boolean\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: boolean\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: boolean\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: boolean\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: boolean\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: boolean\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: boolean\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: boolean\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: boolean\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: boolean\n  \n*Overload 50*  \n  :param a: java.lang.Comparable\n  :param b: java.lang.Comparable\n  :return: boolean\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 52*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: boolean\n  \n*Overload 53*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 54*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: boolean\n  \n*Overload 55*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 56*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: boolean\n  \n*Overload 57*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 58*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: boolean\n  \n*Overload 59*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 60*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: boolean\n  \n*Overload 61*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 62*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: boolean\n  \n*Overload 63*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 65*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: boolean\n  \n*Overload 66*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 67*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: boolean\n  \n*Overload 68*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 69*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: boolean\n  \n*Overload 70*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 71*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: boolean\n  \n*Overload 72*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 73*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: boolean\n  \n*Overload 74*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 75*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: boolean\n  \n*Overload 76*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: boolean",
  "greaterEqualsArray": "There are 150 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: boolean[]",
  "intCast": "*Overload 1*  \n  :param a: double\n  :return: int\n  \n*Overload 2*  \n  :param a: long\n  :return: int\n  \n*Overload 3*  \n  :param a: float\n  :return: int\n  \n*Overload 4*  \n  :param a: char\n  :return: int\n  \n*Overload 5*  \n  :param a: byte\n  :return: int\n  \n*Overload 6*  \n  :param a: short\n  :return: int\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: int",
  "intPyCast": ":param a: java.lang.Object\n:return: int",
  "less": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: boolean\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: boolean\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: boolean\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: boolean\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: boolean\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: boolean\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: boolean\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: boolean\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: boolean\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: boolean\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: boolean\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: boolean\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: boolean\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: boolean\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: boolean\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: boolean\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: boolean\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: boolean\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: boolean\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: boolean\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: boolean\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: boolean\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: boolean\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: boolean\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: boolean\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: boolean\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: boolean\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: boolean\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: boolean\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: boolean\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: boolean\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: boolean\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: boolean\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: boolean\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: boolean\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: boolean\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: boolean\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: boolean\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: boolean\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: boolean\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: boolean\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: boolean\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: boolean\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: boolean\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: boolean\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: boolean\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: boolean\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: boolean\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: boolean\n  \n*Overload 50*  \n  :param a: java.lang.Comparable\n  :param b: java.lang.Comparable\n  :return: boolean\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 52*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: boolean\n  \n*Overload 53*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 54*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: boolean\n  \n*Overload 55*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 56*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: boolean\n  \n*Overload 57*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 58*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: boolean\n  \n*Overload 59*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 60*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: boolean\n  \n*Overload 61*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 62*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: boolean\n  \n*Overload 63*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 65*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: boolean\n  \n*Overload 66*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 67*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: boolean\n  \n*Overload 68*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 69*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: boolean\n  \n*Overload 70*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 71*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: boolean\n  \n*Overload 72*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 73*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: boolean\n  \n*Overload 74*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 75*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: boolean\n  \n*Overload 76*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: boolean",
  "lessArray": "There are 150 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: boolean[]",
  "lessEquals": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: boolean\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: boolean\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: boolean\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: boolean\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: boolean\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: boolean\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: boolean\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: boolean\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: boolean\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: boolean\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: boolean\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: boolean\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: boolean\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: boolean\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: boolean\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: boolean\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: boolean\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: boolean\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: boolean\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: boolean\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: boolean\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: boolean\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: boolean\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: boolean\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: boolean\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: boolean\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: boolean\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: boolean\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: boolean\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: boolean\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: boolean\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: boolean\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: boolean\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: boolean\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: boolean\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: boolean\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: boolean\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: boolean\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: boolean\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: boolean\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: boolean\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: boolean\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: boolean\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: boolean\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: boolean\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: boolean\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: boolean\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: boolean\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: boolean\n  \n*Overload 50*  \n  :param a: java.lang.Comparable\n  :param b: java.lang.Comparable\n  :return: boolean\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 52*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: boolean\n  \n*Overload 53*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 54*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: boolean\n  \n*Overload 55*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 56*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: boolean\n  \n*Overload 57*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 58*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: boolean\n  \n*Overload 59*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 60*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: boolean\n  \n*Overload 61*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 62*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: boolean\n  \n*Overload 63*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: boolean\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 65*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: boolean\n  \n*Overload 66*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 67*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: boolean\n  \n*Overload 68*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 69*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: boolean\n  \n*Overload 70*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 71*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: boolean\n  \n*Overload 72*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 73*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: boolean\n  \n*Overload 74*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: boolean\n  \n*Overload 75*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: boolean\n  \n*Overload 76*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: boolean",
  "lessEqualsArray": "There are 150 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: boolean[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: boolean[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: boolean[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: boolean[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: boolean[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: boolean[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: boolean[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: boolean[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: boolean[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: boolean[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: boolean[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: boolean[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: boolean[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: boolean[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: boolean[]",
  "longCast": "*Overload 1*  \n  :param a: int\n  :return: long\n  \n*Overload 2*  \n  :param a: double\n  :return: long\n  \n*Overload 3*  \n  :param a: float\n  :return: long\n  \n*Overload 4*  \n  :param a: char\n  :return: long\n  \n*Overload 5*  \n  :param a: byte\n  :return: long\n  \n*Overload 6*  \n  :param a: short\n  :return: long\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: long",
  "longPyCast": ":param a: java.lang.Object\n:return: long",
  "minus": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: double\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: long\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: float\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: int\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: int\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: int\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: double\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: double\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: double\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: double\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: double\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: double\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: double\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: long\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: double\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: float\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: long\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: long\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: long\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: float\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: double\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: float\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: float\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: float\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: float\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: float\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: int\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: double\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: long\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: float\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: int\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: int\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: int\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: double\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: long\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: float\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: int\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: int\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: int\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: double\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: long\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: float\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: int\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: int\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 50*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: java.math.BigDecimal\n  \n*Overload 52*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 53*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: java.math.BigDecimal\n  \n*Overload 54*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 55*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: java.math.BigDecimal\n  \n*Overload 56*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 57*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: java.math.BigDecimal\n  \n*Overload 58*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 59*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 60*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 61*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 62*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 63*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: java.math.BigInteger\n  \n*Overload 65*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 66*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: java.math.BigInteger\n  \n*Overload 67*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 68*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: java.math.BigInteger\n  \n*Overload 69*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 70*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: java.math.BigInteger\n  \n*Overload 71*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 72*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 73*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 74*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 75*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal",
  "minusArray": "There are 147 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: double[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: double[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: long[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: long[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: float[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: float[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: float[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: int[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: int[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: int[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: int[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: double[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: double[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: double[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: double[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: double[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: double[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: double[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: double[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: double[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: double[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: double[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: double[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: double[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: double[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: double[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: double[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: long[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: long[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: long[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: double[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: double[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: long[]",
  "multiply": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: double\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: long\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: float\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: int\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: int\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: int\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: double\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: double\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: double\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: double\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: double\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: double\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: double\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: long\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: double\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: float\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: long\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: long\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: long\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: float\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: double\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: float\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: float\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: float\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: float\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: float\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: int\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: double\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: long\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: float\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: int\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: int\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: int\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: double\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: long\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: float\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: int\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: int\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: int\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: double\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: long\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: float\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: int\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: int\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 50*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: java.math.BigDecimal\n  \n*Overload 52*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 53*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: java.math.BigDecimal\n  \n*Overload 54*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 55*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: java.math.BigDecimal\n  \n*Overload 56*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 57*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: java.math.BigDecimal\n  \n*Overload 58*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 59*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 60*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 61*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 62*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 63*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: java.math.BigInteger\n  \n*Overload 65*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 66*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: java.math.BigInteger\n  \n*Overload 67*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 68*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: java.math.BigInteger\n  \n*Overload 69*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 70*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: java.math.BigInteger\n  \n*Overload 71*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 72*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 73*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 74*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 75*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal",
  "multiplyArray": "There are 147 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: double[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: double[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: long[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: long[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: float[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: float[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: float[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: int[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: int[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: int[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: int[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: double[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: double[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: double[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: double[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: double[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: double[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: double[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: double[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: double[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: double[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: double[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: double[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: double[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: double[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: double[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: double[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: long[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: long[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: long[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: double[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: double[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: long[]",
  "negate": "*Overload 1*  \n  :param a: int\n  :return: int\n  \n*Overload 2*  \n  :param a: double\n  :return: double\n  \n*Overload 3*  \n  :param a: long\n  :return: long\n  \n*Overload 4*  \n  :param a: float\n  :return: float\n  \n*Overload 5*  \n  :param a: char\n  :return: int\n  \n*Overload 6*  \n  :param a: byte\n  :return: int\n  \n*Overload 7*  \n  :param a: short\n  :return: int",
  "not": ":param a: java.lang.Boolean\n:return: java.lang.Boolean",
  "plus": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: double\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: long\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: float\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: int\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: int\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: int\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: double\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: double\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: double\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: double\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: double\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: double\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: double\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: long\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: double\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: float\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: long\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: long\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: long\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: float\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: double\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: float\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: float\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: float\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: float\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: float\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: int\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: double\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: long\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: float\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: int\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: int\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: int\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: double\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: long\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: float\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: int\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: int\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: int\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: double\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: long\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: float\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: int\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: int\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 50*  \n  :param a: java.math.BigDecimal\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 51*  \n  :param a: java.math.BigDecimal\n  :param b: long\n  :return: java.math.BigDecimal\n  \n*Overload 52*  \n  :param a: long\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 53*  \n  :param a: java.math.BigDecimal\n  :param b: int\n  :return: java.math.BigDecimal\n  \n*Overload 54*  \n  :param a: int\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 55*  \n  :param a: java.math.BigDecimal\n  :param b: short\n  :return: java.math.BigDecimal\n  \n*Overload 56*  \n  :param a: short\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 57*  \n  :param a: java.math.BigDecimal\n  :param b: byte\n  :return: java.math.BigDecimal\n  \n*Overload 58*  \n  :param a: byte\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 59*  \n  :param a: java.math.BigDecimal\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 60*  \n  :param a: double\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 61*  \n  :param a: java.math.BigDecimal\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 62*  \n  :param a: float\n  :param b: java.math.BigDecimal\n  :return: java.math.BigDecimal\n  \n*Overload 63*  \n  :param a: java.math.BigInteger\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 64*  \n  :param a: java.math.BigInteger\n  :param b: long\n  :return: java.math.BigInteger\n  \n*Overload 65*  \n  :param a: long\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 66*  \n  :param a: java.math.BigInteger\n  :param b: int\n  :return: java.math.BigInteger\n  \n*Overload 67*  \n  :param a: int\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 68*  \n  :param a: java.math.BigInteger\n  :param b: short\n  :return: java.math.BigInteger\n  \n*Overload 69*  \n  :param a: short\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 70*  \n  :param a: java.math.BigInteger\n  :param b: byte\n  :return: java.math.BigInteger\n  \n*Overload 71*  \n  :param a: byte\n  :param b: java.math.BigInteger\n  :return: java.math.BigInteger\n  \n*Overload 72*  \n  :param a: java.math.BigInteger\n  :param b: double\n  :return: java.math.BigDecimal\n  \n*Overload 73*  \n  :param a: double\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal\n  \n*Overload 74*  \n  :param a: java.math.BigInteger\n  :param b: float\n  :return: java.math.BigDecimal\n  \n*Overload 75*  \n  :param a: float\n  :param b: java.math.BigInteger\n  :return: java.math.BigDecimal",
  "plusArray": "There are 147 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: double[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: double[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: long[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: long[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: float[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: float[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: float[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: int[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: int[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: int[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: int[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: double[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: double[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: double[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: double[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: double[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: double[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: double[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: double[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: double[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: double[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: double[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: double[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: double[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: double[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: double[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: double[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: long[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: long[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: long[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: double[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: double[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: long[]",
  "remainder": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: int\n  :param b: double\n  :return: double\n  \n*Overload 3*  \n  :param a: int\n  :param b: long\n  :return: long\n  \n*Overload 4*  \n  :param a: int\n  :param b: float\n  :return: float\n  \n*Overload 5*  \n  :param a: int\n  :param b: char\n  :return: int\n  \n*Overload 6*  \n  :param a: int\n  :param b: byte\n  :return: int\n  \n*Overload 7*  \n  :param a: int\n  :param b: short\n  :return: int\n  \n*Overload 8*  \n  :param a: double\n  :param b: int\n  :return: double\n  \n*Overload 9*  \n  :param a: double\n  :param b: double\n  :return: double\n  \n*Overload 10*  \n  :param a: double\n  :param b: long\n  :return: double\n  \n*Overload 11*  \n  :param a: double\n  :param b: float\n  :return: double\n  \n*Overload 12*  \n  :param a: double\n  :param b: char\n  :return: double\n  \n*Overload 13*  \n  :param a: double\n  :param b: byte\n  :return: double\n  \n*Overload 14*  \n  :param a: double\n  :param b: short\n  :return: double\n  \n*Overload 15*  \n  :param a: long\n  :param b: int\n  :return: long\n  \n*Overload 16*  \n  :param a: long\n  :param b: double\n  :return: double\n  \n*Overload 17*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 18*  \n  :param a: long\n  :param b: float\n  :return: float\n  \n*Overload 19*  \n  :param a: long\n  :param b: char\n  :return: long\n  \n*Overload 20*  \n  :param a: long\n  :param b: byte\n  :return: long\n  \n*Overload 21*  \n  :param a: long\n  :param b: short\n  :return: long\n  \n*Overload 22*  \n  :param a: float\n  :param b: int\n  :return: float\n  \n*Overload 23*  \n  :param a: float\n  :param b: double\n  :return: double\n  \n*Overload 24*  \n  :param a: float\n  :param b: long\n  :return: float\n  \n*Overload 25*  \n  :param a: float\n  :param b: float\n  :return: float\n  \n*Overload 26*  \n  :param a: float\n  :param b: char\n  :return: float\n  \n*Overload 27*  \n  :param a: float\n  :param b: byte\n  :return: float\n  \n*Overload 28*  \n  :param a: float\n  :param b: short\n  :return: float\n  \n*Overload 29*  \n  :param a: char\n  :param b: int\n  :return: int\n  \n*Overload 30*  \n  :param a: char\n  :param b: double\n  :return: double\n  \n*Overload 31*  \n  :param a: char\n  :param b: long\n  :return: long\n  \n*Overload 32*  \n  :param a: char\n  :param b: float\n  :return: float\n  \n*Overload 33*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 34*  \n  :param a: char\n  :param b: byte\n  :return: int\n  \n*Overload 35*  \n  :param a: char\n  :param b: short\n  :return: int\n  \n*Overload 36*  \n  :param a: byte\n  :param b: int\n  :return: int\n  \n*Overload 37*  \n  :param a: byte\n  :param b: double\n  :return: double\n  \n*Overload 38*  \n  :param a: byte\n  :param b: long\n  :return: long\n  \n*Overload 39*  \n  :param a: byte\n  :param b: float\n  :return: float\n  \n*Overload 40*  \n  :param a: byte\n  :param b: char\n  :return: int\n  \n*Overload 41*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 42*  \n  :param a: byte\n  :param b: short\n  :return: int\n  \n*Overload 43*  \n  :param a: short\n  :param b: int\n  :return: int\n  \n*Overload 44*  \n  :param a: short\n  :param b: double\n  :return: double\n  \n*Overload 45*  \n  :param a: short\n  :param b: long\n  :return: long\n  \n*Overload 46*  \n  :param a: short\n  :param b: float\n  :return: float\n  \n*Overload 47*  \n  :param a: short\n  :param b: char\n  :return: int\n  \n*Overload 48*  \n  :param a: short\n  :param b: byte\n  :return: int\n  \n*Overload 49*  \n  :param a: short\n  :param b: short\n  :return: int",
  "remainderArray": "There are 147 overloads, restricting signature summary to first 50:\n*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: int[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 5*  \n  :param a: int[]\n  :param b: double\n  :return: double[]\n  \n*Overload 6*  \n  :param a: int\n  :param b: double[]\n  :return: double[]\n  \n*Overload 7*  \n  :param a: int[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 8*  \n  :param a: int[]\n  :param b: long\n  :return: long[]\n  \n*Overload 9*  \n  :param a: int\n  :param b: long[]\n  :return: long[]\n  \n*Overload 10*  \n  :param a: int[]\n  :param b: float[]\n  :return: float[]\n  \n*Overload 11*  \n  :param a: int[]\n  :param b: float\n  :return: float[]\n  \n*Overload 12*  \n  :param a: int\n  :param b: float[]\n  :return: float[]\n  \n*Overload 13*  \n  :param a: int[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: int[]\n  :param b: char\n  :return: int[]\n  \n*Overload 15*  \n  :param a: int\n  :param b: char[]\n  :return: int[]\n  \n*Overload 16*  \n  :param a: int[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 17*  \n  :param a: int[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 18*  \n  :param a: int\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 19*  \n  :param a: int[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 20*  \n  :param a: int[]\n  :param b: short\n  :return: int[]\n  \n*Overload 21*  \n  :param a: int\n  :param b: short[]\n  :return: int[]\n  \n*Overload 22*  \n  :param a: double[]\n  :param b: int[]\n  :return: double[]\n  \n*Overload 23*  \n  :param a: double[]\n  :param b: int\n  :return: double[]\n  \n*Overload 24*  \n  :param a: double\n  :param b: int[]\n  :return: double[]\n  \n*Overload 25*  \n  :param a: double[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 26*  \n  :param a: double[]\n  :param b: double\n  :return: double[]\n  \n*Overload 27*  \n  :param a: double\n  :param b: double[]\n  :return: double[]\n  \n*Overload 28*  \n  :param a: double[]\n  :param b: long[]\n  :return: double[]\n  \n*Overload 29*  \n  :param a: double[]\n  :param b: long\n  :return: double[]\n  \n*Overload 30*  \n  :param a: double\n  :param b: long[]\n  :return: double[]\n  \n*Overload 31*  \n  :param a: double[]\n  :param b: float[]\n  :return: double[]\n  \n*Overload 32*  \n  :param a: double[]\n  :param b: float\n  :return: double[]\n  \n*Overload 33*  \n  :param a: double\n  :param b: float[]\n  :return: double[]\n  \n*Overload 34*  \n  :param a: double[]\n  :param b: char[]\n  :return: double[]\n  \n*Overload 35*  \n  :param a: double[]\n  :param b: char\n  :return: double[]\n  \n*Overload 36*  \n  :param a: double\n  :param b: char[]\n  :return: double[]\n  \n*Overload 37*  \n  :param a: double[]\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 38*  \n  :param a: double[]\n  :param b: byte\n  :return: double[]\n  \n*Overload 39*  \n  :param a: double\n  :param b: byte[]\n  :return: double[]\n  \n*Overload 40*  \n  :param a: double[]\n  :param b: short[]\n  :return: double[]\n  \n*Overload 41*  \n  :param a: double[]\n  :param b: short\n  :return: double[]\n  \n*Overload 42*  \n  :param a: double\n  :param b: short[]\n  :return: double[]\n  \n*Overload 43*  \n  :param a: long[]\n  :param b: int[]\n  :return: long[]\n  \n*Overload 44*  \n  :param a: long[]\n  :param b: int\n  :return: long[]\n  \n*Overload 45*  \n  :param a: long\n  :param b: int[]\n  :return: long[]\n  \n*Overload 46*  \n  :param a: long[]\n  :param b: double[]\n  :return: double[]\n  \n*Overload 47*  \n  :param a: long[]\n  :param b: double\n  :return: double[]\n  \n*Overload 48*  \n  :param a: long\n  :param b: double[]\n  :return: double[]\n  \n*Overload 49*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 50*  \n  :param a: long[]\n  :param b: long\n  :return: long[]",
  "shortCast": "*Overload 1*  \n  :param a: int\n  :return: short\n  \n*Overload 2*  \n  :param a: double\n  :return: short\n  \n*Overload 3*  \n  :param a: long\n  :return: short\n  \n*Overload 4*  \n  :param a: float\n  :return: short\n  \n*Overload 5*  \n  :param a: char\n  :return: short\n  \n*Overload 6*  \n  :param a: byte\n  :return: short\n  \n*Overload 7*  \n  :param a: java.lang.Object\n  :return: short",
  "shortPyCast": ":param a: java.lang.Object\n:return: short",
  "xor": "*Overload 1*  \n  :param a: int\n  :param b: int\n  :return: int\n  \n*Overload 2*  \n  :param a: long\n  :param b: long\n  :return: long\n  \n*Overload 3*  \n  :param a: char\n  :param b: char\n  :return: int\n  \n*Overload 4*  \n  :param a: byte\n  :param b: byte\n  :return: int\n  \n*Overload 5*  \n  :param a: short\n  :param b: short\n  :return: int\n  \n*Overload 6*  \n  :param a: java.lang.Boolean\n  :param b: java.lang.Boolean\n  :return: java.lang.Boolean",
  "xorArray": "*Overload 1*  \n  :param a: int[]\n  :param b: int[]\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param b: int\n  :return: int[]\n  \n*Overload 3*  \n  :param a: int\n  :param b: int[]\n  :return: int[]\n  \n*Overload 4*  \n  :param a: long[]\n  :param b: long[]\n  :return: long[]\n  \n*Overload 5*  \n  :param a: long[]\n  :param b: long\n  :return: long[]\n  \n*Overload 6*  \n  :param a: long\n  :param b: long[]\n  :return: long[]\n  \n*Overload 7*  \n  :param a: char[]\n  :param b: char[]\n  :return: int[]\n  \n*Overload 8*  \n  :param a: char[]\n  :param b: char\n  :return: int[]\n  \n*Overload 9*  \n  :param a: char\n  :param b: char[]\n  :return: int[]\n  \n*Overload 10*  \n  :param a: byte[]\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 11*  \n  :param a: byte[]\n  :param b: byte\n  :return: int[]\n  \n*Overload 12*  \n  :param a: byte\n  :param b: byte[]\n  :return: int[]\n  \n*Overload 13*  \n  :param a: short[]\n  :param b: short[]\n  :return: int[]\n  \n*Overload 14*  \n  :param a: short[]\n  :param b: short\n  :return: int[]\n  \n*Overload 15*  \n  :param a: short\n  :param b: short[]\n  :return: int[]"
 },
 "path": "io.deephaven.engine.table.impl.lang.QueryLanguageFunctionUtils",
 "typeName": "class"
}