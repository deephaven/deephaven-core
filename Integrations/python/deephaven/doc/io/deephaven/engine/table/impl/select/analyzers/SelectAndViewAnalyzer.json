{
 "className": "io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer",
 "methods": {
  "allowCrossColumnParallelization": "Can all of our columns permit parallel updates?\n\n:return: boolean",
  "applyUpdate": "Apply this update to this SelectAndViewAnalyzer.\n\n:param upstream: (io.deephaven.engine.table.TableUpdate) - the upstream update\n:param toClear: (io.deephaven.engine.rowset.RowSet) - rows that used to exist and no longer exist\n:param helper: (io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer.UpdateHelper) - convenience class that memoizes reusable calculations for this update\n:param jobScheduler: io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer.JobScheduler\n:param onCompletion: (io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer.SelectLayerCompletionHandler) - Called when an inner column is complete. The outer layer should pass the onCompletion\n        on to other layers and if it and all of its dependencies have been satisfied schedule execution of that\n        column update.",
  "calcEffects": "Our job here is to calculate the effects: a map from incoming column to a list of columns that it effects. We do\n this in two stages. In the first stage we create a map from column to (set of dependent columns). In the second\n stage we reverse that map.\n\n:return: java.util.Map<java.lang.String,java.lang.String[]>",
  "create": "*Overload 1*  \n  :param mode: io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer.Mode\n  :param columnSources: java.util.Map<java.lang.String,io.deephaven.engine.table.ColumnSource<?>>\n  :param rowSet: io.deephaven.engine.rowset.TrackingRowSet\n  :param parentMcs: io.deephaven.engine.table.ModifiedColumnSet\n  :param publishTheseSources: boolean\n  :param selectColumns: io.deephaven.engine.table.impl.select.SelectColumn...\n  :return: io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer\n  \n*Overload 2*  \n  :param mode: io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer.Mode\n  :param columnSources: java.util.Map<java.lang.String,io.deephaven.engine.table.ColumnSource<?>>\n  :param rowSet: io.deephaven.engine.rowset.TrackingRowSet\n  :param parentMcs: io.deephaven.engine.table.ModifiedColumnSet\n  :param publishTheseSources: boolean\n  :param allowInternalFlatten: boolean\n  :param selectColumns: io.deephaven.engine.table.impl.select.SelectColumn...\n  :return: io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer",
  "flattenedResult": "Was the result internally flattened? Only the STATIC_SELECT case flattens the result. If the result preserves any\n columns, then flattening is not permitted. Because all the other layers cannot internally flatten, the default\n implementation returns false.\n\n:return: boolean",
  "futureCompletionHandler": "Create a completion handler that signals a future when the update is completed.\n\n:param waitForResult: (java.util.concurrent.CompletableFuture<java.lang.Void>) - a void future indicating success or failure\n:return: (io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer.SelectLayerCompletionHandler) a completion handler that will signal the future",
  "getAllColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.engine.table.ColumnSource<?>>",
  "getInner": ":return: io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer",
  "getNewColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.engine.table.ColumnSource<?>>",
  "getPublishedColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.engine.table.ColumnSource<?>>",
  "setAllNewColumns": "Set the bits in bitset that represent all the new columns. This is used to identify when the select or update\n operation is complete.\n\n:param bitset: (java.util.BitSet) - the bitset to manipulate.",
  "toString": ":return: java.lang.String",
  "updateColumnDefinitionsFromTopLayer": ":param columnDefinitions: java.util.Map<java.lang.String,io.deephaven.engine.table.ColumnDefinition<?>>"
 },
 "path": "io.deephaven.engine.table.impl.select.analyzers.SelectAndViewAnalyzer",
 "typeName": "class"
}