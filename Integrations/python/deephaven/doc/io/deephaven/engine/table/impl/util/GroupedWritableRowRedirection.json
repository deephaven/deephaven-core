{
 "className": "io.deephaven.engine.table.impl.util.GroupedWritableRowRedirection",
 "methods": {
  "fillChunk": "Lookup each element in a RowSequence and write the result to a WritableLongChunk.\n\n:param fillContext: (io.deephaven.engine.table.ChunkSource.FillContext) - The FillContext\n:param innerRowKeys: (io.deephaven.chunk.WritableLongChunk<? extendsio.deephaven.engine.rowset.chunkattributes.RowKeys>) - The result chunk\n:param outerRowKeys: (io.deephaven.engine.rowset.RowSequence) - The row keys to lookup in this RowRedirection",
  "fillPrevChunk": "Lookup each element in a RowSequence and write the result to a WritableLongChunk, using previous\n values.\n\n:param fillContext: (io.deephaven.engine.table.ChunkSource.FillContext) - The FillContext\n:param innerRowKeys: (io.deephaven.chunk.WritableLongChunk<? extendsio.deephaven.engine.rowset.chunkattributes.RowKeys>) - The result chunk\n:param outerRowKeys: (io.deephaven.engine.rowset.RowSequence) - The row keys to lookup in this RowRedirection",
  "get": "Simple redirected lookup.\n\n:param outerRowKey: (long) - The \"outer\" row key\n:return: (long) The corresponding \"inner\" row key, or RowSequence.NULL_ROW_KEY if no mapping exists",
  "getPrev": "Simple redirected lookup, using previous values.\n\n:param outerRowKey: (long) - The \"outer\" row key\n:return: (long) The corresponding \"inner\" row key, or RowSequence.NULL_ROW_KEY if no mapping exists",
  "put": "Add or change a mapping from outerRowKey to innerRowKey.\n\n:param outerRowKey: (long) - The outer row key to map from\n:param innerRowKey: (long) - The inner row key to map to\n:return: (long) The inner row key previously mapped from outerRowKey, or RowSequence.NULL_ROW_KEY if there was\n         no mapping",
  "remove": "Remove a mapping from outerRowKey.\n\n:param outerRowKey: (long) - The outer row key to unmap\n:return: (long) The inner row key previously mapped from outerRowKey, or RowSequence.NULL_ROW_KEY if there was\n         no mapping",
  "startTrackingPrevValues": "Initiate previous value tracking."
 },
 "path": "io.deephaven.engine.table.impl.util.GroupedWritableRowRedirection",
 "text": "The GroupedWritableRowRedirection is intended for situations where you have several Indices that represent contiguous\n rows of your output table and a flat output RowSet.\n\n When sorting a table by its grouping column, instead of using a large contiguous WritableRowRedirection, we simply\n store the row sets for each group and the accumulated cardinality. We then binary search in the accumulated\n cardinality for a given key; and fetch the corresponding offset from that group's row set.\n\n This WritableRowRedirection does not support mutation.",
 "typeName": "class"
}