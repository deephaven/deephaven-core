{
 "className": "io.deephaven.parquet.table.layout.ParquetMetadataFileLayout",
 "methods": {
  "findKeys": "Find keys and deliver them to the locationKeyObserver.\n\n:param locationKeyObserver: (java.util.function.Consumer<io.deephaven.parquet.table.location.ParquetTableLocationKey>) - Per-key callback",
  "getInstructions": ":return: io.deephaven.parquet.table.ParquetInstructions",
  "getTableDefinition": ":return: io.deephaven.engine.table.TableDefinition",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.parquet.table.layout.ParquetMetadataFileLayout",
 "text": "Location finder that will examine a parquet metadata file to discover locations.\n\n \n Note that we expect to find the following files:\n \n* _metadata - A file containing Parquet metadata for all row groups in all\n .parquet files for the entire data set, including schema information non-partitioning columns and key-value\n metadata\n* _common_metadata (optional) - A file containing Parquet metadata with schema information that\n applies to the entire data set, including partitioning columns that are inferred from file paths rather than\n explicitly written in column chunks within .parquet files",
 "typeName": "class"
}