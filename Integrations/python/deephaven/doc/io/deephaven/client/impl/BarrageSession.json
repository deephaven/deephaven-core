{
 "className": "io.deephaven.client.impl.BarrageSession",
 "methods": {
  "channel": ":return: io.grpc.Channel",
  "of": ":param session: io.deephaven.client.impl.SessionImpl\n:param incomingAllocator: org.apache.arrow.memory.BufferAllocator\n:param channel: io.grpc.ManagedChannel\n:return: io.deephaven.client.impl.BarrageSession",
  "subscribe": "**Incompatible overloads text - text from the first overload:**\n\nSources a barrage subscription from a TableHandle. A new reference of the handle is created. The\n original tableHandle is still owned by the caller.\n\n*Overload 1*  \n  :param tableSpec: (io.deephaven.qst.table.TableSpec) - the tableSpec to resolve and then subscribe to\n  :param options: (io.deephaven.extensions.barrage.BarrageSubscriptionOptions) - the options configuring the details of this subscription\n  :return: (io.deephaven.client.impl.BarrageSubscription) the BarrageSubscription\n  \n*Overload 2*  \n  :param tableDefinition: (io.deephaven.db.tables.TableDefinition) - the expected table definition\n  :param tableSpec: (io.deephaven.qst.table.TableSpec) - the tableSpec to resolve and then subscribe to\n  :param options: (io.deephaven.extensions.barrage.BarrageSubscriptionOptions) - the options configuring the details of this subscription\n  :return: (io.deephaven.client.impl.BarrageSubscription) the BarrageSubscription\n  \n*Overload 3*  \n  :param tableHandle: (io.deephaven.client.impl.TableHandle) - the table handle to subscribe to\n  :param options: (io.deephaven.extensions.barrage.BarrageSubscriptionOptions) - the options configuring the details of this subscription\n  :return: (io.deephaven.client.impl.BarrageSubscription) the BarrageSubscription\n  \n*Overload 4*  \n  :param tableDefinition: (io.deephaven.db.tables.TableDefinition) - the expected table definition\n  :param tableHandle: (io.deephaven.client.impl.TableHandle) - the table handle to subscribe to\n  :param options: (io.deephaven.extensions.barrage.BarrageSubscriptionOptions) - the options configuring the details of this subscription\n  :return: (io.deephaven.client.impl.BarrageSubscription) the BarrageSubscription"
 },
 "path": "io.deephaven.client.impl.BarrageSession",
 "typeName": "class"
}