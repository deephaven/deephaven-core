{
 "className": "io.deephaven.client.impl.VectorHelper",
 "methods": {
  "fill": "*Overload 1*  \n  :param vector: org.apache.arrow.vector.TinyIntVector\n  :param array: byte[]\n  :param offset: int\n  :param len: int\n  \n*Overload 2*  \n  :param vector: org.apache.arrow.vector.UInt2Vector\n  :param array: char[]\n  :param offset: int\n  :param len: int\n  \n*Overload 3*  \n  :param vector: org.apache.arrow.vector.SmallIntVector\n  :param array: short[]\n  :param offset: int\n  :param len: int\n  \n*Overload 4*  \n  :param vector: org.apache.arrow.vector.IntVector\n  :param array: int[]\n  :param offset: int\n  :param len: int\n  \n*Overload 5*  \n  :param vector: org.apache.arrow.vector.BigIntVector\n  :param array: long[]\n  :param offset: int\n  :param len: int\n  \n*Overload 6*  \n  :param vector: org.apache.arrow.vector.Float4Vector\n  :param array: float[]\n  :param offset: int\n  :param len: int\n  \n*Overload 7*  \n  :param vector: org.apache.arrow.vector.Float8Vector\n  :param array: double[]\n  :param offset: int\n  :param len: int\n  \n*Overload 8*  \n  :param vector: org.apache.arrow.vector.VarCharVector\n  :param array: java.util.Collection<java.lang.String>\n  \n*Overload 9*  \n  :param vector: org.apache.arrow.vector.TimeStampNanoTZVector\n  :param array: java.util.Collection<java.time.Instant>"
 },
 "path": "io.deephaven.client.impl.VectorHelper",
 "text": "Helpers to fill various field vectors from arrays or collections.",
 "typeName": "class"
}