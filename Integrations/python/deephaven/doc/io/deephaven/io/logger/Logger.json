{
 "className": "io.deephaven.io.logger.Logger",
 "methods": {
  "debug": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  \n*Overload 4*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable",
  "email": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param object: java.lang.Object\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable",
  "error": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  \n*Overload 4*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable",
  "fatal": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  \n*Overload 4*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable",
  "getEntry": "May return empty LogEntry if that's what the level dictates...\n\n*Overload 1*  \n  :param level: io.deephaven.io.log.LogLevel\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param level: io.deephaven.io.log.LogLevel\n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param level: io.deephaven.io.log.LogLevel\n  :param currentTime: long\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 4*  \n  :param level: io.deephaven.io.log.LogLevel\n  :param currentTime: long\n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry",
  "getSink": ":return: io.deephaven.io.log.LogSink",
  "info": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  \n*Overload 4*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable",
  "isDebugEnabled": ":return: boolean",
  "isEmailEnabled": ":return: boolean",
  "isErrorEnabled": ":return: boolean",
  "isFatalEnabled": ":return: boolean",
  "isInfoEnabled": ":return: boolean",
  "isLevelEnabled": ":param level: io.deephaven.io.log.LogLevel\n:return: boolean",
  "isTraceEnabled": ":return: boolean",
  "isWarnEnabled": ":return: boolean",
  "setLevel": ":param level: io.deephaven.io.log.LogLevel",
  "trace": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  \n*Overload 4*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable",
  "warn": "*Overload 1*  \n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 2*  \n  :param t: java.lang.Throwable\n  :return: io.deephaven.io.log.LogEntry\n  \n*Overload 3*  \n  :param object: java.lang.Object\n  \n*Overload 4*  \n  :param object: java.lang.Object\n  :param t: java.lang.Throwable"
 },
 "path": "io.deephaven.io.logger.Logger",
 "text": "Allocationless logger interface For testing help, see ConsolidatingLogEntry.",
 "typeName": "interface"
}