{
 "className": "io.deephaven.csv.sinks.Sink",
 "methods": {
  "write": "Write a chunk of data to the target data structure. Sample implementation: \n     if (appending) {\n         while (mycolumn.size() < destBegin) {\n             myColumn.addNull();\n         }\n         int srcIndex = 0;\n         for (long destIndex = destBegin; destIndex != destEnd; ++destIndex) {\n             if (isNull[srcIndex]) {\n                 myColumn.addNull();\n             } else {\n                 myColumn.add(src[srcIndex]);\n             }\n             ++srcIndex;\n         }\n     } else {\n         // replacing\n         int srcIndex = 0;\n         for (long destIndex = destBegin; destIndex != destEnd; ++destIndex) {\n             if (isNull[srcIndex]) {\n                 myColumn[destIndex] = myNullRepresentation;\n             } else {\n                 myColumn[destIndex] = src[srcIndex];\n             }\n             ++srcIndex;\n         }\n\n     }\n     \n\n:param src: (Sink.TARRAY) - The chunk of data, a typed array (short[], double[], etc) with valid elements in the half-open\n        interval [0..(destEnd - destBegin)).\n:param isNull: (boolean[]) - A boolean array, with the same range of valid elements. A \"true\" value at position i means\n        that src[i] should be ignored and the element should be considered as the \"null value\", whose\n        representation depends on the target data structure. A \"false\" value means that src[i] should be\n        interpreted normally.\n:param destBegin: (long) - The inclusive start index of the destination range.\n:param destEnd: (long) - The exclusive end index of the destination range.\n:param appending: (boolean) - A hint to the destination which indicates whether the system is appending to the data structure\n        (if appending is true), or overwriting previously-written values (if appending is false). The caller\n        promises to never span these two cases: i.e. it will never pass a chunk of data which partially overwrites\n        values and then partially appends values. This flag is convenient but technically redundant because code\n        can also determine what case it's in by comparing destEnd to the data structure's current size."
 },
 "path": "io.deephaven.csv.sinks.Sink",
 "text": "The system uses this interface to write to caller's column data structures. The reason this interface exists is so\n that the caller can use whatever column data structure they want to for final storage of the data.",
 "typeName": "interface"
}