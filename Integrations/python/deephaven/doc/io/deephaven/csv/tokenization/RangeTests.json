{
 "className": "io.deephaven.csv.tokenization.RangeTests",
 "methods": {
  "isAscii": "Are all the characters in byte slice ASCII?\n\n:param data: (byte[]) - The character data.\n:param begin: (int) - The inclusive start of the slice.\n:param end: (int) - The exclusive end of the slice.\n:return: (boolean) True if all the characters are ASCII, false otherwise.",
  "isDigit": "Is the character an ASCII digit?\n\n:param ch: (char) - The character.\n:return: (boolean) True if the character is an ASCII digit. False otherwise.",
  "isInRangeForByte": "Is the value in range for a Java byte?\n\n:param value: (long) - The value.\n:return: (boolean) True if the value is in range for a Java byte. False otherwise.",
  "isInRangeForFloat": "Is the value in range for a Java float?\n\n:param value: (double) - The value.\n:return: (boolean) True if the value is in range for a Java float. False otherwise.",
  "isInRangeForInt": "Is the value in range for a Java int?\n\n:param value: (long) - The value.\n:return: (boolean) True if the value is in range for a Java int. False otherwise.",
  "isInRangeForShort": "Is the value in range for a Java short?\n\n:param value: (long) - The value.\n:return: (boolean) True if the value is in range for a Java short. False otherwise.",
  "isLower": "Is the character lowercase ASCII?\n\n:param ch: (char) - The character.\n:return: (boolean) True if the character is lowercase ASCII. False otherwise.",
  "isSpaceOrTab": "Is the character space or tab?\n\n:param ch: (byte) - The character.\n:return: (boolean) True if the character is space or tab. False otherwise.",
  "isUpper": "Is the character uppercase ASCII?\n\n:param ch: (char) - The character.\n:return: (boolean) True if the character is uppercase ASCII. False otherwise.",
  "toUpper": "If the character is lowercase ASCII, converts it to uppercase ASCII. Otherwise leaves it alone.\n\n:param ch: (char) - The character.\n:return: (char) The converted or unchanged character."
 },
 "path": "io.deephaven.csv.tokenization.RangeTests",
 "text": "Simple range tests that may be faster than the corresponding Java utilities because they are ASCII-specific.",
 "typeName": "class"
}