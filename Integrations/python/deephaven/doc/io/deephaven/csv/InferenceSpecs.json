{
 "className": "io.deephaven.csv.InferenceSpecs",
 "methods": {
  "builder": "Creates a builder for InferenceSpecs.\n\n:return: (io.deephaven.csv.InferenceSpecs.Builder) the builder",
  "complete": "The \"complete\" inference.\n\n:return: io.deephaven.csv.InferenceSpecs",
  "microTimes": ":return: io.deephaven.csv.InferenceSpecs",
  "milliTimes": ":return: io.deephaven.csv.InferenceSpecs",
  "minimal": "The \"minimal\" inference.\n\n:return: io.deephaven.csv.InferenceSpecs",
  "nanoTimes": ":return: io.deephaven.csv.InferenceSpecs",
  "nullParser": "The parser to return when all values are null. May be null.\n\n \n By default, returns a Parsers.STRING.\n\n:return: (io.deephaven.csv.parsers.Parser<?>) the on-null values parser",
  "parsers": "The parsers that the user wants to participate in type inference. Note that the order that the parsers in this\n list matters only for custom parsers. In particular:\n \n* Standard system parsers (singletons from the Parsers class) will run in their standard precedence\n order, regardless of the order they appear here.\n* All specified system parsers will be run before any specified custom parsers.\n* Custom parsers will be run in the order they are specified here.\n\n\n:return: (java.util.List<io.deephaven.csv.parsers.Parser<?>>) the parsers",
  "standard": "The \"standard\" inference, does not parse bytes, shorts, or floats.\n\n:return: io.deephaven.csv.InferenceSpecs",
  "standardTimes": "The standard parsers with additional Instant-based parsing.\n\n:return: (io.deephaven.csv.InferenceSpecs) the standard times inference",
  "strings": "The string-only inference.\n\n:return: (io.deephaven.csv.InferenceSpecs) the string-only inference"
 },
 "path": "io.deephaven.csv.InferenceSpecs",
 "text": "Inference specifications contains the configuration and logic for inferring an acceptable parser from string values.",
 "typeName": "class"
}