{
 "className": "io.deephaven.base.cache.RetentionCache",
 "methods": {
  "forget": "Ask this RetentionCache to forget about a reference.\n\n:param referent: (RetentionCache.TYPE) - The referent to forget the reference to",
  "forgetAll": "Ask this RetentionCache to forget all the references it's remembering.",
  "retain": "Ask this RetentionCache to hold on to a reference in order to ensure that referent remains\n strongly-reachable for the garbage collector.\n\n:param referent: (RetentionCache.TYPE) - The object to hold a reference to\n:return: (RetentionCache.TYPE) referent, for convenience when retaining anonymous class instances"
 },
 "path": "io.deephaven.base.cache.RetentionCache",
 "text": "Utility for holding strong references to otherwise unreachable classes (e.g. listeners that will be weakly held by\n the object they subscribe to).",
 "typeName": "class"
}