{
 "className": "io.deephaven.base.verify.RequirementFailure",
 "methods": {
  "adjustForDelegatingMethod": "If this stack frame caused the exception, adjust the culprit to be the caller. Used when a delegating method\n can't verify all requirements itself but shouldn't receive the blame.\n\n:return: io.deephaven.base.verify.RequirementFailure",
  "adjustForDelegatingMethodAndSyntheticAccessor": "If this stack frame caused the exception, adjust the culprit to be the caller. Used when a delegating method\n can't verify all requirements itself but shouldn't receive the blame.\n\n:return: io.deephaven.base.verify.RequirementFailure",
  "getNumCallsBelowRequirer": "Gets the number of stack frames that should be removed from the stack to find the caller which failed to meet\n requirements.\n\n:return: int",
  "getOriginalStackTrace": "Gets the unmodified stack trace, instead of the one with the culprit identified.\n\n:return: java.lang.StringBuffer",
  "isThisStackFrameCulprit": "Returns true if this stack frame is blamed for causing the exception.\n\n:param nFramesBelowTargetFrame: int\n:return: boolean",
  "printStackTrace": "*Overload 1*  \n  \n  \n*Overload 2*  \n  :param s: java.io.PrintStream\n  \n*Overload 3*  \n  :param s: java.io.PrintWriter"
 },
 "path": "io.deephaven.base.verify.RequirementFailure",
 "text": "RuntimeException to be thrown on requirement failures.",
 "typeName": "class"
}