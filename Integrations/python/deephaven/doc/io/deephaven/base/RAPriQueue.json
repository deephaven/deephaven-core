{
 "className": "io.deephaven.base.RAPriQueue",
 "methods": {
  "clear": "clear out the queue",
  "dump": "*Overload 1*  \n  :param result: RAPriQueue.T[]\n  :param startIndex: int\n  :return: int\n  \n*Overload 2*  \n  Note: Java generics information - <T2>\n  \n  :param result: T2[]\n  :param startIndex: int\n  :param f: io.deephaven.base.Function.Unary<T2,RAPriQueue.T>\n  :return: int",
  "enter": "Adds an element to the queue, or moves to appropriate place if already there\n\n:param el: RAPriQueue.T",
  "get": ":param index: int\n:return: RAPriQueue.T",
  "isEmpty": "Returns true if the priority queue contains no elements.\n\n:return: boolean",
  "remove": "remove an arbitrary element from the queue\n\n:param el: RAPriQueue.T",
  "removeTop": "Remove the top element from the queue, or null if the queue is empty\n\n:return: RAPriQueue.T",
  "size": "return the priority queue's size\n\n:return: int",
  "top": "Return the top of the queue\n\n:return: RAPriQueue.T"
 },
 "path": "io.deephaven.base.RAPriQueue",
 "text": "A \"random-access\" priority queue.",
 "typeName": "class"
}