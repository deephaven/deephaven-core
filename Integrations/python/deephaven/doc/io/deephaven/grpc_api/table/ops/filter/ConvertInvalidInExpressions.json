{
 "className": "io.deephaven.grpc_api.table.ops.filter.ConvertInvalidInExpressions",
 "methods": {
  "exec": ":param filter: io.deephaven.proto.backplane.grpc.Condition\n:return: io.deephaven.proto.backplane.grpc.Condition",
  "onIn": ":param target: io.deephaven.proto.backplane.grpc.Value\n:param candidatesList: java.util.List<io.deephaven.proto.backplane.grpc.Value>\n:param caseSensitivity: io.deephaven.proto.backplane.grpc.CaseSensitivity\n:param matchType: io.deephaven.proto.backplane.grpc.MatchType\n:return: io.deephaven.proto.backplane.grpc.Condition"
 },
 "path": "io.deephaven.grpc_api.table.ops.filter.ConvertInvalidInExpressions",
 "text": "Rewrite any IN-type expression into its corresponding EQUALS if the left side\n is not a reference or if the right side does have a reference. Assumes that\n FlipNonReferenceMatchExpression has already been run, making this the second\n attempt to deal with these, and letting us be confident that these expressions\n cannot be expressed as more efficient \"in\"s.\n\n Examples:\n   o  ColumnA in 1 - left as is\n   o  ColumnA in 1, 2 - left as is\n   o  1 in 2 - rewritten to 1 == 2.\n   o  ColumnA in ColumnB - rewritten to ColumnA == ColumnB\n\n Signs that visitors were mis-ordered:\n   o  1 in ColumnA - literal on LHS should already be handled\n   o  1 in 2, 3 - literal on LHS with multiple RHS values should already be handled, should have been flipped and split into individual exprs\n   o  ColumnA in ColumnB, 2 - column ref on RHS should already be handled",
 "typeName": "class"
}