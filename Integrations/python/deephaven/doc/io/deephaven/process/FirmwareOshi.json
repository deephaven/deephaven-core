{
 "className": "io.deephaven.process.FirmwareOshi",
 "methods": {
  "from": ":param firmware: oshi.hardware.Firmware\n:return: io.deephaven.process.FirmwareOshi",
  "getDescription": "Get the firmware description.\n\n:return: (java.lang.String) the description",
  "getManufacturer": "Get the firmware manufacturer.\n\n:return: (java.lang.String) the manufacturer",
  "getName": "Get the firmware name.\n\n:return: (java.lang.String) the name",
  "getReleaseDate": "Get the firmware release date.\n\n:return: (java.lang.String) The date in ISO 8601 YYYY-MM-DD format.",
  "getVersion": "Get the firmware version.\n\n:return: (java.lang.String) the version",
  "traverse": "Traverse this property set and output the property key/values to the given visitor.\n \n Callers should typically prefer to call PropertyVisitor.visitProperties(PropertySet), as the inversion of\n logic allows the visitor (the more stateful object) to potentially perform initialization logic and traverse more\n efficiently.\n\n:param visitor: (io.deephaven.properties.PropertyVisitor) - the visitor"
 },
 "path": "io.deephaven.process.FirmwareOshi",
 "text": "The Firmware represents the low level BIOS or equivalent",
 "typeName": "class"
}