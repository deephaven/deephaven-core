{
 "className": "io.deephaven.process.ComputerSystemOshi",
 "methods": {
  "from": ":param computerSystem: oshi.hardware.ComputerSystem\n:return: io.deephaven.process.ComputerSystemOshi",
  "getBaseboard": "Get the computer system baseboard/motherboard\n\n:return: (io.deephaven.process.BaseboardOshi) A BaseboardOshi object for this system",
  "getFirmware": "Get the computer system firmware/BIOS\n\n:return: (io.deephaven.process.FirmwareOshi) A FirmwareOshi object for this system",
  "getManufacturer": "Get the computer system manufacturer.\n\n:return: (java.lang.String) The manufacturer.",
  "getModel": "Get the computer system model.\n\n:return: (java.lang.String) The model.",
  "traverse": "Traverse this property set and output the property key/values to the given visitor.\n \n Callers should typically prefer to call PropertyVisitor.visitProperties(PropertySet), as the inversion of\n logic allows the visitor (the more stateful object) to potentially perform initialization logic and traverse more\n efficiently.\n\n:param visitor: (io.deephaven.properties.PropertyVisitor) - the visitor"
 },
 "path": "io.deephaven.process.ComputerSystemOshi",
 "text": "The ComputerSystem represents the physical hardware, of a computer system/product and includes BIOS/firmware and a\n motherboard, logic board, etc.",
 "typeName": "class"
}