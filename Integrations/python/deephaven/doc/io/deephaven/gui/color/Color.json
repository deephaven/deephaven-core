{
 "className": "io.deephaven.gui.color.Color",
 "methods": {
  "color": "Creates a Color instance represented by the color String.\n\n Colors are specified by name or hex value.\n\n Hex values are parsed as follows:\n first two digits set the Red component of the color;\n second two digits set the Green component; third two the Blue.\n Hex values must have a \"#\" in front, e.g. \"#001122\"\n\n For available names, see Color and colorNames()\n\n:param color: (java.lang.String) - color; may be hex representation or case-insensitive color name\n:return: (io.deephaven.gui.color.Color) Color instance represented by the color String",
  "colorHSL": "Creates a Color with the specified hue, saturation,\n lightness, and alpha.  The lower the alpha, the more transparent the color.\n\n*Overload 1*  \n  :param h: (float) - the hue component, as a degree on the color wheel\n  :param s: (float) - the saturation component, as a percentage\n  :param l: (float) - the lightness component, as a percentage\n  :return: (io.deephaven.gui.color.Color) Color with the specified HSL values.  Alpha is defaulted to 1.0.\n  \n*Overload 2*  \n  :param h: (float) - the hue component, as a degree on the color wheel\n  :param s: (float) - the saturation component, as a percentage\n  :param l: (float) - the lightness component, as a percentage\n  :param a: (float) - the alpha component\n  :return: (io.deephaven.gui.color.Color) Color with the specified HSLA values",
  "colorNames": "Gets the names of all available colors.\n\n:return: (java.lang.String[]) array of names of all available colors",
  "colorRGB": "Creates a Color with the specified red, green, blue, and alpha values.\n\n*Overload 1*  \n  :param r: (int) - the red component in the range (0 - 255).\n  :param g: (int) - the green component in the range (0 - 255).\n  :param b: (int) - the blue component in the range (0 - 255).\n  :return: (io.deephaven.gui.color.Color) Color with the specified RGB values.  Alpha is defaulted to 255.\n  \n*Overload 2*  \n  :param r: (int) - the red component in the range (0 - 255).\n  :param g: (int) - the green component in the range (0 - 255).\n  :param b: (int) - the blue component in the range (0 - 255).\n  :param a: (int) - the alpha component in the range (0 - 255).\n  :return: (io.deephaven.gui.color.Color) Color with the specified RGBA values\n  \n*Overload 3*  \n  :param rgb: (int) - the combined rbga components consisting of the alpha component in bits 24-31, the red component in bits 16-23,\n          the green component in bits 8-15, and the blue component in bits 0-7. Alpha is defaulted to 255.\n  :return: (io.deephaven.gui.color.Color) Color with the specified RGB value\n  \n*Overload 4*  \n  :param rgba: (int) - the combined rbga components consisting of the alpha component in bits 24-31, the red component in bits 16-23,\n          the green component in bits 8-15, and the blue component in bits 0-7.\n          If hasAlpha is false, alpha is set to 255.\n  :param hasAlpha: (boolean) - if true, rgba is parsed with an alpha component. Otherwise, alpha defaults to 255\n  :return: (io.deephaven.gui.color.Color) Color with the specified RGBA value\n  \n*Overload 5*  \n  :param r: (float) - the red component in the range (0.0 - 1.0).\n  :param g: (float) - the green component in the range (0.0 - 1.0).\n  :param b: (float) - the blue component in the range (0.0 - 1.0).\n  :return: (io.deephaven.gui.color.Color) Color with the specified RGB values.  Alpha is defaulted to 1.0.\n  \n*Overload 6*  \n  :param r: (float) - the red component in the range (0.0 - 1.0).\n  :param g: (float) - the green component in the range (0.0 - 1.0).\n  :param b: (float) - the blue component in the range (0.0 - 1.0).\n  :param a: (float) - the alpha component in the range (0.0-1.0).  The lower the alpha, the more transparent the color.\n  :return: (io.deephaven.gui.color.Color) Color with the specified RGBA values",
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "hashCode": ":return: int",
  "javaColor": "Gets the Java object representative of this Paint.\n\n:return: (java.awt.Color) Java object representative of this Paint",
  "toString": ":return: java.lang.String",
  "valueOf": ":param color: java.lang.String\n:return: io.deephaven.gui.color.Color",
  "values": ":return: java.util.Collection<io.deephaven.gui.color.Color>"
 },
 "path": "io.deephaven.gui.color.Color",
 "text": "A color.\n TODO (deephaven/deephaven-core/issues/175): Move this to a new module and package",
 "typeName": "class"
}