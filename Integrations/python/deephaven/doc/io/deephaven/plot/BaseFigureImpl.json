{
 "className": "io.deephaven.plot.BaseFigureImpl",
 "methods": {
  "chart": "Returns a chart from this Figure's grid.\n\n*Overload 1*  \n  :param index: (int) - index from the Figure's grid to remove. The index starts at 0 in the upper left hand corner of the\n          grid and increases going left to right, top to bottom. E.g. for a 2x2 Figure, the indices would be [0, 1]\n          [2, 3].\n  :return: (io.deephaven.plot.ChartImpl) selected Chart\n  \n*Overload 2*  \n  :param rowNum: (int) - row index in this Figure's grid. The row index starts at 0.\n  :param colNum: (int) - column index in this Figure's grid. The column index starts at 0.\n  :return: (io.deephaven.plot.ChartImpl) selected Chart",
  "copy": "Creates a copy of this Figure.\n\n:return: (io.deephaven.plot.BaseFigureImpl) copy of this Figure.",
  "figureRemoveSeries": "Removes all series with names from this Figure.\n\n:param names: (java.lang.String...) - series names\n:return: (io.deephaven.plot.BaseFigureImpl) this Figure",
  "figureTitle": "Sets the title of this Figure\n\n:param title: (java.lang.String) - title\n:return: (io.deephaven.plot.BaseFigureImpl) this Figure",
  "figureTitleColor": "Sets the color of this Figure's title\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.plot.BaseFigureImpl) this Figure\n  \n*Overload 2*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.plot.BaseFigureImpl) this Figure",
  "figureTitleFont": "Sets the font of this Figure's title\n\n*Overload 1*  \n  :param font: (io.deephaven.plot.Font) - font\n  :return: (io.deephaven.plot.BaseFigureImpl) this Figure\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.plot.BaseFigureImpl) this Figure",
  "getCharts": "Gets this Figure's Charts.\n\n:return: (io.deephaven.plot.ChartArray) this Figure's Charts",
  "getFigureFunctionList": ":return: java.util.List<io.deephaven.plot.util.functions.FigureImplFunction>",
  "getHeight": "Gets the numRows of this Figure. This is equal to the number of rows.\n\n:return: (int) this Figure's height",
  "getName": ":return: java.lang.String",
  "getPlotInfo": ":return: io.deephaven.plot.errors.PlotInfo",
  "getSessionId": ":return: int",
  "getTableFunctionMap": ":return: java.util.Map<io.deephaven.engine.table.Table,java.util.Set<java.util.function.Function<io.deephaven.engine.table.Table,io.deephaven.engine.table.Table>>>",
  "getTableHandles": "Gets the table handles associated with this figure.\n\n:return: (java.util.Set<io.deephaven.plot.util.tables.TableHandle>) table handles associated with this figure.",
  "getTableMapFunctionMap": ":return: java.util.Map<io.deephaven.engine.table.TableMap,java.util.Set<java.util.function.Function<io.deephaven.engine.table.TableMap,io.deephaven.engine.table.TableMap>>>",
  "getTableMapHandles": "Gets the table maps associated with this figure.\n\n:return: (java.util.Set<io.deephaven.plot.util.tables.TableMapHandle>) table handles associated with this figure.",
  "getTitle": "Gets the title of this Figure.\n\n:return: (java.lang.String) this Figure's title",
  "getTitleColor": "Gets the Paint of this Figure's title.\n\n:return: (io.deephaven.gui.color.Paint) this Figure's title's Paint",
  "getTitleFont": "Gets the Font of this Figure's title.\n\n:return: (io.deephaven.plot.Font) this Figure's title's Font",
  "getUpdateInterval": "Gets the updateInterval, in milliseconds, for this Figure.\n\n:return: (long) update interval of this Figure, in milliseconds",
  "getWidth": "Gets the width of this Figure. This is equal to the number of columns.\n\n:return: (int) this Figure's width",
  "isResizable": "Whether this Figure's height and width are changeable.\n\n:return: (boolean) true if this Figure's height and width are changeable, false otherwise",
  "newChart": "Adds a new Chart to this figure.\n\n*Overload 1*  \n  :return: (io.deephaven.plot.ChartImpl) the new Chart. The Chart is placed in the next available grid space, starting at the\n           upper left hand corner of the grid, going left to right, top to bottom. If no available space is found in\n           the grid:\n           \n  * if this Figure was created with no specified grid size, then the Figure will resize itself to add the\n           new Chart;\n  * if not, a RuntimeException will be thrown.\n  \n*Overload 2*  \n  :param index: (int) - index from the Figure's grid to remove. The index starts at 0 in the upper left hand corner of the\n          grid and increases going left to right, top to bottom. E.g. for a 2x2 Figure, the indices would be [0, 1]\n          [2, 3].\n  :return: (io.deephaven.plot.ChartImpl) the new Chart. The Chart is placed at the grid space indicated by the index.\n  \n*Overload 3*  \n  :param rowNum: (int) - row index in this Figure's grid. The row index starts at 0.\n  :param colNum: (int) - column index in this Figure's grid. The column index starts at 0.\n  :return: (io.deephaven.plot.ChartImpl) the new Chart. The Chart is placed at the grid space [rowNum, colNum.",
  "registerFigureFunction": ":param function: io.deephaven.plot.util.functions.FigureImplFunction",
  "registerTableFunction": ":param t: io.deephaven.engine.table.Table\n:param function: java.util.function.Function<io.deephaven.engine.table.Table,io.deephaven.engine.table.Table>",
  "registerTableMapFunction": ":param tableMapHandle: io.deephaven.plot.util.tables.TableMapHandle\n:param tableTransform: java.util.function.Function<io.deephaven.engine.table.Table,io.deephaven.engine.table.Table>",
  "removeChart": "Removes a chart from the Figure's grid.\n\n*Overload 1*  \n  :param index: (int) - index from the Figure's grid to remove. The index starts at 0 in the upper left hand corner of the\n          grid and increases going left to right, top to bottom. E.g. for a 2x2 Figure, the indices would be [0, 1]\n          [2, 3].\n  :return: (io.deephaven.plot.BaseFigureImpl) this Figure with the chart removed.\n  \n*Overload 2*  \n  :param rowNum: (int) - row index in this Figure's grid. The row index starts at 0.\n  :param colNum: (int) - column index in this Figure's grid. The column index starts at 0.\n  :return: (io.deephaven.plot.BaseFigureImpl) this Figure with the chart removed.",
  "setName": ":param figureName: java.lang.String",
  "setSessionId": ":param sessionId: int",
  "updateInterval": "Sets the update interval of this Figure. The plot will be redrawn at this update interval.\n\n:param updateIntervalMillis: (long) - update interval, in milliseconds\n:return: (io.deephaven.plot.BaseFigureImpl) this Figure",
  "validateInitialization": "Checks if the figure can be instantiated. Throws an error if not."
 },
 "path": "io.deephaven.plot.BaseFigureImpl",
 "text": "Container for Charts.",
 "typeName": "class"
}