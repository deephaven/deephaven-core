{
 "className": "io.deephaven.plot.datasets.DataSeries",
 "methods": {
  "errorBarColor": "Sets the error bar Paint for this dataset.\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries\n  \n*Overload 2*  \n  :param color: (int) - index of the color in the series color palette\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries\n  \n*Overload 3*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries",
  "gradientVisible": "Sets whether bar gradients are visible.\n\n:param visible: (boolean) - bar gradient visibility\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "lineColor": "Defines the default line color.\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 2*  \n  :param color: (int) - color palette index\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 3*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "lineStyle": "Sets the line style.\n\n:param style: (io.deephaven.plot.LineStyle) - style\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "linesVisible": "Sets whether lines are visible.\n\n:param visible: (java.lang.Boolean) - line visibility\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "pointColor": "Sets the point color. Unspecified points use the default color.\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 2*  \n  :param color: (int) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 3*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "pointColorByY": "Sets the point color for a data point based upon the y-value.\n\n*Overload 1*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: (java.util.function.Function<java.lang.Double,T>) - function from the y-value of data points to Paint\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries\n  \n*Overload 2*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: (groovy.lang.Closure<T>) - function from the y-value of data points to Paint\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries",
  "pointLabel": "Sets the point label for data point i from index i of the input labels. Points outside of these indices are\n unlabeled.\n\n:param label: (java.lang.Object) - label\n:return: (io.deephaven.plot.datasets.DataSeries) this XYDataSeries",
  "pointLabelFormat": "Sets the point label format.\n \n Use {0} where the data series name should be inserted, {1} for the x-value and {2} y-value e.g. \"{0}: ({1}, {2})\"\n will display as Series1: (2.0, 5.5).\n\n:param format: (java.lang.String) - format\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "pointShape": "Sets the point shapes for data point i from index i of the input labels. Points outside of these indices use\n default shapes.\n\n*Overload 1*  \n  :param shape: (java.lang.String) - shape\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries\n  \n*Overload 2*  \n  :param shape: (io.deephaven.gui.shape.Shape) - shape\n  :return: (io.deephaven.plot.datasets.DataSeries) this DataSeries",
  "pointSize": "Sets the point size. A scale factor of 1 is the default size. A scale factor of 2 is 2x the default size.\n Unspecified points use the default size.\n\n*Overload 1*  \n  :param factor: (int) - point size\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 2*  \n  :param factor: (long) - point size\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 3*  \n  :param factor: (double) - point size\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 4*  \n  :param factor: (java.lang.Number) - point size\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "pointsVisible": "Sets whether points are visible.\n\n:param visible: (java.lang.Boolean) - point visibility\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "seriesColor": "Defines the default line and point color.\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 2*  \n  :param color: (int) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.\n  \n*Overload 3*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "toolTipPattern": "Sets the tooltip format.\n\n:param format: (java.lang.String) - format\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "xToolTipPattern": "Sets the x-value tooltip format.\n\n:param format: (java.lang.String) - format\n:return: (io.deephaven.plot.datasets.DataSeries) this data series.",
  "yToolTipPattern": "Sets the y-value tooltip format.\n\n:param format: (java.lang.String) - format\n:return: (io.deephaven.plot.datasets.DataSeries) this data series."
 },
 "path": "io.deephaven.plot.datasets.DataSeries",
 "text": "A generic data series.",
 "typeName": "interface"
}