{
 "className": "io.deephaven.lang.generated.ChunkerMixin",
 "methods": {
  "back": ":param amt: int\n:param begin: int",
  "curToken": ":return: io.deephaven.lang.generated.Token",
  "eatJunk": ":return: io.deephaven.lang.generated.Token",
  "isAssign": ":return: boolean",
  "isBinExprAcrossNewline": ":return: boolean",
  "isClassDecl": ":return: boolean",
  "isLookingAhead": ":return: boolean",
  "isParamList": ":return: boolean",
  "isPythonAnnotated": ":return: boolean",
  "isScope": ":return: boolean",
  "isTypedAssign": ":return: boolean",
  "isTypedInvoke": ":param ctor: boolean\n:return: boolean",
  "next": ":return: char",
  "peek": ":return: io.deephaven.lang.generated.ChunkerMixin.PeekStream",
  "report": ":param code: int\n:param e: java.lang.Throwable",
  "set": ":param cs: char...\n:return: java.util.Set<java.lang.Character>",
  "token": ":return: io.deephaven.lang.generated.Token"
 },
 "path": "io.deephaven.lang.generated.ChunkerMixin",
 "text": "Used to extract some reusable token-checking logic from the generated parser.\n\n This will help rescue some somewhat complex code from our language-definition .jtt file,\n and keep it here, where it can be more easily understood / edited.",
 "typeName": "interface"
}