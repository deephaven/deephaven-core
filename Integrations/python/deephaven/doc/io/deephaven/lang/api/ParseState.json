{
 "className": "io.deephaven.lang.api.ParseState",
 "methods": {
  "addChild": ":param child: io.deephaven.lang.api.ParseState",
  "finish": ":return: io.deephaven.lang.api.ParseState",
  "getNext": ":return: io.deephaven.lang.generated.Node",
  "getParent": ":return: io.deephaven.lang.api.ParseState",
  "getSrc": ":return: io.deephaven.lang.generated.Node"
 },
 "path": "io.deephaven.lang.api.ParseState",
 "text": "Represents the state of a \"currently being parsed node\".\n\n For now, we're going to use this to have our own hierarchy of ast nodes outside of the generated jjt state machine,\n and in the future, the hope is that this will also allow us to perform resumable / incremental document parsing, by\n simply invalidating any changed ParseState, and then restarting the parser in the correct state, over the changed set\n of text.",
 "typeName": "class"
}