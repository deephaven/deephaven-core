{
 "className": "io.deephaven.api.filter.FilterOr",
 "methods": {
  "builder": ":return: io.deephaven.api.filter.FilterOr.Builder",
  "filters": "The filters.\n\n:return: (java.util.List<io.deephaven.api.filter.Filter>) the filters",
  "forEach": ":param action: java.util.function.Consumer<? superio.deephaven.api.filter.Filter>",
  "iterator": ":return: java.util.Iterator<io.deephaven.api.filter.Filter>",
  "of": "*Overload 1*  \n  :param filters: io.deephaven.api.filter.Filter...\n  :return: io.deephaven.api.filter.FilterOr\n  \n*Overload 2*  \n  :param filters: java.lang.Iterable<? extendsio.deephaven.api.filter.Filter>\n  :return: io.deephaven.api.filter.FilterOr",
  "spliterator": ":return: java.util.Spliterator<io.deephaven.api.filter.Filter>",
  "walk": "Note: Java generics information - <V extends io.deephaven.api.filter.Filter.Visitor>\n\n:param visitor: V\n:return: V"
 },
 "path": "io.deephaven.api.filter.FilterOr",
 "text": "Evaluates to true when any of the given filters evaluates to true.",
 "typeName": "class"
}