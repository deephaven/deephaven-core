{
 "className": "io.deephaven.api.JoinMatch",
 "methods": {
  "from": ":param values: java.util.Collection<java.lang.String>\n:return: java.util.List<io.deephaven.api.JoinMatch>",
  "left": "The column from the left table.\n\n:return: (io.deephaven.api.ColumnName) the left column name",
  "of": ":param left: io.deephaven.api.ColumnName\n:param right: io.deephaven.api.ColumnName\n:return: io.deephaven.api.JoinMatch",
  "parse": ":param x: java.lang.String\n:return: io.deephaven.api.JoinMatch",
  "right": "The column name from the right table.\n\n:return: (io.deephaven.api.ColumnName) the right column name"
 },
 "path": "io.deephaven.api.JoinMatch",
 "text": "A join match represents one column from a left table and one column from a\n right table. The exact semantics of the match depend on context. For example, a\n natural-join has equal-to matches; where-not-in has not-equal-to matches; and as-of-join's last\n match has less-than or less-than-or-equal-to matches.",
 "typeName": "interface"
}