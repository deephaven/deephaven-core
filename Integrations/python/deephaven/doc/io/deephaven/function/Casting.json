{
 "className": "io.deephaven.function.Casting",
 "methods": {
  "castDouble": "Casts an array to a double array.\n\n*Overload 1*  \n  :param values: (byte[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 2*  \n  :param values: (short[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 3*  \n  :param values: (int[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 4*  \n  :param values: (long[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 5*  \n  :param values: (float[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 6*  \n  :param values: (double[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 7*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 8*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 9*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 10*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 11*  \n  :param values: (io.deephaven.vector.FloatVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 12*  \n  :param values: (io.deephaven.vector.DoubleVector) - values\n  :return: (double[]) cast array.",
  "castLong": "Casts an array to a long array.\n\n*Overload 1*  \n  :param values: (byte[]) - values\n  :return: (long[]) cast array.\n  \n*Overload 2*  \n  :param values: (short[]) - values\n  :return: (long[]) cast array.\n  \n*Overload 3*  \n  :param values: (int[]) - values\n  :return: (long[]) cast array.\n  \n*Overload 4*  \n  :param values: (long[]) - values\n  :return: (long[]) cast array.\n  \n*Overload 5*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 6*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 7*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 8*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :return: (long[]) cast array.",
  "intToDouble": "Casts an int array to a double array.\n\n*Overload 1*  \n  :param values: (int[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 2*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :return: (io.deephaven.vector.DoubleVector) cast array.",
  "longToDouble": "Casts an long array to a double array.\n\n*Overload 1*  \n  :param values: (long[]) - values\n  :return: (double[]) cast array.\n  \n*Overload 2*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :return: (io.deephaven.vector.DoubleVector) cast array."
 },
 "path": "io.deephaven.function.Casting",
 "text": "A set of commonly used functions for casting between types.",
 "typeName": "class"
}