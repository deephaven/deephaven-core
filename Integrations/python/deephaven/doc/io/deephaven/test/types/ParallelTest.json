{
 "className": "io.deephaven.test.types.ParallelTest",
 "methods": {},
 "path": "io.deephaven.test.types.ParallelTest",
 "text": "A JUnit category for tests that can be run in parallel.\n\n To convert a JUnit 3 base test case (henceforth TestType) to JUnit 4, you must: a) annotate any testMethods() in\n TestType with @Test (junit 3 selects test methods based on nameStartsWith(\"test\")) b) override the JUnit 3 test case\n into a new supertype (henceforth: AdapterType) b-1) [Required] Add a public no-op method beginning with text `test`\n in your AdapterType, so it is a \"valid JUnit 3 test\" b-2) [Recommended] Add methods with @Before and @After to call\n setUp() / tearDown() on the AdapterType field c) create a field assigned to an instance of AdapterType (you may want\n simple instance field, an @Rule instance field, or an @ClassRule static field) c-1) If your AdapterType has\n setUp/tearDown, and you are not using @Rule or @ClassRule, annotate methods in your TestType: Add @Before/@After in\n TestType which calls this.adapter.setUp()/tearDown() as appropriate. d) add an appropriate junit runner. If you do\n not need anything fancy, use: @RunWith(org.junit.runners.BlockJUnit4ClassRunner.class)\n\n If you extend and use our existing JUnit3 test fixtures like RefreshingTableTestCase, you can use\n io.deephaven.test.junit4.JUnit4RefreshingTableTestCase as an example.",
 "typeName": "interface"
}