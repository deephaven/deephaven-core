{
 "className": "io.deephaven.modelfarm.ModelFarmOnDemand",
 "methods": {
  "requestUpdate": "**Incompatible overloads text - text from the first overload:**\n\nSubmit a request to execute the ModelFarmBase.model. Can be called either with or without a\n UpdateGraphProcessor lock -- the decision of whether/how to acquire a lock is left to the\n DO_LOCKED_FUNCTION.\n\n*Overload 1*  \n  :param dataManager: (ModelFarmOnDemand.ROWDATAMANAGERTYPE) - The RowDataManager that will provide data for the pricing requests.\n  :param callback: (java.lang.Runnable) - A callback function to run after all keys have been processed. Can be null, in which case\n          it will be ignored.\n  \n*Overload 2*  \n  :param dataManager: (ModelFarmOnDemand.ROWDATAMANAGERTYPE) - The RowDataManager that will provide data for the pricing requests.\n  :param callback: (java.lang.Runnable) - A callback function to run after all keys have been processed. Can be null, in which case\n          it will be ignored.\n  :param keys: (java.util.Set<ModelFarmOnDemand.KEYTYPE>) - They keys for which data should be passed to the model. If keys == null, then all keys\n          represented by the data in the dataManager will be processed."
 },
 "path": "io.deephaven.modelfarm.ModelFarmOnDemand",
 "text": "A ModelFarm implementation for evaluating a model upon request, retrieving a snapshot of data for all keys under a\n single UpdateGraphProcessor lock.",
 "typeName": "class"
}