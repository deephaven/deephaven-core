{
 "className": "io.deephaven.proto.backplane.grpc.SessionServiceGrpc",
 "methods": {
  "getCloseSessionMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.HandshakeRequest,io.deephaven.proto.backplane.grpc.CloseSessionResponse>",
  "getExportFromTicketMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.ExportRequest,io.deephaven.proto.backplane.grpc.ExportResponse>",
  "getExportNotificationsMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.ExportNotificationRequest,io.deephaven.proto.backplane.grpc.ExportNotification>",
  "getNewSessionMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.HandshakeRequest,io.deephaven.proto.backplane.grpc.HandshakeResponse>",
  "getRefreshSessionTokenMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.HandshakeRequest,io.deephaven.proto.backplane.grpc.HandshakeResponse>",
  "getReleaseMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.ReleaseRequest,io.deephaven.proto.backplane.grpc.ReleaseResponse>",
  "getServiceDescriptor": ":return: io.grpc.ServiceDescriptor",
  "getTerminationNotificationMethod": ":return: io.grpc.MethodDescriptor<io.deephaven.proto.backplane.grpc.TerminationNotificationRequest,io.deephaven.proto.backplane.grpc.TerminationNotificationResponse>",
  "newBlockingStub": "Creates a new blocking-style stub that supports unary and streaming output calls on the service\n\n:param channel: io.grpc.Channel\n:return: io.deephaven.proto.backplane.grpc.SessionServiceGrpc.SessionServiceBlockingStub",
  "newFutureStub": "Creates a new ListenableFuture-style stub that supports unary calls on the service\n\n:param channel: io.grpc.Channel\n:return: io.deephaven.proto.backplane.grpc.SessionServiceGrpc.SessionServiceFutureStub",
  "newStub": "Creates a new async stub that supports all call types for the service\n\n:param channel: io.grpc.Channel\n:return: io.deephaven.proto.backplane.grpc.SessionServiceGrpc.SessionServiceStub"
 },
 "path": "io.deephaven.proto.backplane.grpc.SessionServiceGrpc",
 "text": "User supplied Flight.Ticket(s) should begin with 'e' byte followed by an signed little-endian int. The client is only\n allowed to use the positive exportId key-space (client generated exportIds should be greater than 0). The client is\n encouraged to use a packed ranges of ids as this yields the smallest footprint server side for long running sessions.\n The client is responsible for releasing all Flight.Tickets that they create or that were created for them via a gRPC\n call. The documentation for the gRPC call will indicate that the exports must be released. Exports that need to be\n released will always be communicated over the session's ExportNotification stream.\n When a session ends, either explicitly or due to timeout, all exported objects in that session are released\n automatically.\n Some parts of the API return a Flight.Ticket that does not need to be released. It is not an error to attempt to\n release them.",
 "typeName": "class"
}