{
 "className": "io.deephaven.proto.backplane.grpc.Condition$Builder",
 "methods": {
  "addRepeatedField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "build": ":return: io.deephaven.proto.backplane.grpc.Condition",
  "buildPartial": ":return: io.deephaven.proto.backplane.grpc.Condition",
  "clear": ":return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearAnd": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearCompare": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearContains": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearData": ":return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearIn": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearInvoke": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearIsNull": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearMatches": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearNot": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearOneof": ":param oneof: com.google.protobuf.Descriptors.OneofDescriptor\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearOr": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clearSearch": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "clone": ":return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "getAnd": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n:return: (io.deephaven.proto.backplane.grpc.AndCondition) The and.",
  "getAndBuilder": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n:return: io.deephaven.proto.backplane.grpc.AndCondition.Builder",
  "getAndOrBuilder": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n:return: io.deephaven.proto.backplane.grpc.AndConditionOrBuilder",
  "getCompare": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n:return: (io.deephaven.proto.backplane.grpc.CompareCondition) The compare.",
  "getCompareBuilder": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n:return: io.deephaven.proto.backplane.grpc.CompareCondition.Builder",
  "getCompareOrBuilder": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n:return: io.deephaven.proto.backplane.grpc.CompareConditionOrBuilder",
  "getContains": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n:return: (io.deephaven.proto.backplane.grpc.ContainsCondition) The contains.",
  "getContainsBuilder": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n:return: io.deephaven.proto.backplane.grpc.ContainsCondition.Builder",
  "getContainsOrBuilder": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n:return: io.deephaven.proto.backplane.grpc.ContainsConditionOrBuilder",
  "getDataCase": ":return: io.deephaven.proto.backplane.grpc.Condition.DataCase",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.Condition",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getDescriptorForType": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getIn": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n:return: (io.deephaven.proto.backplane.grpc.InCondition) The in.",
  "getInBuilder": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n:return: io.deephaven.proto.backplane.grpc.InCondition.Builder",
  "getInOrBuilder": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n:return: io.deephaven.proto.backplane.grpc.InConditionOrBuilder",
  "getInvoke": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n:return: (io.deephaven.proto.backplane.grpc.InvokeCondition) The invoke.",
  "getInvokeBuilder": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n:return: io.deephaven.proto.backplane.grpc.InvokeCondition.Builder",
  "getInvokeOrBuilder": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n:return: io.deephaven.proto.backplane.grpc.InvokeConditionOrBuilder",
  "getIsNull": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n:return: (io.deephaven.proto.backplane.grpc.IsNullCondition) The isNull.",
  "getIsNullBuilder": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n:return: io.deephaven.proto.backplane.grpc.IsNullCondition.Builder",
  "getIsNullOrBuilder": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n:return: io.deephaven.proto.backplane.grpc.IsNullConditionOrBuilder",
  "getMatches": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n:return: (io.deephaven.proto.backplane.grpc.MatchesCondition) The matches.",
  "getMatchesBuilder": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n:return: io.deephaven.proto.backplane.grpc.MatchesCondition.Builder",
  "getMatchesOrBuilder": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n:return: io.deephaven.proto.backplane.grpc.MatchesConditionOrBuilder",
  "getNot": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n:return: (io.deephaven.proto.backplane.grpc.NotCondition) The not.",
  "getNotBuilder": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n:return: io.deephaven.proto.backplane.grpc.NotCondition.Builder",
  "getNotOrBuilder": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n:return: io.deephaven.proto.backplane.grpc.NotConditionOrBuilder",
  "getOr": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n:return: (io.deephaven.proto.backplane.grpc.OrCondition) The or.",
  "getOrBuilder": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "getOrOrBuilder": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n:return: io.deephaven.proto.backplane.grpc.OrConditionOrBuilder",
  "getSearch": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n:return: (io.deephaven.proto.backplane.grpc.SearchCondition) The search.",
  "getSearchBuilder": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n:return: io.deephaven.proto.backplane.grpc.SearchCondition.Builder",
  "getSearchOrBuilder": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n:return: io.deephaven.proto.backplane.grpc.SearchConditionOrBuilder",
  "hasAnd": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n:return: (boolean) Whether the and field is set.",
  "hasCompare": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n:return: (boolean) Whether the compare field is set.",
  "hasContains": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n:return: (boolean) Whether the contains field is set.",
  "hasIn": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n:return: (boolean) Whether the in field is set.",
  "hasInvoke": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n:return: (boolean) Whether the invoke field is set.",
  "hasIsNull": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n:return: (boolean) Whether the isNull field is set.",
  "hasMatches": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n:return: (boolean) Whether the matches field is set.",
  "hasNot": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n:return: (boolean) Whether the not field is set.",
  "hasOr": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n:return: (boolean) Whether the or field is set.",
  "hasSearch": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n:return: (boolean) Whether the search field is set.",
  "isInitialized": ":return: boolean",
  "mergeAnd": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n:param value: io.deephaven.proto.backplane.grpc.AndCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeCompare": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n:param value: io.deephaven.proto.backplane.grpc.CompareCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeContains": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n:param value: io.deephaven.proto.backplane.grpc.ContainsCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeFrom": "*Overload 1*  \n  :param other: com.google.protobuf.Message\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param other: io.deephaven.proto.backplane.grpc.Condition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 3*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeIn": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n:param value: io.deephaven.proto.backplane.grpc.InCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeInvoke": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n:param value: io.deephaven.proto.backplane.grpc.InvokeCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeIsNull": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n:param value: io.deephaven.proto.backplane.grpc.IsNullCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeMatches": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n:param value: io.deephaven.proto.backplane.grpc.MatchesCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeNot": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n:param value: io.deephaven.proto.backplane.grpc.NotCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeOr": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n:param value: io.deephaven.proto.backplane.grpc.OrCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeSearch": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n:param value: io.deephaven.proto.backplane.grpc.SearchCondition\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "mergeUnknownFields": ":param unknownFields: com.google.protobuf.UnknownFieldSet\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setAnd": ".io.deephaven.proto.backplane.grpc.AndCondition and = 1;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.AndCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.AndCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setCompare": ".io.deephaven.proto.backplane.grpc.CompareCondition compare = 4;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.CompareCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.CompareCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setContains": ".io.deephaven.proto.backplane.grpc.ContainsCondition contains = 9;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.ContainsCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.ContainsCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setIn": ".io.deephaven.proto.backplane.grpc.InCondition in = 5;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.InCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.InCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setInvoke": ".io.deephaven.proto.backplane.grpc.InvokeCondition invoke = 6;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.InvokeCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.InvokeCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setIsNull": ".io.deephaven.proto.backplane.grpc.IsNullCondition is_null = 7;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.IsNullCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.IsNullCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setMatches": ".io.deephaven.proto.backplane.grpc.MatchesCondition matches = 8;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.MatchesCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.MatchesCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setNot": ".io.deephaven.proto.backplane.grpc.NotCondition not = 3;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.NotCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.NotCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setOr": ".io.deephaven.proto.backplane.grpc.OrCondition or = 2;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.OrCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setRepeatedField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param index: int\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setSearch": ".io.deephaven.proto.backplane.grpc.SearchCondition search = 10;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.SearchCondition\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.SearchCondition.Builder\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "setUnknownFields": ":param unknownFields: com.google.protobuf.UnknownFieldSet\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder"
 },
 "path": "io.deephaven.proto.backplane.grpc.Condition.Builder",
 "text": "Protobuf type io.deephaven.proto.backplane.grpc.Condition",
 "typeName": "class"
}