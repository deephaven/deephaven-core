{
 "className": "io.deephaven.proto.backplane.grpc.FieldInfo$FieldType",
 "methods": {
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "getCustom": ".io.deephaven.proto.backplane.grpc.CustomInfo custom = 1;\n\n:return: (io.deephaven.proto.backplane.grpc.CustomInfo) The custom.",
  "getCustomOrBuilder": ".io.deephaven.proto.backplane.grpc.CustomInfo custom = 1;\n\n:return: io.deephaven.proto.backplane.grpc.CustomInfoOrBuilder",
  "getDefaultInstance": ":return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getFieldCase": ":return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType.FieldCase",
  "getFigure": "reserved = 3; // for TreeTable\n reserved = 4; // for TableMap\n \n.io.deephaven.proto.backplane.grpc.FigureInfo figure = 5;\n\n:return: (io.deephaven.proto.backplane.grpc.FigureInfo) The figure.",
  "getFigureOrBuilder": "reserved = 3; // for TreeTable\n reserved = 4; // for TableMap\n \n.io.deephaven.proto.backplane.grpc.FigureInfo figure = 5;\n\n:return: io.deephaven.proto.backplane.grpc.FigureInfoOrBuilder",
  "getParserForType": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.FieldInfo.FieldType>",
  "getSerializedSize": ":return: int",
  "getTable": ".io.deephaven.proto.backplane.grpc.TableInfo table = 2;\n\n:return: (io.deephaven.proto.backplane.grpc.TableInfo) The table.",
  "getTableOrBuilder": ".io.deephaven.proto.backplane.grpc.TableInfo table = 2;\n\n:return: io.deephaven.proto.backplane.grpc.TableInfoOrBuilder",
  "getUnknownFields": ":return: com.google.protobuf.UnknownFieldSet",
  "hasCustom": ".io.deephaven.proto.backplane.grpc.CustomInfo custom = 1;\n\n:return: (boolean) Whether the custom field is set.",
  "hasFigure": "reserved = 3; // for TreeTable\n reserved = 4; // for TableMap\n \n.io.deephaven.proto.backplane.grpc.FigureInfo figure = 5;\n\n:return: (boolean) Whether the figure field is set.",
  "hasTable": ".io.deephaven.proto.backplane.grpc.TableInfo table = 2;\n\n:return: (boolean) Whether the table field is set.",
  "hashCode": ":return: int",
  "isInitialized": ":return: boolean",
  "newBuilder": "*Overload 1*  \n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType.Builder\n  \n*Overload 2*  \n  :param prototype: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType.Builder",
  "newBuilderForType": ":return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType.Builder",
  "parseDelimitedFrom": "*Overload 1*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 2*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType",
  "parseFrom": "*Overload 1*  \n  :param data: java.nio.ByteBuffer\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 2*  \n  :param data: java.nio.ByteBuffer\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 3*  \n  :param data: com.google.protobuf.ByteString\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 4*  \n  :param data: com.google.protobuf.ByteString\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 5*  \n  :param data: byte[]\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 6*  \n  :param data: byte[]\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 7*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 8*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 9*  \n  :param input: com.google.protobuf.CodedInputStream\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType\n  \n*Overload 10*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType",
  "parser": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.FieldInfo.FieldType>",
  "toBuilder": ":return: io.deephaven.proto.backplane.grpc.FieldInfo.FieldType.Builder",
  "writeTo": ":param output: com.google.protobuf.CodedOutputStream"
 },
 "path": "io.deephaven.proto.backplane.grpc.FieldInfo.FieldType",
 "text": "Protobuf type io.deephaven.proto.backplane.grpc.FieldInfo.FieldType",
 "typeName": "class"
}