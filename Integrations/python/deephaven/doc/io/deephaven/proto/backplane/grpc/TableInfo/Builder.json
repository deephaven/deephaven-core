{
 "className": "io.deephaven.proto.backplane.grpc.TableInfo$Builder",
 "methods": {
  "addRepeatedField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "build": ":return: io.deephaven.proto.backplane.grpc.TableInfo",
  "buildPartial": ":return: io.deephaven.proto.backplane.grpc.TableInfo",
  "clear": ":return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "clearField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "clearIsStatic": "Whether or not this table might change.\n \nbool is_static = 2;\n\n:return: (io.deephaven.proto.backplane.grpc.TableInfo.Builder) This builder for chaining.",
  "clearOneof": ":param oneof: com.google.protobuf.Descriptors.OneofDescriptor\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "clearSchemaHeader": "Schema as described in Arrow Message.fbs::Message.\n \nbytes schema_header = 1;\n\n:return: (io.deephaven.proto.backplane.grpc.TableInfo.Builder) This builder for chaining.",
  "clearSize": "The current number of rows for this table.\n \nsint64 size = 3 [jstype = JS_STRING];\n\n:return: (io.deephaven.proto.backplane.grpc.TableInfo.Builder) This builder for chaining.",
  "clone": ":return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.TableInfo",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getDescriptorForType": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getIsStatic": "Whether or not this table might change.\n \nbool is_static = 2;\n\n:return: (boolean) The isStatic.",
  "getSchemaHeader": "Schema as described in Arrow Message.fbs::Message.\n \nbytes schema_header = 1;\n\n:return: (com.google.protobuf.ByteString) The schemaHeader.",
  "getSize": "The current number of rows for this table.\n \nsint64 size = 3 [jstype = JS_STRING];\n\n:return: (long) The size.",
  "isInitialized": ":return: boolean",
  "mergeFrom": "*Overload 1*  \n  :param other: com.google.protobuf.Message\n  :return: io.deephaven.proto.backplane.grpc.TableInfo.Builder\n  \n*Overload 2*  \n  :param other: io.deephaven.proto.backplane.grpc.TableInfo\n  :return: io.deephaven.proto.backplane.grpc.TableInfo.Builder\n  \n*Overload 3*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "mergeUnknownFields": ":param unknownFields: com.google.protobuf.UnknownFieldSet\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "setField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "setIsStatic": "Whether or not this table might change.\n \nbool is_static = 2;\n\n:param value: (boolean) - The isStatic to set.\n:return: (io.deephaven.proto.backplane.grpc.TableInfo.Builder) This builder for chaining.",
  "setRepeatedField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param index: int\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder",
  "setSchemaHeader": "Schema as described in Arrow Message.fbs::Message.\n \nbytes schema_header = 1;\n\n:param value: (com.google.protobuf.ByteString) - The schemaHeader to set.\n:return: (io.deephaven.proto.backplane.grpc.TableInfo.Builder) This builder for chaining.",
  "setSize": "The current number of rows for this table.\n \nsint64 size = 3 [jstype = JS_STRING];\n\n:param value: (long) - The size to set.\n:return: (io.deephaven.proto.backplane.grpc.TableInfo.Builder) This builder for chaining.",
  "setUnknownFields": ":param unknownFields: com.google.protobuf.UnknownFieldSet\n:return: io.deephaven.proto.backplane.grpc.TableInfo.Builder"
 },
 "path": "io.deephaven.proto.backplane.grpc.TableInfo.Builder",
 "text": "Lightly describe a Table.\n \n\n Protobuf type io.deephaven.proto.backplane.grpc.TableInfo",
 "typeName": "class"
}