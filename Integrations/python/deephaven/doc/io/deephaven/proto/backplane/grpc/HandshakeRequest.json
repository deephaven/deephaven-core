{
 "className": "io.deephaven.proto.backplane.grpc.HandshakeRequest",
 "methods": {
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "getAuthProtocol": "A defined protocol version.\n Deephaven's OSS protocols are as follows:\n - protocol = 0: most recent HandshakeResponse payload\n - protocol = 1: payload is BasicAuth\n \nsint32 auth_protocol = 1;\n\n:return: (int) The authProtocol.",
  "getDefaultInstance": ":return: io.deephaven.proto.backplane.grpc.HandshakeRequest",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.HandshakeRequest",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getParserForType": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.HandshakeRequest>",
  "getPayload": "Arbitrary auth/handshake info.\n \nbytes payload = 2;\n\n:return: (com.google.protobuf.ByteString) The payload.",
  "getSerializedSize": ":return: int",
  "getUnknownFields": ":return: com.google.protobuf.UnknownFieldSet",
  "hashCode": ":return: int",
  "isInitialized": ":return: boolean",
  "newBuilder": "*Overload 1*  \n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest.Builder\n  \n*Overload 2*  \n  :param prototype: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest.Builder",
  "newBuilderForType": ":return: io.deephaven.proto.backplane.grpc.HandshakeRequest.Builder",
  "parseDelimitedFrom": "*Overload 1*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 2*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest",
  "parseFrom": "*Overload 1*  \n  :param data: java.nio.ByteBuffer\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 2*  \n  :param data: java.nio.ByteBuffer\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 3*  \n  :param data: com.google.protobuf.ByteString\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 4*  \n  :param data: com.google.protobuf.ByteString\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 5*  \n  :param data: byte[]\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 6*  \n  :param data: byte[]\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 7*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 8*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 9*  \n  :param input: com.google.protobuf.CodedInputStream\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest\n  \n*Overload 10*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.HandshakeRequest",
  "parser": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.HandshakeRequest>",
  "toBuilder": ":return: io.deephaven.proto.backplane.grpc.HandshakeRequest.Builder",
  "writeTo": ":param output: com.google.protobuf.CodedOutputStream"
 },
 "path": "io.deephaven.proto.backplane.grpc.HandshakeRequest",
 "text": "The request that a client provides to a server on handshake.\n \n\n Protobuf type io.deephaven.proto.backplane.grpc.HandshakeRequest",
 "typeName": "class"
}