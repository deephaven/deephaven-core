{
 "className": "io.deephaven.db.tables.remote.preview.ColumnPreviewManager",
 "methods": {
  "addPreview": "Adds a data type to be converted to a Preview Type.\n\nNote: Java generics information - <S,D extends io.deephaven.db.tables.remote.preview.PreviewType>\n\n:param sourceType: java.lang.Class<S>\n:param destType: java.lang.Class<D>\n:param function: java.util.function.Function<S,D>",
  "applyPreview": "Iterates over a tables columns and applies a preview (or wraps non-serializable).\n\n:param table: (io.deephaven.db.tables.Table) - the table to apply the preview\n:return: (io.deephaven.db.tables.Table) the table containing the preview columns",
  "isColumnTypeDisplayable": "Indicates if a column type is displayable by the client.  This is used to screen out unknown classes, unserializable,\n and anything else that should not be displayed.\n\n:param type: (java.lang.Class<?>) - the column type\n:return: (boolean) true if the type can be displayed by the client, false otherwise.",
  "isOnWhiteList": "Indicates if a type is on the white list created from user defined properties.\n\n:param type: (java.lang.Class<?>) - the class type\n:return: (boolean) true if it is on the white list, false otherwise"
 },
 "path": "io.deephaven.db.tables.remote.preview.ColumnPreviewManager",
 "text": "Converts large data types to Preview types.  Also wraps non-serializable data types to be serializable.",
 "typeName": "class"
}