{
 "className": "io.deephaven.db.tables.utils.CsvParserFormat",
 "methods": {
  "getCsvFormat": "Returns an Apache CSVFormat based on the fileFormat String.\n\n:param fileFormat: (java.lang.String) - The string for which a format should be created\n:param delimiter: (char) - A single character to use as a delimiter - comma when format will be controlled by fileFormat\n:param trim: (boolean) - Whether to trim white space within delimiters\n:param noHeader: (boolean) - Indicates when the CSV does not include a row of column names\n:param columnNames: (java.util.List<java.lang.String>) - A List of column names to use as a header\n:return: (org.apache.commons.csv.CSVFormat) A CSVFormat object matching the passed String and trim option",
  "getFormatNames": ":return: java.lang.String[]",
  "getRequiredDelimiter": "For the specified file format, return the required delimiter if there is one\n\n:param fileFormat: (java.lang.String) - the file format\n:return: (java.lang.String) the required delimiter, or null if it is not specified"
 },
 "path": "io.deephaven.db.tables.utils.CsvParserFormat",
 "text": "Returns an Apache CSVFormat based on the fileFormat String.",
 "typeName": "class"
}