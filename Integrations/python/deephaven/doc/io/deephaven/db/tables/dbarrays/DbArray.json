{
 "className": "io.deephaven.db.tables.dbarrays.DbArray",
 "methods": {
  "defaultValToString": ":param val: java.lang.Object\n:return: java.lang.String",
  "equals": "Helper method for implementing Object.equals(Object).\n\n:param aArray: (io.deephaven.db.tables.dbarrays.DbArray) - The LHS of the equality test (always a DbArray)\n:param b: (java.lang.Object) - The RHS of the equality test\n:return: (boolean) Whether the two inputs are equal",
  "fillChunk": ":param destChunk: io.deephaven.db.v2.sources.chunk.WritableChunk",
  "get": ":param i: long\n:return: DbArray.T",
  "getComponentType": ":return: java.lang.Class<DbArray.T>",
  "getDirect": "Return a version of this DbArrayBase that is flattened out to only reference memory.\n\n:return: io.deephaven.db.tables.dbarrays.DbArray<DbArray.T>",
  "getPrev": ":param offset: long\n:return: DbArray.T",
  "hashCode": "Helper method for implementing Object.hashCode(). Follows the pattern in\n Arrays.hashCode(Object[]).\n\n:param array: (io.deephaven.db.tables.dbarrays.DbArray) - The DbArray to hash\n:return: (int) The hash code",
  "subArray": ":param fromIndexInclusive: long\n:param toIndexExclusive: long\n:return: io.deephaven.db.tables.dbarrays.DbArray<DbArray.T>",
  "subArrayByPositions": ":param positions: long[]\n:return: io.deephaven.db.tables.dbarrays.DbArray<DbArray.T>",
  "toArray": ":return: DbArray.T[]",
  "toChunk": ":return: io.deephaven.db.v2.sources.chunk.Chunk<io.deephaven.db.v2.sources.chunk.Attributes.Values>",
  "toString": "Helper method for implementing Object.toString().\n\n*Overload 1*  \n  :param prefixLength: int\n  :return: java.lang.String\n  \n*Overload 2*  \n  :param array: (io.deephaven.db.tables.dbarrays.DbArray<?>) - The DbArray to convert to a String\n  :param prefixLength: (int) - The maximum prefix of the array to convert\n  :return: (java.lang.String) The String representation of array",
  "type": "Note: Java generics information - <T>\n\n:param genericType: io.deephaven.qst.type.GenericType<T>\n:return: io.deephaven.qst.type.DbGenericArrayType<io.deephaven.db.tables.dbarrays.DbArray,T>"
 },
 "path": "io.deephaven.db.tables.dbarrays.DbArray",
 "typeName": "interface"
}