{
 "className": "io.deephaven.db.tables.utils.csv.CsvSpecs$Builder",
 "methods": {
  "build": ":return: io.deephaven.db.tables.utils.csv.CsvSpecs",
  "charset": ":param charset: java.nio.charset.Charset\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "delimiter": ":param delimiter: char\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "hasHeaderRow": ":param hasHeaderRow: boolean\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "header": ":param header: io.deephaven.qst.table.TableHeader\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "ignoreSurroundingSpaces": ":param ignoreSurroundingSpaces: boolean\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "inference": ":param inferenceSpecs: io.deephaven.db.tables.utils.csv.InferenceSpecs\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "putParsers": ":param columnName: java.lang.String\n:param parser: io.deephaven.db.tables.utils.csv.Parser<?>\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "quote": ":param quote: char\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
  "trim": ":param trim: boolean\n:return: io.deephaven.db.tables.utils.csv.CsvSpecs.Builder"
 },
 "path": "io.deephaven.db.tables.utils.csv.CsvSpecs.Builder",
 "typeName": "interface"
}