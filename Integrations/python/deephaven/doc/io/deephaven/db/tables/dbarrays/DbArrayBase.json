{
 "className": "io.deephaven.db.tables.dbarrays.DbArrayBase",
 "methods": {
  "clampIndex": ":param validFromInclusive: long\n:param validToExclusive: long\n:param index: long\n:return: long",
  "classToHelper": ":param clazz: java.lang.Class\n:return: java.util.function.Function<java.lang.Object,java.lang.String>",
  "fillChunk": ":param destChunk: io.deephaven.db.v2.sources.chunk.WritableChunk",
  "getComponentType": ":return: java.lang.Class",
  "getDirect": "Return a version of this DbArrayBase that is flattened out to only reference memory.\n\n:return: DbArrayBase.DBARRAY",
  "isEmpty": ":return: boolean",
  "mapSelectedPositionRange": ":param currentPositions: long[]\n:param selectedRangeStartInclusive: long\n:param selectedRangeEndExclusive: long\n:return: long[]",
  "mapSelectedPositions": ":param currentPositions: long[]\n:param selectedPositions: long[]\n:return: long[]",
  "subArray": ":param fromIndex: long\n:param toIndex: long\n:return: DbArrayBase.DBARRAY",
  "subArrayByPositions": ":param positions: long[]\n:return: DbArrayBase.DBARRAY",
  "toArray": ":return: java.lang.Object",
  "toChunk": ":return: io.deephaven.db.v2.sources.chunk.Chunk<io.deephaven.db.v2.sources.chunk.Attributes.Values>",
  "toString": ":param prefixLength: int\n:return: java.lang.String"
 },
 "path": "io.deephaven.db.tables.dbarrays.DbArrayBase",
 "typeName": "interface"
}