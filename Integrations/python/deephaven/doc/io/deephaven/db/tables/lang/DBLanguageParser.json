{
 "className": "io.deephaven.db.tables.lang.DBLanguageParser",
 "methods": {
  "convertBackticks": "Convert backticks into double-quote characters, unless the backticks are already enclosed in double-quotes.\n\n Also, within backticks, double-quotes are automatically re-escaped. For example, in the following string \"`This\n expression uses \\\"double quotes\\\"!`\" The string will be converted to: \"\\\"This expression uses \\\\\\\"double\n quotes\\\\\\\"!\\\"\"\n\n:param expression: (java.lang.String) - The expression to convert\n:return: (java.lang.String) The expression, with backticks and double-quotes appropriately converted and escaped",
  "convertSingleEquals": "Convert single equals signs (the assignment operator) to double-equals signs (equality operator). The parser will\n then replace the equality operator with an appropriate equality-checking methods. Assignments are not supported.\n\n This method does not have any special handling for backticks; accordingly this method should be run after\nconvertBackticks(String).\n\n:param expression: (java.lang.String) - The expression to convert\n:return: (java.lang.String) The expression, with unescaped single-equals signs converted to the equality operator (double-equals)",
  "getResult": "Retrieves the result of the parser, which includes the translated expression, its return type, and the variables\n it uses.\n\n:return: io.deephaven.db.tables.lang.DBLanguageParser.Result",
  "isDbArray": ":param type: java.lang.Class<?>\n:return: boolean",
  "visit": "*Overload 1*  \n  :param n: com.github.javaparser.ast.expr.NameExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 2*  \n  :param n: com.github.javaparser.ast.type.PrimitiveType\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 3*  \n  :param n: com.github.javaparser.ast.expr.ArrayAccessExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 4*  \n  :param n: com.github.javaparser.ast.expr.BinaryExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 5*  \n  :param n: com.github.javaparser.ast.expr.UnaryExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 6*  \n  :param n: com.github.javaparser.ast.expr.CastExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 7*  \n  :param n: com.github.javaparser.ast.type.ClassOrInterfaceType\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 8*  \n  :param n: com.github.javaparser.ast.type.ArrayType\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 9*  \n  :param n: com.github.javaparser.ast.expr.ConditionalExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 10*  \n  :param n: com.github.javaparser.ast.expr.EnclosedExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 11*  \n  :param n: com.github.javaparser.ast.expr.FieldAccessExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 12*  \n  :param n: com.github.javaparser.ast.expr.CharLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 13*  \n  :param n: com.github.javaparser.ast.expr.DoubleLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 14*  \n  :param n: com.github.javaparser.ast.expr.IntegerLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 15*  \n  :param n: com.github.javaparser.ast.expr.LongLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 16*  \n  :param n: com.github.javaparser.ast.expr.StringLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 17*  \n  :param n: com.github.javaparser.ast.expr.BooleanLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 18*  \n  :param n: com.github.javaparser.ast.expr.NullLiteralExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 19*  \n  :param n: com.github.javaparser.ast.expr.MethodCallExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 20*  \n  :param n: com.github.javaparser.ast.stmt.ExpressionStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 21*  \n  :param n: com.github.javaparser.ast.expr.ObjectCreationExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 22*  \n  :param n: com.github.javaparser.ast.expr.ArrayCreationExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 23*  \n  :param n: com.github.javaparser.ast.expr.ArrayInitializerExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 24*  \n  :param n: com.github.javaparser.ast.expr.ClassExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 25*  \n  :param n: com.github.javaparser.ast.expr.TypeExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 26*  \n  :param n: com.github.javaparser.ast.expr.MethodReferenceExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 27*  \n  :param n: com.github.javaparser.ast.body.AnnotationDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 28*  \n  :param n: com.github.javaparser.ast.body.AnnotationMemberDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 29*  \n  :param n: com.github.javaparser.ast.stmt.AssertStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 30*  \n  :param n: com.github.javaparser.ast.expr.AssignExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 31*  \n  :param n: com.github.javaparser.ast.comments.BlockComment\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 32*  \n  :param n: com.github.javaparser.ast.stmt.BlockStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 33*  \n  :param n: com.github.javaparser.ast.stmt.BreakStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 34*  \n  :param n: com.github.javaparser.ast.stmt.CatchClause\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 35*  \n  :param n: com.github.javaparser.ast.body.ClassOrInterfaceDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 36*  \n  :param n: com.github.javaparser.ast.CompilationUnit\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 37*  \n  :param n: com.github.javaparser.ast.body.ConstructorDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 38*  \n  :param n: com.github.javaparser.ast.stmt.ContinueStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 39*  \n  :param n: com.github.javaparser.ast.stmt.DoStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 40*  \n  :param n: com.github.javaparser.ast.stmt.EmptyStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 41*  \n  :param n: com.github.javaparser.ast.body.EnumConstantDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 42*  \n  :param n: com.github.javaparser.ast.body.EnumDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 43*  \n  :param n: com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 44*  \n  :param n: com.github.javaparser.ast.body.FieldDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 45*  \n  :param n: com.github.javaparser.ast.stmt.ForStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 46*  \n  :param n: com.github.javaparser.ast.stmt.IfStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 47*  \n  :param n: com.github.javaparser.ast.ImportDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 48*  \n  :param n: com.github.javaparser.ast.body.InitializerDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 49*  \n  :param n: com.github.javaparser.ast.expr.InstanceOfExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 50*  \n  :param n: com.github.javaparser.ast.comments.JavadocComment\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 51*  \n  :param n: com.github.javaparser.ast.stmt.LabeledStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 52*  \n  :param n: com.github.javaparser.ast.expr.LambdaExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 53*  \n  :param n: com.github.javaparser.ast.comments.LineComment\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 54*  \n  :param n: com.github.javaparser.ast.expr.MarkerAnnotationExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 55*  \n  :param n: com.github.javaparser.ast.expr.MemberValuePair\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 56*  \n  :param n: com.github.javaparser.ast.body.MethodDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 57*  \n  :param n: com.github.javaparser.ast.expr.NormalAnnotationExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 58*  \n  :param n: com.github.javaparser.ast.PackageDeclaration\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 59*  \n  :param n: com.github.javaparser.ast.body.Parameter\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 60*  \n  :param n: com.github.javaparser.ast.stmt.ReturnStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 61*  \n  :param n: com.github.javaparser.ast.expr.SingleMemberAnnotationExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 62*  \n  :param n: com.github.javaparser.ast.expr.SuperExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 63*  \n  :param n: com.github.javaparser.ast.stmt.SwitchStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 64*  \n  :param n: com.github.javaparser.ast.stmt.SynchronizedStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 65*  \n  :param n: com.github.javaparser.ast.expr.ThisExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 66*  \n  :param n: com.github.javaparser.ast.stmt.ThrowStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 67*  \n  :param n: com.github.javaparser.ast.stmt.TryStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 68*  \n  :param n: com.github.javaparser.ast.type.TypeParameter\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 69*  \n  :param n: com.github.javaparser.ast.expr.VariableDeclarationExpr\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 70*  \n  :param n: com.github.javaparser.ast.body.VariableDeclarator\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 71*  \n  :param n: com.github.javaparser.ast.type.VoidType\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 72*  \n  :param n: com.github.javaparser.ast.stmt.WhileStmt\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>\n  \n*Overload 73*  \n  :param n: com.github.javaparser.ast.type.WildcardType\n  :param printer: io.deephaven.db.tables.lang.DBLanguageParser.VisitArgs\n  :return: java.lang.Class<?>"
 },
 "path": "io.deephaven.db.tables.lang.DBLanguageParser",
 "typeName": "class"
}