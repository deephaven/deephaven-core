{
 "className": "io.deephaven.db.util.string.StringUtils",
 "methods": {
  "charSequenceKey": "Generic accessor for the singleton CharSequenceKey instance.\n\nNote: Java generics information - <VALUE_TYPE extends io.deephaven.db.util.string.StringUtils.StringKeyedObject>\n\n:return: (io.deephaven.hash.KeyedObjectKey<java.lang.CharSequence,VALUE_TYPE>) A CharSequence->StringKeyedObject key representation instance.",
  "extractMessage": "Extracts a message from a throwable.  If the message is null or empty, returns toString instead.\n\n:param t: (java.lang.Throwable) - the throwable\n:return: (java.lang.String) the message or the string",
  "getStringCache": "Note: Java generics information - <STRING_LIKE_TYPE extends java.lang.CharSequence>\n\n:param dataType: java.lang.Class<STRING_LIKE_TYPE>\n:return: io.deephaven.base.string.cache.StringCache<STRING_LIKE_TYPE>",
  "isNullOrEmpty": "Convenience method to combine null and isEmpty checks on a String.\n\n:param s: (java.lang.String) - a String, possibly null\n:return: (boolean) true if the string is null or is empty",
  "nullSafeCharSequenceKey": "Generic accessor for the singleton CharSequenceKey instance, with support for null keys.\n\nNote: Java generics information - <VALUE_TYPE extends io.deephaven.db.util.string.StringUtils.StringKeyedObject>\n\n:return: (io.deephaven.hash.KeyedObjectKey<java.lang.CharSequence,VALUE_TYPE>) A CharSequence->StringKeyedObject key representation instance.",
  "nullSafeStringKey": "Generic accessor for the singleton NullSafeStringKey instance.\n\nNote: Java generics information - <VALUE_TYPE>\n\n:return: (io.deephaven.hash.KeyedObjectKey.NullSafeBasic<java.lang.String,VALUE_TYPE>) A String->StringKeyedObject key representation instance that supports null keys.",
  "nullSafeStringKeyedObjectKey": "Generic accessor for the singleton NullSafeStringKeyedObjectKey instance.\n\nNote: Java generics information - <VALUE_TYPE extends io.deephaven.db.util.string.StringUtils.StringKeyedObject>\n\n:return: (io.deephaven.hash.KeyedObjectKey.NullSafeBasic<java.lang.String,VALUE_TYPE>) A String->StringKeyedObject key representation instance that supports null keys.",
  "replaceArrayValue": "Possibly replace an array element in one array with an array element in another array. The master strings are searched\n to see if they contain an element that starts with the startsWithValue. If so, and the strings to be replaced also\n contain an element which starts with startsWithValue, then that value is replaced with the master string array's\n value. If multiple values match, only the first value for each array is processed.\n\n:param masterStrings: (java.lang.String[]) - the string array containing the values to use\n:param toReplaceStrings: (java.lang.String[]) - the string array in which to perform the substitution\n:param startsWithValue: (java.lang.String) - the starts-with value to search for",
  "rewriteStringColumnTypes": ":param tableDefinition: io.deephaven.db.tables.TableDefinition\n:return: io.deephaven.db.tables.TableDefinition",
  "splitToCollection": ":param string: java.lang.String\n:return: java.util.Collection<java.lang.String>",
  "stringKey": "Generic accessor for the singleton StringKey instance.\n\nNote: Java generics information - <VALUE_TYPE>\n\n:return: (io.deephaven.hash.KeyedObjectKey.Basic<java.lang.String,VALUE_TYPE>) A String->StringKeyedObject key representation instance.",
  "stringKeyedObjectKey": "Generic accessor for the singleton StringKeyedObjectKey instance.\n\nNote: Java generics information - <VALUE_TYPE extends io.deephaven.db.util.string.StringUtils.StringKeyedObject>\n\n:return: (io.deephaven.hash.KeyedObjectKey.Basic<java.lang.String,VALUE_TYPE>) A String->StringKeyedObject key representation instance."
 },
 "path": "io.deephaven.db.util.string.StringUtils",
 "typeName": "class"
}