{
 "className": "io.deephaven.db.util.AbstractScriptSession",
 "methods": {
  "dropReference": "Drop a previously-retained reference to this referent.",
  "evaluateScript": "Evaluates the script and manages liveness of objects that are exported to the user. This method should be called\n from the serial executor as it manipulates static state.\n\n:param script: (java.lang.String) - the code to execute\n:param scriptName: (java.lang.String) - an optional script name, which may be ignored by the implementation, or used improve error\n        messages or for other internal purposes\n:return: (io.deephaven.db.util.ScriptSession.Changes) the changes made to the exportable objects",
  "getTableDefinition": ":param var: java.lang.String\n:return: io.deephaven.db.tables.TableDefinition",
  "getVariableProvider": "A VariableProvider instance, for services like autocomplete which may want a limited \"just the variables\"\n view of our session state.\n\n:return: (io.deephaven.db.util.VariableProvider) a VariableProvider instance backed by the global/binding context of this script session.",
  "getVariableType": ":param var: java.lang.String\n:return: java.lang.Class",
  "getWeakReference": "Get a WeakReference to this referent. This may be cached, or newly created.\n\n:return: (java.lang.ref.WeakReference<? extends io.deephaven.db.util.liveness.LivenessReferent>) A new or cached reference to this referent",
  "initializeTransientFieldsForLiveness": "Package-private for Serializable sub-classes to use in readObject only.\n Public to allow unit tests in another package to work around mock issues where the constructor is never invoked.",
  "tryManage": "Attempt to add the specified referent to this manager.\n\n:param referent: (io.deephaven.db.util.liveness.LivenessReferent) - The referent to add\n:return: (boolean) Whether the referent was in fact added",
  "tryRetainReference": "If this referent is \"live\", behave as LivenessReferent.retainReference() and return true. Otherwise, returns false rather\n than throwing an exception.\n\n:return: (boolean) True if this referent was retained, false otherwise"
 },
 "path": "io.deephaven.db.util.AbstractScriptSession",
 "text": "This class exists to make all script sessions to be liveness artifacts, and provide a default implementation for\n evaluateScript which handles liveness and diffs in a consistent way.",
 "typeName": "class"
}