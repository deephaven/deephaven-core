{
 "className": "io.deephaven.db.util.WorkerPythonEnvironment",
 "methods": {
  "eval": "Evaluates the given string as a statement.\n\n:param evalString: (java.lang.String) - the statement to evaluate",
  "fetch": "Retrieves a value from our Python holder's globals.\n\n When the object is a convertible PyObject; we return the PyObject.  Otherwise, we'll return a\n PythonRemoteQuery.PickledResult, which is suitable for unpickling by the remote side.\n\n The caller should never serialize an unconverted PyObject; it contains a raw pointer and will result in a Hotspot\n or memory corruption on the remote side.\n\n:param name: (java.lang.String) - the variable to retrieve\n:return: (java.lang.Object) the variable as a Java object; or pickled",
  "valueOf": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)\n\n:param name: (java.lang.String) - the name of the enum constant to be returned.\n:return: (io.deephaven.db.util.WorkerPythonEnvironment) the enum constant with the specified name",
  "values": "Returns an array containing the constants of this enum type, in\nthe order they are declared.\n\n:return: (io.deephaven.db.util.WorkerPythonEnvironment[]) an array containing the constants of this enum type, in the order they are declared"
 },
 "path": "io.deephaven.db.util.WorkerPythonEnvironment",
 "text": "This class is the support infrastructure for running Python remote queries.\n\n It is a singleton that contains an instance of a PythonHolder.  All of the specially handled db operations from a\n remote Python session should execute queries which interact wtih this class.  The script sessions that run for\n PersistentQueries or consoles are handled separately by the PythonDeephavenSession.",
 "typeName": "enum"
}