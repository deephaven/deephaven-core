{
 "className": "io.deephaven.db.util.serialization.StreamingExternalizable",
 "methods": {
  "initializeExternalStreaming": "Convenience method to allow chaining of construction and calls to readExternalStreaming(ObjectInput, TIntObjectMap).\n\nNote: Java generics information - <TYPE extends io.deephaven.db.util.serialization.StreamingExternalizable>\n\n:param in: (java.io.ObjectInput) - The input\n:param cachedReaders: (gnu.trove.map.TIntObjectMap<io.deephaven.db.util.serialization.SerializationUtils.Reader>) - The cached readers\n:return: (TYPE) this",
  "readExternalStreaming": "Alternative to Externalizable.readExternal(ObjectInput) for use when a series of tuples of\n the same type with the same element types are being read in iterative fashion.\n Primitive elements should be read with their primitive read methods (e.g. DataInput.readInt()).\n Object elements are preceded by a boolean, true if null, false otherwise. The first non-null value for a given\n Object element is then preceded by the name of the class. All non-null values are then read with a reader\n method from SerializationUtils.getReader(Class, ObjectInput), cached in cachedReaders.\n\n:param in: (java.io.ObjectInput) - The input\n:param cachedReaders: (gnu.trove.map.TIntObjectMap<io.deephaven.db.util.serialization.SerializationUtils.Reader>) - The cached readers",
  "readObjectElement": "Implement the Object element reading protocol described in readExternalStreaming(ObjectInput, TIntObjectMap).\n\nNote: Java generics information - <ITEM_TYPE>\n\n:param in: (java.io.ObjectInput) - The input\n:param cachedReaders: (gnu.trove.map.TIntObjectMap<io.deephaven.db.util.serialization.SerializationUtils.Reader>) - The cached readers\n:param itemIndex: (int) - The index into the cached readers for this item\n:return: ITEM_TYPE",
  "writeExternalStreaming": "Alternative to Externalizable.writeExternal(ObjectOutput) for use when a series of tuples of\n the same type with the same element types are being written in iterative fashion.\n Primitive elements should be written with their primitive write methods\n (e.g. DataOutput.writeInt(int)).\n Object elements are preceded by a boolean, true if null, false otherwise. The first non-null value for a given\n Object element is then preceded by the name of the class. All non-null values are then written with a writer\n method from SerializationUtils.getWriter(Class, ObjectOutput), cached in cachedWriters.\n\n:param out: (java.io.ObjectOutput) - The output\n:param cachedWriters: (gnu.trove.map.TIntObjectMap<io.deephaven.db.util.serialization.SerializationUtils.Writer>) - The cached writers",
  "writeObjectElement": "Implement the Object element writing protocol described in writeExternalStreaming(ObjectOutput, TIntObjectMap).\n\nNote: Java generics information - <ITEM_TYPE>\n\n:param out: (java.io.ObjectOutput) - The output\n:param cachedWriters: (gnu.trove.map.TIntObjectMap<io.deephaven.db.util.serialization.SerializationUtils.Writer>) - The cached writers\n:param itemIndex: (int) - The index into the cached writers for this item\n:param item: (ITEM_TYPE) - The item to write"
 },
 "path": "io.deephaven.db.util.serialization.StreamingExternalizable",
 "text": "Interface for \"tuple\" classes of variably-typed elements that support an alternative to\n Externalizable for writing in streaming fashion.",
 "typeName": "interface"
}