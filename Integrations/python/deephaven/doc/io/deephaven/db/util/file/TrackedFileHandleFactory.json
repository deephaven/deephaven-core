{
 "className": "io.deephaven.db.util.file.TrackedFileHandleFactory",
 "methods": {
  "getCapacity": ":return: int",
  "getInstance": ":return: io.deephaven.db.util.file.TrackedFileHandleFactory",
  "getScheduler": ":return: io.deephaven.io.sched.Scheduler",
  "getSize": ":return: int",
  "getTargetUsageRatio": ":return: double",
  "getTargetUsageThreshold": ":return: int",
  "makeHandle": "Create a new FileHandle with the specified set of OpenOptions.\n\n:param file: java.io.File\n:param openOptions: java.nio.file.OpenOption[]\n:return: (io.deephaven.db.util.file.FileHandle) The new file handle"
 },
 "path": "io.deephaven.db.util.file.TrackedFileHandleFactory",
 "text": "Simple least-recently-opened \"cache\" for FileHandles, to avoid running up against ulimits.\n Will probably not achieve satisfactory results if the number of file handles concurrently in active use\n exceeds capacity.\n Note that returned FileHandles may be closed asynchronously by the factory.\n\n TODO: Consider adding a lookup to enable handle sharing.  Not necessary for current usage.",
 "typeName": "class"
}