{
 "className": "io.deephaven.db.util.config.MutableInputTable",
 "methods": {
  "add": "Write newData to this table.\n\n:param newData: (io.deephaven.db.tables.Table) - the data to write to this table",
  "canEdit": "Queries whether this MutableInputTable is editable in the current context.\n\n:return: (boolean) true if this MutableInputTable may be edited, false otherwise\n TODO (deephaven/deephaven-core/issues/255): Add AuthContext and whatever else is appropriate",
  "delete": "Delete the keys contained in the parameter table from this input table. This method will block until\n rows are deleted.\n\n*Overload 1*  \n  :param table: (io.deephaven.db.tables.Table) - The rows to delete.\n  \n*Overload 2*  \n  :param table: (io.deephaven.db.tables.Table) - The rows to delete.\n  :param index: io.deephaven.db.v2.utils.Index",
  "getDefinition": "Get the key and value columns names for this table.\n\n:return: (io.deephaven.web.shared.data.InputTableDefinition) the InputTableDefinition.",
  "getDescription": "Return a user-readable description of this MutableInputTable.\n\n:return: (java.lang.String) a description of this input table",
  "getKeyNames": "Get the names of the key columns\n\n:return: (java.lang.String[]) an array with the names of our key columns",
  "getTable": "Returns a Deephaven table that contains the current data for this MutableInputTable.\n\n:return: (io.deephaven.db.tables.Table) the current data in this MutableInputTable.",
  "getTableDefinition": "Get the underlying Table definition (which includes the names and types of all of the columns).\n\n:return: (io.deephaven.db.tables.TableDefinition) the TableDefinition for our user-visible table",
  "hasColumn": "Returns true if the specified column exists in this MutableInputTable.\n\n:param columnName: (java.lang.String) - the column to interrogate\n:return: (boolean) true if columnName exists in this MutableInputTable",
  "isKey": "Returns true if the specified column is a key.\n\n:param columnName: (java.lang.String) - the column to interrogate\n:return: (boolean) true if columnName is a key column, false otherwise"
 },
 "path": "io.deephaven.db.util.config.MutableInputTable",
 "text": "A minimal interface for mutable tables that can be changed over the OpenAPI.",
 "typeName": "interface"
}