{
 "className": "io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder",
 "methods": {
  "build": ":return: io.grpc.ServerServiceDefinition",
  "newBuilder": ":param baseDefinition: io.grpc.ServerServiceDefinition\n:return: io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder",
  "override": "*Overload 1*  \n  Note: Java generics information - <ReqT,RespT>\n  \n  :param method: io.grpc.MethodDescriptor<ReqT,RespT>\n  :param handler: io.grpc.stub.ServerCalls.BidiStreamingMethod<ReqT,RespT>\n  :return: io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder\n  \n*Overload 2*  \n  Note: Java generics information - <ReqT,RespT>\n  \n  :param method: io.grpc.MethodDescriptor<ReqT,RespT>\n  :param handler: io.grpc.stub.ServerCalls.ServerStreamingMethod<ReqT,RespT>\n  :return: io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder\n  \n*Overload 3*  \n  Note: Java generics information - <ReqT,RespT>\n  \n  :param method: io.grpc.MethodDescriptor<ReqT,RespT>\n  :param handler: io.grpc.stub.ServerCalls.ClientStreamingMethod<ReqT,RespT>\n  :return: io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder\n  \n*Overload 4*  \n  Note: Java generics information - <ReqT,RespT>\n  \n  :param method: io.grpc.MethodDescriptor<ReqT,RespT>\n  :param handler: io.grpc.stub.ServerCalls.UnaryMethod<ReqT,RespT>\n  :return: io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder"
 },
 "path": "io.deephaven.db.backplane.util.GrpcServiceOverrideBuilder",
 "typeName": "class"
}