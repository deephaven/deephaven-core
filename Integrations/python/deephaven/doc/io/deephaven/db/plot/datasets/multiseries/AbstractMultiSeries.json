{
 "className": "io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries",
 "methods": {
  "addSeries": "Add the given series to this MultiSeries\n\n:param series: (AbstractMultiSeries.SERIES) - series\n:param key: (java.lang.Object) - key used to determine the name of the series",
  "chart": "Gets the chart on which this data will be plotted.\n\n:return: (io.deephaven.db.plot.ChartImpl) chart on which this data will be plotted",
  "createSeries": "Creates a new series for this multi-series.\n\n:param seriesName: (java.lang.String) - name for the series\n:param t: (io.deephaven.db.v2.BaseTable) - client side source table\n:return: (AbstractMultiSeries.SERIES) new series for this multi-series",
  "errorBarColor": "*Overload 1*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "get": "Gets the specified series from this multi-series.\n\n:param series: (int) - series index\n:return: (AbstractMultiSeries.SERIES) specified series",
  "getByColumns": "Gets the by columns for the multi-series.\n\n:return: (java.lang.String[]) by columns for the multi-series.",
  "getDynamicSeriesNamer": "Gets a utility to make certain that all dynamic series have unique names.\n\n:return: (io.deephaven.db.plot.datasets.DynamicSeriesNamer) utility to make certain that all dynamic series have unique names.",
  "getSeriesCount": "Gets the number of series in this multi-series.\n\n:return: (int) number of series in this multi-series",
  "gradientVisible": ":param visible: boolean\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "group": ":param group: int\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "initializeSeries": "Assigns series modifiers, e.g. point color, to the given series\n\n:param series: (AbstractMultiSeries.SERIES) - series to initialize",
  "lineColor": "*Overload 1*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "lineStyle": ":param style: io.deephaven.db.plot.LineStyle\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "linesVisible": ":param visible: java.lang.Boolean\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "piePercentLabelFormat": ":param format: java.lang.String\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointColor": "*Overload 1*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 4*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 5*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 6*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,\n  COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 7*  \n  :param category: java.lang.Comparable\n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 8*  \n  :param category: java.lang.Comparable\n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 9*  \n  :param category: java.lang.Comparable\n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 10*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 11*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 12*  \n  :param colors: int[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 13*  \n  :param colors: io.deephaven.gui.color.Paint[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 14*  \n  :param colors: java.lang.Integer[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 15*  \n  :param colors: java.lang.String[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 16*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: io.deephaven.db.plot.datasets.data.IndexableData<T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 17*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 18*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointColorByY": "*Overload 1*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: groovy.lang.Closure<T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.function.Function<java.lang.Double,T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.Map<java.lang.Double,T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointColorInteger": "*Overload 1*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 4*  \n  :param colors: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Integer>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointLabel": "*Overload 1*  \n  Note: Java generics information - <LABEL>\n  \n  :param labels: groovy.lang.Closure<LABEL>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  Note: Java generics information - <LABEL>\n  \n  :param labels: java.util.function.Function<java.lang.Comparable,LABEL>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param label: java.lang.Object\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 4*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,\n  LABEL>\n  \n  :param labels: java.util.Map<CATEGORY,LABEL>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 5*  \n  :param category: java.lang.Comparable\n  :param label: java.lang.Object\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 6*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 7*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 8*  \n  :param labels: java.lang.Object[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 9*  \n  :param labels: io.deephaven.db.plot.datasets.data.IndexableData<?>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 10*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 11*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointLabelFormat": ":param format: java.lang.String\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointShape": "*Overload 1*  \n  :param shapes: groovy.lang.Closure<java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  :param shapes: java.util.function.Function<java.lang.Comparable,java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param shape: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 4*  \n  :param shape: io.deephaven.gui.shape.Shape\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 5*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param shapes: java.util.Map<CATEGORY,java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 6*  \n  :param category: java.lang.Comparable\n  :param shape: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 7*  \n  :param category: java.lang.Comparable\n  :param shape: io.deephaven.gui.shape.Shape\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 8*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 9*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 10*  \n  :param shapes: io.deephaven.gui.shape.Shape[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 11*  \n  :param shapes: java.lang.String[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 12*  \n  :param shapes: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 13*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 14*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointSize": "*Overload 1*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param factors: groovy.lang.Closure<NUMBER>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param factors: java.util.function.Function<java.lang.Comparable,NUMBER>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param factor: java.lang.Number\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 4*  \n  :param factors: java.util.Map<CATEGORY,NUMBER>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 5*  \n  :param categories: CATEGORY[]\n  :param factors: NUMBER[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 6*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: double[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 7*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: int[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 8*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: long[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 9*  \n  :param category: java.lang.Comparable\n  :param factor: java.lang.Number\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 10*  \n  :param category: java.lang.Comparable\n  :param factor: double\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 11*  \n  :param category: java.lang.Comparable\n  :param factor: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 12*  \n  :param category: java.lang.Comparable\n  :param factor: long\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 13*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 14*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 15*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param factors: T[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 16*  \n  :param factors: double[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 17*  \n  :param factors: int[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 18*  \n  :param factors: long[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 19*  \n  :param factors: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Double>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 20*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 21*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "pointsVisible": ":param visible: java.lang.Boolean\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "seriesColor": "*Overload 1*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "seriesNamingFunction": "Defines the procedure to name a generated series.\n The input of the naming function is the table map key corresponding\n to the new series.\n\n*Overload 1*  \n  :param namingFunction: (java.util.function.Function<java.lang.Object,java.lang.String>) - series naming function\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>\n  \n*Overload 2*  \n  :param namingFunction: (groovy.lang.Closure<java.lang.String>) - series naming closure\n  :return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "setDynamicSeriesNamer": ":param seriesNamer: io.deephaven.db.plot.datasets.DynamicSeriesNamer",
  "toolTipPattern": ":param format: java.lang.String\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "xToolTipPattern": ":param format: java.lang.String\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>",
  "yToolTipPattern": ":param format: java.lang.String\n:param keys: java.lang.Object...\n:return: io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries<AbstractMultiSeries.SERIES>"
 },
 "path": "io.deephaven.db.plot.datasets.multiseries.AbstractMultiSeries",
 "text": "Creates and holds a DataSeriesInternal for every key in a TableMap.",
 "typeName": "class"
}