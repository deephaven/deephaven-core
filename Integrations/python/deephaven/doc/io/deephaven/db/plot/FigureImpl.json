{
 "className": "io.deephaven.db.plot.FigureImpl",
 "methods": {
  "axes": "Gets an axes.\n\n*Overload 1*  \n  :param name: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) selected axes.\n  \n*Overload 2*  \n  :param id: int\n  :return: (io.deephaven.db.plot.FigureImpl) selected axes.",
  "axesRemoveSeries": "Removes the series with the specified names from this Axes.\n\n:param names: java.lang.String...\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "axis": "Gets the Axis at dimension dim.\n The x-axis is dimension 0, y-axis dimension 1.\n\n:param dim: int\n:return: (io.deephaven.db.plot.FigureImpl) Axis at dimension dim",
  "axisColor": "Sets the color for this Axis line and tick marks.\n\n*Overload 1*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "axisFormat": "Sets the AxisFormat for this Axis.\n\n:param format: io.deephaven.db.plot.axisformatters.AxisFormat\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "axisFormatPattern": "Sets the format pattern for this Axis's labels.\n\n:param pattern: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "axisLabel": "Sets the label for this Axis.\n\n:param label: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "axisLabelFont": "Sets the font for this Axis's label.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "businessTime": "Sets this Axis's AxisTransform as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) this Axis using the default business calendar.\n  \n*Overload 2*  \n  :param calendar: io.deephaven.util.calendar.BusinessCalendar\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis using the specified business calendar.\n  \n*Overload 3*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis using the business calendar from row 0 of the filtered sds for the business calendar.  If no value is found, no transform will be applied.",
  "catErrorBar": "Creates a category error bar plot with whiskers in the y direction.\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 16*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "catErrorBarBy": "Creates a catErrorBar plot for each distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "catHistPlot": "Creates a histogram with discrete axis.  Charts the frequency of each unique element in the input data.\n\n*Overload 1*  \n  Note: Java generics information - <T extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 6*  \n  Note: Java generics information - <T extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "catPlot": "Creates a plot with discrete axis.\n Discrete data must not have duplicates.\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 10*  \n  Note: Java generics information - <T1 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: io.deephaven.db.plot.datasets.data.IndexableData<T1>\n  :param values: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 16*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 18*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 19*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "catPlotBy": "Creates a category plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "chart": "Returns a chart from this Figure's grid.\n\n*Overload 1*  \n  :param index: int\n  :return: (io.deephaven.db.plot.FigureImpl) selected Chart\n  \n*Overload 2*  \n  :param rowNum: int\n  :param colNum: int\n  :return: (io.deephaven.db.plot.FigureImpl) selected Chart",
  "chartRemoveSeries": "Removes the series with the specified names from this Chart.\n\n:param names: java.lang.String...\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "chartTitle": "Sets the title of this Chart.\n\n*Overload 1*  \n  :param title: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param titleColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart with the title set to display comma-separated values from the table\n  \n*Overload 3*  \n  :param t: io.deephaven.db.tables.Table\n  :param titleColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart with the title set to display comma-separated values from the table\n  \n*Overload 4*  \n  :param showColumnNamesInTitle: boolean\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param titleColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart with the title set to display comma-separated values from the table\n  \n*Overload 5*  \n  :param showColumnNamesInTitle: boolean\n  :param t: io.deephaven.db.tables.Table\n  :param titleColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart with the title set to display comma-separated values from the table\n  \n*Overload 6*  \n  :param titleFormat: java.lang.String\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param titleColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart with the title set to display values from the table\n  \n*Overload 7*  \n  :param titleFormat: java.lang.String\n  :param t: io.deephaven.db.tables.Table\n  :param titleColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart with the title set to display values from the table",
  "chartTitleColor": "Sets the color of this Chart's title.\n\n*Overload 1*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart\n  \n*Overload 2*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "chartTitleFont": "Sets the font of this Chart's title.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "colSpan": "Sets the size of this Chart within the grid of the figure.\n\n:param n: int\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "errorBarColor": "Sets the error bar Paint for this dataset.\n\n*Overload 1*  \n  :param color: int\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 4*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 6*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "errorBarX": "Creates an XY plot with error bars in the x direction.\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 16*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 23*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 24*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 29*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 30*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 31*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 35*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 36*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 37*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 38*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 39*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "errorBarXBy": "Creates an errorBarX plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "errorBarXY": "Creates an XY plot with error bars in both the x and y directions.\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number,T4 extends java.lang.Number,T5 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: T3[]\n  :param yLow: T4[]\n  :param yHigh: T5[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 16*  \n  Note: Java generics information - <T3 extends java.lang.Number,T4 extends java.lang.Number,T5 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: T3[]\n  :param yLow: T4[]\n  :param yHigh: T5[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 23*  \n  Note: Java generics information - <T3 extends java.lang.Number,T4 extends java.lang.Number,T5 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param xHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: java.util.List<T3>\n  :param yLow: java.util.List<T4>\n  :param yHigh: java.util.List<T5>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 24*  \n  Note: Java generics information - <T3 extends java.lang.Number,T4 extends java.lang.Number,T5 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: T3[]\n  :param yLow: T4[]\n  :param yHigh: T5[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 29*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 30*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 31*  \n  Note: Java generics information - <T3 extends java.lang.Number,T4 extends java.lang.Number,T5 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.List<T3>\n  :param yLow: java.util.List<T4>\n  :param yHigh: java.util.List<T5>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 35*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 36*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 37*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number,T4 extends java.lang.Number,T5 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.List<T3>\n  :param yLow: java.util.List<T4>\n  :param yHigh: java.util.List<T5>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 38*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 39*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "errorBarXYBy": "Creates an errorBar plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "errorBarY": "Creates an XY plot with error bars in the y direction.\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 16*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 23*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 24*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 29*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 30*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 31*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 35*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yLow: io.deephaven.db.tables.utils.DBDateTime[]\n  :param yHigh: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 36*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 37*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 38*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 39*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "errorBarYBy": "Creates a errorBarY plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "figureRemoveSeries": "Removes all series with names from this Figure.\n\n:param names: java.lang.String...\n:return: (io.deephaven.db.plot.FigureImpl) this Figure",
  "figureTitle": "Sets the title of this Figure\n\n:param title: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Figure",
  "figureTitleColor": "Sets the color of this Figure's title\n\n*Overload 1*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure\n  \n*Overload 2*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure",
  "figureTitleFont": "Sets the font of this Figure's title\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure",
  "funcNPoints": "Sets the number of data points in this dataset.\n\n:param npoints: int\n:return: (io.deephaven.db.plot.FigureImpl) this data series with the specified number of points.",
  "funcRange": "Sets the data range for this series.\n\n*Overload 1*  \n  :param xmin: double\n  :param xmax: double\n  :return: (io.deephaven.db.plot.FigureImpl) this data series with the new range\n  \n*Overload 2*  \n  :param xmin: double\n  :param xmax: double\n  :param npoints: int\n  :return: (io.deephaven.db.plot.FigureImpl) this data series with the new range",
  "getFigure": "Gets the mutable figure backing this immutable figure.\n\n:return: (io.deephaven.db.plot.BaseFigureImpl) mutable figure backing this immutable figure",
  "gradientVisible": "Sets whether bar gradients are visible.\n\n*Overload 1*  \n  :param visible: boolean\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param visible: boolean\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "gridLinesVisible": "Sets whether the Chart has grid lines.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "group": "Sets the group for this dataset.\n\n*Overload 1*  \n  :param group: int\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param group: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "histPlot": "Creates a histogram.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param counts: io.deephaven.db.tables.Table\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param rangeMin: double\n  :param rangeMax: double\n  :param nbins: int\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "invert": "Inverts this Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param invert: boolean\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "legendColor": "Sets the color of the text inside the Chart's legend.\n\n*Overload 1*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart\n  \n*Overload 2*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "legendFont": "Sets the font of this Chart's legend.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "legendVisible": "Sets whether the Chart's legend is shown or hidden.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "lineColor": "Defines the default line color.\n\n*Overload 1*  \n  :param color: int\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 4*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 6*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "lineStyle": "Sets the line style.\n\n*Overload 1*  \n  :param style: io.deephaven.db.plot.LineStyle\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param style: io.deephaven.db.plot.LineStyle\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "linesVisible": "Sets whether lines are visible.\n\n*Overload 1*  \n  :param visible: java.lang.Boolean\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param visible: java.lang.Boolean\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "log": "Sets the AxisTransform as log base 10.\n\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "makeDescriptor": ":return: io.deephaven.db.plot.DisplayableFigureDescriptor",
  "max": "Sets the maximum range of this Axis.\n\n*Overload 1*  \n  :param max: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "maxRowsInTitle": "Sets the maximum row values that will be shown in title.\n \n If total rows < maxRowsCount, then all the values will be shown separated by comma,\n otherwise just maxRowsCount values will be shown along with ellipsis.\n \n if maxRowsCount is < 0, all values will be shown.\n \n if maxRowsCount is 0, then just first value will be shown without ellipsis.\n \n The default is 0.\n\n:param maxRowsCount: int\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "min": "Sets the minimum range of this Axis.\n\n*Overload 1*  \n  :param min: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "minorTicks": "Sets the number of minor ticks between consecutive major ticks.\n These minor ticks are equally spaced.\n\n:param count: int\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "minorTicksVisible": "Sets whether minor ticks are drawn on this Axis.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "newAxes": "Creates new Axes on this Chart.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) newly created Axes with dimension 2 on this Chart\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) newly created Axes with dimension 2 on this Chart\n  \n*Overload 3*  \n  :param dim: int\n  :return: (io.deephaven.db.plot.FigureImpl) newly created Axes with dimension dim on this Chart\n  \n*Overload 4*  \n  :param name: java.lang.String\n  :param dim: int\n  :return: (io.deephaven.db.plot.FigureImpl) newly created Axes with dimension dim on this Chart",
  "newChart": "Adds a new Chart to this figure.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) the new Chart.  The Chart is placed in the next available grid space, starting at the upper left hand corner of the grid,\n           going left to right, top to bottom.  If no available space is found in the grid:\n          \n  * if this Figure was created with no specified grid size, then the Figure will resize itself to add the new Chart;\n  * if not, a RuntimeException will be thrown.\n  \n*Overload 2*  \n  :param index: int\n  :return: (io.deephaven.db.plot.FigureImpl) the new Chart.  The Chart is placed at the grid space indicated by the index.\n  \n*Overload 3*  \n  :param rowNum: int\n  :param colNum: int\n  :return: (io.deephaven.db.plot.FigureImpl) the new Chart.  The Chart is placed at the grid space [rowNum, colNum.",
  "ohlcPlot": "Creates an open-high-low-close plot.\n\n*Overload 1*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number,T4 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: T1[]\n  :param high: T2[]\n  :param low: T3[]\n  :param close: T4[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: double[]\n  :param high: double[]\n  :param low: double[]\n  :param close: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: float[]\n  :param high: float[]\n  :param low: float[]\n  :param close: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: int[]\n  :param high: int[]\n  :param low: int[]\n  :param close: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: long[]\n  :param high: long[]\n  :param low: long[]\n  :param close: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: short[]\n  :param high: short[]\n  :param low: short[]\n  :param close: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 7*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number,T4 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.tables.utils.DBDateTime[]\n  :param open: java.util.List<T1>\n  :param high: java.util.List<T2>\n  :param low: java.util.List<T3>\n  :param close: java.util.List<T4>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 8*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number,T4 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: T1[]\n  :param high: T2[]\n  :param low: T3[]\n  :param close: T4[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: double[]\n  :param high: double[]\n  :param low: double[]\n  :param close: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: float[]\n  :param high: float[]\n  :param low: float[]\n  :param close: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: int[]\n  :param high: int[]\n  :param low: int[]\n  :param close: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: long[]\n  :param high: long[]\n  :param low: long[]\n  :param close: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: short[]\n  :param high: short[]\n  :param low: short[]\n  :param close: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 14*  \n  Note: Java generics information - <T1 extends java.lang.Number,T2 extends java.lang.Number,T3 extends java.lang.Number,T4 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: java.util.List<T1>\n  :param high: java.util.List<T2>\n  :param low: java.util.List<T3>\n  :param close: java.util.List<T4>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :param open: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :param high: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :param low: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :param close: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param timeCol: java.lang.String\n  :param openCol: java.lang.String\n  :param highCol: java.lang.String\n  :param lowCol: java.lang.String\n  :param closeCol: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param timeCol: java.lang.String\n  :param openCol: java.lang.String\n  :param highCol: java.lang.String\n  :param lowCol: java.lang.String\n  :param closeCol: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "ohlcPlotBy": "Creates an open-high-low-close plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param timeCol: java.lang.String\n  :param openCol: java.lang.String\n  :param highCol: java.lang.String\n  :param lowCol: java.lang.String\n  :param closeCol: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param timeCol: java.lang.String\n  :param openCol: java.lang.String\n  :param highCol: java.lang.String\n  :param lowCol: java.lang.String\n  :param closeCol: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "piePercentLabelFormat": "Sets the format of the percentage point label format\n in pie plots.\n\n*Overload 1*  \n  :param format: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param format: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "piePlot": "Creates a pie plot.\n Categorical data must not have duplicates.\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param values: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 8*  \n  Note: Java generics information - <T1 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: io.deephaven.db.plot.datasets.data.IndexableData<T1>\n  :param values: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param values: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param categories: java.lang.String\n  :param values: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "plot": "Creates an XY plot.\n\n*Overload 1*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param function: groovy.lang.Closure<T>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param function: java.util.function.DoubleUnaryOperator\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 12*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 20*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 21*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 23*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 24*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 29*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 30*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 31*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 35*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 36*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 37*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 38*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 39*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 40*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 41*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 42*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 43*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 44*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 45*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 46*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 47*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 48*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 49*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 50*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 51*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 52*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 53*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 54*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 55*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 56*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.tables.utils.DBDateTime[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 57*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 58*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 59*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 60*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 61*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 62*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 63*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 64*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 65*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 66*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 67*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 68*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 69*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 70*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 71*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 72*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 73*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 74*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 75*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: T1[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 76*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 77*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: float[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 78*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 79*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 80*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: io.deephaven.db.tables.utils.DBDateTime[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 81*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.Date[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 82*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: short[]\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 83*  \n  Note: Java generics information - <T0 extends java.lang.Number,T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 84*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 85*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 86*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :param y: io.deephaven.db.plot.datasets.data.IndexableNumericData\n  :param hasXTimeAxis: boolean\n  :param hasYTimeAxis: boolean\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "plotBy": "Creates an XY plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.db.tables.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) dataset created for plot",
  "plotOrientation": "Sets the orientation of plots in this Chart.\n\n:param orientation: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "plotStyle": "Sets the PlotStyle of this Axes.\n\n*Overload 1*  \n  :param style: io.deephaven.db.plot.PlotStyle\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param style: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "pointColor": "Sets the point color.  Unspecified points use the default color.\n\n*Overload 1*  \n  :param color: int\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  :param colors: int...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 4*  \n  :param colors: int[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 6*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 7*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 8*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 9*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 10*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 11*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 12*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 13*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 14*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 15*  \n  :param colors: io.deephaven.gui.color.Paint...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 16*  \n  :param colors: io.deephaven.gui.color.Paint[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 17*  \n  :param category: java.lang.Comparable\n  :param color: int\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 18*  \n  :param category: java.lang.Comparable\n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 19*  \n  :param category: java.lang.Comparable\n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 20*  \n  :param category: java.lang.Comparable\n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 21*  \n  :param category: java.lang.Comparable\n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 22*  \n  :param category: java.lang.Comparable\n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 23*  \n  :param colors: java.lang.Integer...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 24*  \n  :param colors: java.lang.Integer[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 25*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 26*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 27*  \n  :param colors: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 28*  \n  :param colors: java.lang.String[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 29*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 30*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 31*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 32*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 33*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 34*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 35*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: io.deephaven.db.plot.datasets.data.IndexableData<T>\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 36*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: io.deephaven.db.plot.datasets.data.IndexableData<T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointColorByY": "Sets the point color for a data point based upon the y-value.\n\n*Overload 1*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: groovy.lang.Closure<T>\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 2*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: groovy.lang.Closure<T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.Map<java.lang.Double,T>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 4*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.Map<java.lang.Double,T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.function.Function<java.lang.Double,T>\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 6*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: java.util.function.Function<java.lang.Double,T>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointColorInteger": "Sets the point color.  Unspecified points use the default color.\n\n*Overload 1*  \n  :param colors: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Integer>\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 2*  \n  :param colors: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Integer>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,COLOR extends java.lang.Integer>\n  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 4*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,COLOR extends java.lang.Integer>\n  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 6*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 7*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 8*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointLabel": "Sets the point label for data point i from index i of the input labels.\n Points outside of these indices are unlabeled.\n\n*Overload 1*  \n  :param labels: io.deephaven.db.plot.datasets.data.IndexableData<?>\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 2*  \n  :param labels: io.deephaven.db.plot.datasets.data.IndexableData<?>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 4*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 6*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 7*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 8*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 9*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 10*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 11*  \n  :param category: java.lang.Comparable\n  :param label: java.lang.Object\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 12*  \n  :param category: java.lang.Comparable\n  :param label: java.lang.Object\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 13*  \n  :param label: java.lang.Object\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 14*  \n  :param label: java.lang.Object\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 15*  \n  :param labels: java.lang.Object...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 16*  \n  :param labels: java.lang.Object[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 17*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,LABEL>\n  \n  :param labels: java.util.Map<CATEGORY,LABEL>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 18*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,LABEL>\n  \n  :param labels: java.util.Map<CATEGORY,LABEL>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 19*  \n  Note: Java generics information - <LABEL>\n  \n  :param labels: groovy.lang.Closure<LABEL>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 20*  \n  Note: Java generics information - <LABEL>\n  \n  :param labels: groovy.lang.Closure<LABEL>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 21*  \n  Note: Java generics information - <LABEL>\n  \n  :param labels: java.util.function.Function<java.lang.Comparable,LABEL>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 22*  \n  Note: Java generics information - <LABEL>\n  \n  :param labels: java.util.function.Function<java.lang.Comparable,LABEL>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointLabelFormat": "Sets the point label format.\n \n Use {0} where the data series name should be inserted,\n {1} for the x-value and\n {2} y-value\n e.g. \"{0}: ({1}, {2})\" will display as Series1: (2.0, 5.5).\n\n*Overload 1*  \n  :param format: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param format: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointShape": "Sets the point shapes for data point i from index i of the input labels.\n Points outside of these indices use default shapes.\n\n*Overload 1*  \n  :param shapes: groovy.lang.Closure<java.lang.String>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 2*  \n  :param shapes: groovy.lang.Closure<java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  :param shapes: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.String>\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 4*  \n  :param shapes: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 6*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 7*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 8*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 9*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 10*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 11*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 12*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 13*  \n  :param shape: io.deephaven.gui.shape.Shape\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 14*  \n  :param shape: io.deephaven.gui.shape.Shape\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 15*  \n  :param shapes: io.deephaven.gui.shape.Shape...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 16*  \n  :param shapes: io.deephaven.gui.shape.Shape[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 17*  \n  :param category: java.lang.Comparable\n  :param shape: io.deephaven.gui.shape.Shape\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 18*  \n  :param category: java.lang.Comparable\n  :param shape: io.deephaven.gui.shape.Shape\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 19*  \n  :param category: java.lang.Comparable\n  :param shape: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 20*  \n  :param category: java.lang.Comparable\n  :param shape: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 21*  \n  :param shape: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this DataSeries\n  \n*Overload 22*  \n  :param shape: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 23*  \n  :param shapes: java.lang.String...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 24*  \n  :param shapes: java.lang.String[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 25*  \n  :param shapes: java.util.function.Function<java.lang.Comparable,java.lang.String>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 26*  \n  :param shapes: java.util.function.Function<java.lang.Comparable,java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 27*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param shapes: java.util.Map<CATEGORY,java.lang.String>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 28*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param shapes: java.util.Map<CATEGORY,java.lang.String>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointSize": "Sets the point size.  A scale factor of 1 is the default size.  A scale factor of 2 is 2x the\n default size.  Unspecified points use the default size.\n\n*Overload 1*  \n  :param factor: double\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param factors: double...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 3*  \n  :param factors: double[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 4*  \n  :param factor: int\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 5*  \n  :param factors: int...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 6*  \n  :param factors: int[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 7*  \n  :param factors: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Double>\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 8*  \n  :param factors: io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Double>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 9*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 10*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 11*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 12*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 13*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 14*  \n  :param t: io.deephaven.db.tables.Table\n  :param columnName: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 15*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 16*  \n  :param t: io.deephaven.db.tables.Table\n  :param keyColumn: java.lang.String\n  :param valueColumn: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 17*  \n  :param category: java.lang.Comparable\n  :param factor: double\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 18*  \n  :param category: java.lang.Comparable\n  :param factor: double\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 19*  \n  :param category: java.lang.Comparable\n  :param factor: int\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 20*  \n  :param category: java.lang.Comparable\n  :param factor: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 21*  \n  :param category: java.lang.Comparable\n  :param factor: java.lang.Number\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 22*  \n  :param category: java.lang.Comparable\n  :param factor: java.lang.Number\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 23*  \n  :param category: java.lang.Comparable\n  :param factor: long\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 24*  \n  :param category: java.lang.Comparable\n  :param factor: long\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 25*  \n  :param factor: java.lang.Number\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 26*  \n  :param factor: java.lang.Number\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 27*  \n  :param factor: long\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 28*  \n  :param factors: long...\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 29*  \n  :param factors: long[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 30*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,NUMBER extends java.lang.Number>\n  \n  :param categories: CATEGORY[]\n  :param factors: NUMBER[]\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 31*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,NUMBER extends java.lang.Number>\n  \n  :param categories: CATEGORY[]\n  :param factors: NUMBER[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 32*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,NUMBER extends java.lang.Number>\n  \n  :param factors: java.util.Map<CATEGORY,NUMBER>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 33*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,NUMBER extends java.lang.Number>\n  \n  :param factors: java.util.Map<CATEGORY,NUMBER>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 34*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 35*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: double[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 36*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: int[]\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 37*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: int[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 38*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: long[]\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 39*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param factors: long[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 40*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param factors: groovy.lang.Closure<NUMBER>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 41*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param factors: groovy.lang.Closure<NUMBER>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 42*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param factors: java.util.function.Function<java.lang.Comparable,NUMBER>\n  :return: (io.deephaven.db.plot.FigureImpl) this CategoryDataSeries\n  \n*Overload 43*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param factors: java.util.function.Function<java.lang.Comparable,NUMBER>\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 44*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param factors: T[]\n  :return: (io.deephaven.db.plot.FigureImpl) this XYDataSeries\n  \n*Overload 45*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param factors: T[]\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "pointsVisible": "Sets whether points are visible.\n\n*Overload 1*  \n  :param visible: java.lang.Boolean\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param visible: java.lang.Boolean\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "range": "Sets the range of this Axis to [min, max] inclusive.\n\n:param min: double\n:param max: double\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "removeChart": "Removes a chart from the Figure's grid.\n\n*Overload 1*  \n  :param index: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure with the chart removed.\n  \n*Overload 2*  \n  :param rowNum: int\n  :param colNum: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure with the chart removed.",
  "rowSpan": "Sets the size of this Chart within the grid of the figure.\n\n:param n: int\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "save": "Saves the Figure as an image.\n\n*Overload 1*  \n  :param saveLocation: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) figure\n  \n*Overload 2*  \n  :param saveLocation: java.lang.String\n  :param width: int\n  :param height: int\n  :return: (io.deephaven.db.plot.FigureImpl) figure\n  \n*Overload 3*  \n  :param saveLocation: java.lang.String\n  :param wait: boolean\n  :param timeoutSeconds: long\n  :return: (io.deephaven.db.plot.FigureImpl) figure\n  \n*Overload 4*  \n  :param saveLocation: java.lang.String\n  :param width: int\n  :param height: int\n  :param wait: boolean\n  :param timeoutSeconds: long\n  :return: (io.deephaven.db.plot.FigureImpl) figure",
  "series": "Gets a data series.\n\n*Overload 1*  \n  :param id: int\n  :return: (io.deephaven.db.plot.FigureImpl) selected data series.\n  \n*Overload 2*  \n  :param name: java.lang.Comparable\n  :return: (io.deephaven.db.plot.FigureImpl) selected data series.",
  "seriesColor": "Defines the default line and point color.\n\n*Overload 1*  \n  :param color: int\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param color: int\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 4*  \n  :param color: io.deephaven.gui.color.Paint\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 5*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 6*  \n  :param color: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "seriesNamingFunction": "Defines the procedure to name a generated series.\n The input of the naming function is the table map key corresponding\n to the new series.\n\n*Overload 1*  \n  :param namingFunction: groovy.lang.Closure<java.lang.String>\n  :return: io.deephaven.db.plot.FigureImpl\n  \n*Overload 2*  \n  :param namingFunction: java.util.function.Function<java.lang.Object,java.lang.String>\n  :return: io.deephaven.db.plot.FigureImpl",
  "show": "Creates a displayable figure that can be used to construct a DisplayableFigureDescriptor.\n\n:return: (io.deephaven.db.plot.FigureImpl) a displayable version of the figure",
  "span": "Sets the size of this Chart within the grid of the figure.\n\n:param rowSpan: int\n:param colSpan: int\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "theme": "Sets the Theme of this Figure\n\n*Overload 1*  \n  :param theme: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure\n  \n*Overload 2*  \n  :param theme: io.deephaven.db.plot.Theme\n  :return: (io.deephaven.db.plot.FigureImpl) this Figure",
  "tickLabelAngle": "Sets the angle the tick labels of this Axis are drawn at.\n\n:param angle: double\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "ticks": "Sets the tick locations.\n\n*Overload 1*  \n  :param tickLocations: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param gapBetweenTicks: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "ticksFont": "Sets the font for this Axis's ticks.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "ticksVisible": "Sets whether ticks are drawn on this Axis.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "toolTipPattern": "Sets the tooltip format.\n\n*Overload 1*  \n  :param format: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param format: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "transform": "Sets the AxisTransform for this Axis.\n\n:param transform: io.deephaven.db.plot.axistransformations.AxisTransform\n:return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "twin": "Creates a new Axes instance which shares the same Axis\n objects as this Axes.\n The resultant Axes has the same range, ticks, etc. as this Axes\n (as these are fields of the Axis) but may have,\n for example, a different PlotStyle.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance\n  \n*Overload 3*  \n  :param dim: int\n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 4*  \n  :param name: java.lang.String\n  :param dim: int\n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance",
  "twinX": "Creates a new Axes instance which shares the same x-Axis\n as this Axes.\n \n The resultant Axes has the same x-axis range, ticks, etc. as this Axes\n (as these are properties of the Axis)\n but may have, for example, a different PlotStyle.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance",
  "twinY": "Creates a new Axes instance which shares the same y-Axis\n as this Axes.\n \n The resultant Axes has the same y-axis range, ticks, etc. as this Axes\n (as these are properties of the Axis)\n but may have, for example, a different PlotStyle.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) the new Axes instance",
  "updateInterval": "Sets the update interval of this Figure. The plot will be redrawn at this update interval.\n\n:param updateIntervalMillis: long\n:return: (io.deephaven.db.plot.FigureImpl) this Figure",
  "xAxis": "Gets the Axis representing the x-axis\n\n:return: (io.deephaven.db.plot.FigureImpl) x-dimension Axis",
  "xBusinessTime": "Sets the AxisTransform of the x-Axis\n as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) this Axes using the default BusinessCalendar for the x-Axis.\n  \n*Overload 2*  \n  :param calendar: io.deephaven.util.calendar.BusinessCalendar\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes using the calendar for the x-Axis business calendar.\n  \n*Overload 3*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes using the business calendar from row 0 of the filtered sds for the x-Axis business calendar.  If no value is found, no transform will be applied.",
  "xColor": "Sets the color of the x-Axis\n\n*Overload 1*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xFormat": "Sets the AxisFormat of the x-Axis\n\n:param format: io.deephaven.db.plot.axisformatters.AxisFormat\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xFormatPattern": "Sets the format pattern of the x-Axis\n\n:param pattern: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xGridLinesVisible": "Sets whether the Chart has grid lines in the x direction.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "xInvert": "Inverts the x-Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param invert: boolean\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xLabel": "Sets the label of the x-Axis\n\n:param label: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xLabelFont": "Sets the font for the x-Axis label.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "xLog": "Sets the AxisTransform of the x-Axis to log base 10\n\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xMax": "Sets the maximum of the x-Axis.\n\n*Overload 1*  \n  :param max: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xMin": "Sets the minimum of the x-Axis.\n\n*Overload 1*  \n  :param min: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xMinorTicks": "Sets the number of minor ticks between consecutive major ticks\n in the x-Axis.\n These minor ticks are equally spaced.\n\n:param count: int\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xMinorTicksVisible": "Sets whether the x-Axis minor ticks are visible.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xRange": "Sets the range of the x-Axis\n\n:param min: double\n:param max: double\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xTickLabelAngle": "Sets the angle the tick labels the x-Axis are drawn at.\n\n:param angle: double\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xTicks": "Sets the x-Axis ticks.\n\n*Overload 1*  \n  :param tickLocations: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param gapBetweenTicks: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xTicksFont": "Sets the font for the x-Axis ticks.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "xTicksVisible": "Sets whether the x-Axis ticks are visible.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "xToolTipPattern": "Sets the x-value tooltip format.\n\n*Overload 1*  \n  :param format: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param format: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "xTransform": "Sets the AxisTransform of the x-Axis\n\n:param transform: io.deephaven.db.plot.axistransformations.AxisTransform\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yAxis": "Gets the Axis representing the y-axis\n\n:return: (io.deephaven.db.plot.FigureImpl) y-dimension Axis",
  "yBusinessTime": "Sets the AxisTransform of the y-Axis\n as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) this Axes using the default BusinessCalendar for the y-Axis.\n  \n*Overload 2*  \n  :param calendar: io.deephaven.util.calendar.BusinessCalendar\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes using the calendar for the y-Axis business calendar.\n  \n*Overload 3*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes using the business calendar from row 0 of the filtered sds for the y-Axis business calendar.  If no value is found, no transform will be applied.",
  "yColor": "Sets the color of the y-Axis\n\n*Overload 1*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yFormat": "Sets the AxisFormat of the y-Axis\n\n:param format: io.deephaven.db.plot.axisformatters.AxisFormat\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yFormatPattern": "Sets the format pattern of the y-Axis\n\n:param pattern: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yGridLinesVisible": "Sets whether the Chart has grid lines in the y direction\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Chart",
  "yInvert": "Inverts the y-Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param invert: boolean\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yLabel": "Sets the label of the y-Axis\n\n:param label: java.lang.String\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yLabelFont": "Sets the font for the y-Axis label.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "yLog": "Sets the AxisTransform of the y-Axis to log base 10\n\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yMax": "Sets the maximum of the y-Axis.\n\n*Overload 1*  \n  :param max: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yMin": "Sets the minimum of the y-Axis.\n\n*Overload 1*  \n  :param min: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yMinorTicks": "Sets the number of minor ticks between consecutive major ticks\n in the y-Axis.\n These minor ticks are equally spaced.\n\n:param count: int\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yMinorTicksVisible": "Sets whether the y-Axis minor ticks are visible.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yRange": "Sets the range of the y-Axis\n\n:param min: double\n:param max: double\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yTickLabelAngle": "Sets the angle the tick labels the y-Axis are drawn at.\n\n:param angle: double\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yTicks": "Sets the y-Axis ticks.\n\n*Overload 1*  \n  :param tickLocations: double[]\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes\n  \n*Overload 2*  \n  :param gapBetweenTicks: double\n  :return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yTicksFont": "Sets the font for the y-Axis ticks.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.FigureImpl) this Axis",
  "yTicksVisible": "Sets whether the y-Axis ticks are visible.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.FigureImpl) this Axes",
  "yToolTipPattern": "Sets the y-value tooltip format.\n\n*Overload 1*  \n  :param format: java.lang.String\n  :return: (io.deephaven.db.plot.FigureImpl) this data series.\n  \n*Overload 2*  \n  :param format: java.lang.String\n  :param keys: java.lang.Object...\n  :return: io.deephaven.db.plot.FigureImpl",
  "yTransform": "Sets the AxisTransform of the y-Axis\n\n:param transform: io.deephaven.db.plot.axistransformations.AxisTransform\n:return: (io.deephaven.db.plot.FigureImpl) this Axes"
 },
 "path": "io.deephaven.db.plot.FigureImpl",
 "text": "An interface for constructing plots.  A Figure is immutable, and all function calls return a new immutable Figure instance.",
 "typeName": "class"
}