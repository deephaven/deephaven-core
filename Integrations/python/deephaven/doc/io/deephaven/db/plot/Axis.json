{
 "className": "io.deephaven.db.plot.Axis",
 "methods": {
  "axisColor": "Sets the color for this Axis line and tick marks.\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.db.plot.Axis) this Axis\n  \n*Overload 2*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.db.plot.Axis) this Axis",
  "axisFormat": "Sets the AxisFormat for this Axis.\n\n:param format: (io.deephaven.db.plot.axisformatters.AxisFormat) - axis format\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "axisFormatPattern": "Sets the format pattern for this Axis's labels.\n\n:param pattern: (java.lang.String) - axis format pattern\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "axisLabel": "Sets the label for this Axis.\n\n:param label: (java.lang.String) - label\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "axisLabelFont": "Sets the font for this Axis's label.\n\n*Overload 1*  \n  :param font: (io.deephaven.db.plot.Font) - font\n  :return: (io.deephaven.db.plot.Axis) this Axis\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.db.plot.Axis) this Axis",
  "businessTime": "Sets this Axis's AxisTransform as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :param calendar: (io.deephaven.util.calendar.BusinessCalendar) - business calendar of the AxisTransformBusinessCalendar\n  :return: (io.deephaven.db.plot.Axis) this Axis using the specified business calendar.\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing the business calendar.\n  :param valueColumn: (java.lang.String) - name of a column containing String values, where each value is the name of a\n          BusinessCalendar.\n  :return: (io.deephaven.db.plot.Axis) this Axis using the business calendar from row 0 of the filtered sds for the business calendar.\n           If no value is found, no transform will be applied.\n  \n*Overload 3*  \n  :return: (io.deephaven.db.plot.Axis) this Axis using the default business calendar.",
  "invert": "Inverts this Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.Axis) this Axes\n  \n*Overload 2*  \n  :param invert: (boolean) - if true, larger values will be closer to the origin; otherwise, smaller values will be closer to\n          the origin.\n  :return: (io.deephaven.db.plot.Axis) this Axes",
  "log": "Sets the AxisTransform as log base 10.\n\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "max": "Sets the maximum range of this Axis.\n\n*Overload 1*  \n  :param max: (double) - maximum of the range\n  :return: (io.deephaven.db.plot.Axis) this Axis\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset\n  :param valueColumn: (java.lang.String) - column in sds, where the maximum value is stored in row 0.\n  :return: (io.deephaven.db.plot.Axis) this Axes",
  "min": "Sets the minimum range of this Axis.\n\n*Overload 1*  \n  :param min: (double) - minimum of the range\n  :return: (io.deephaven.db.plot.Axis) this Axis\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset\n  :param valueColumn: (java.lang.String) - column in sds, where the minimum value is stored in row 0.\n  :return: (io.deephaven.db.plot.Axis) this Axes",
  "minorTicks": "Sets the number of minor ticks between consecutive major ticks. These minor ticks are equally spaced.\n\n:param count: (int) - number of minor ticks between consecutive major ticks.\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "minorTicksVisible": "Sets whether minor ticks are drawn on this Axis.\n\n:param visible: (boolean) - whether minor ticks are drawn on this Axis\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "range": "Sets the range of this Axis to [min, max] inclusive.\n\n:param min: (double) - minimum of the range\n:param max: (double) - maximum of the range\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "tickLabelAngle": "Sets the angle the tick labels of this Axis are drawn at.\n\n:param angle: (double) - angle in degrees\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "ticks": "Sets the tick locations.\n\n*Overload 1*  \n  :param gapBetweenTicks: (double) - the distance between ticks. For example, if gapBetweenTicks is 5.0, and the first\n          tick is at 10.0, the next will be drawn at 15.0.\n  :return: (io.deephaven.db.plot.Axis) this Axis\n  \n*Overload 2*  \n  :param tickLocations: (double[]) - coordinates of the major tick locations\n  :return: (io.deephaven.db.plot.Axis) this Axis",
  "ticksFont": "Sets the font for this Axis's ticks.\n\n*Overload 1*  \n  :param font: (io.deephaven.db.plot.Font) - font\n  :return: (io.deephaven.db.plot.Axis) this Axis\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.db.plot.Axis) this Axis",
  "ticksVisible": "Sets whether ticks are drawn on this Axis.\n\n:param visible: (boolean) - whether ticks are drawn on this Axis\n:return: (io.deephaven.db.plot.Axis) this Axis",
  "transform": "Sets the AxisTransform for this Axis.\n\n:param transform: (io.deephaven.db.plot.axistransformations.AxisTransform) - transform\n:return: (io.deephaven.db.plot.Axis) this Axis"
 },
 "path": "io.deephaven.db.plot.Axis",
 "text": "Represents an axis.",
 "typeName": "interface"
}