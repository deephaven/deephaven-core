{
 "className": "io.deephaven.db.plot.composite.ScatterPlotMatrix",
 "methods": {
  "getPlotInfo": ":return: io.deephaven.db.plot.errors.PlotInfo",
  "pointSize": "**Incompatible overloads text - text from the first overload:**\n\nSets the default point size of all plots in this ScatterPlotMatrix.\n\n*Overload 1*  \n  :param factor: (int) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 2*  \n  :param factor: (long) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 3*  \n  :param factor: (double) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 4*  \n  :param factor: (java.lang.Number) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 5*  \n  :param plotIndex: (int) - index\n  :param factor: (int) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 6*  \n  :param plotIndex: (int) - index\n  :param factor: (long) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 7*  \n  :param plotIndex: (int) - index\n  :param factor: (double) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 8*  \n  :param plotIndex: (int) - index\n  :param factor: (java.lang.Number) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 9*  \n  :param row: (int) - row index of this Figure's grid\n  :param col: (int) - column index of this Figure's grid\n  :param factor: (int) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 10*  \n  :param row: (int) - row index of this Figure's grid\n  :param col: (int) - column index of this Figure's grid\n  :param factor: (long) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 11*  \n  :param row: (int) - row index of this Figure's grid\n  :param col: (int) - column index of this Figure's grid\n  :param factor: (double) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 12*  \n  :param row: (int) - row index of this Figure's grid\n  :param col: (int) - column index of this Figure's grid\n  :param factor: (java.lang.Number) - point size\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 13*  \n  :param factors: (io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Double>) - point sizes\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 14*  \n  :param factors: (int...) - point sizes\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 15*  \n  :param factors: (long...) - point sizes\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 16*  \n  :param factors: (double...) - point sizes\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix\n  \n*Overload 17*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param factors: (T[]) - point sizes\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) this ScatterPlotMatrix",
  "scatterPlotMatrix": "Creates a scatter plot matrix by graphing each variable against every other variable.\n\n*Overload 1*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param variables: (T[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix where variable names are assigned as x1, x2, ... in\n           order.\n  \n*Overload 2*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param variableNames: (java.lang.String[]) - variable names\n  :param variables: (T[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix\n  \n*Overload 3*  \n  :param variables: (int[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix where variable names are assigned as x1, x2, ... in\n           order.\n  \n*Overload 4*  \n  :param variableNames: (java.lang.String[]) - variable names\n  :param variables: (int[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix\n  \n*Overload 5*  \n  :param variables: (long[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix where variable names are assigned as x1, x2, ... in\n           order.\n  \n*Overload 6*  \n  :param variableNames: (java.lang.String[]) - variable names\n  :param variables: (long[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix\n  \n*Overload 7*  \n  :param variables: (float[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix where variable names are assigned as x1, x2, ... in\n           order.\n  \n*Overload 8*  \n  :param variableNames: (java.lang.String[]) - variable names\n  :param variables: (float[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix\n  \n*Overload 9*  \n  :param variables: (double[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix where variable names are assigned as x1, x2, ... in\n           order.\n  \n*Overload 10*  \n  :param variableNames: (java.lang.String[]) - variable names\n  :param variables: (double[]...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix\n  \n*Overload 11*  \n  :param t: (io.deephaven.db.tables.Table) - table\n  :param columns: (java.lang.String...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix\n  \n*Overload 12*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param columns: (java.lang.String...) - data to plot\n  :return: (io.deephaven.db.plot.composite.ScatterPlotMatrix) new Figure containing the scatter plot matrix"
 },
 "path": "io.deephaven.db.plot.composite.ScatterPlotMatrix",
 "text": "Creates a scatter plot matrix by graphing each variable against every other variable.",
 "typeName": "class"
}