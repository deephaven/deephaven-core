{
 "className": "io.deephaven.db.plot.datasets.xy.XYDataSeries",
 "methods": {
  "pointColor": "Sets the point color.  Unspecified points use the default color.\n\n*Overload 1*  \n  Note: Java generics information - <T extends io.deephaven.gui.color.Paint>\n  \n  :param colors: (io.deephaven.db.plot.datasets.data.IndexableData<T>) - colors.  The color for data point i comes from index i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 2*  \n  :param colors: (io.deephaven.gui.color.Paint...) - colors.  The color for data point i comes from index i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 3*  \n  :param colors: (int...) - color palette indices.  The color for data point i comes from index i.  A value of 3 corresponds to the 3rd color from the color pallette.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 4*  \n  :param colors: (java.lang.Integer...) - color palette indices.  The color for data point i comes from index i.  A value of 3 corresponds to the 3rd color from the color pallette.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 5*  \n  :param colors: (java.lang.String...) - color names.  The color for data point i comes from index i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 6*  \n  :param t: (io.deephaven.db.tables.Table) - table containing colors\n  :param columnName: (java.lang.String) - column in t containing colors.  The color data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 7*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing colors\n  :param columnName: (java.lang.String) - column in sds containing colors.  The color data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries",
  "pointColorInteger": "Sets the point color.  Unspecified points use the default color.\n\n:param colors: (io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Integer>) - colors.  The color for data point i comes from index i.\n:return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries",
  "pointLabel": "Sets the point label for data point i from index i of the input labels.\n Points outside of these indices are unlabeled.\n\n*Overload 1*  \n  :param labels: (io.deephaven.db.plot.datasets.data.IndexableData<?>) - labels\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 2*  \n  :param labels: (java.lang.Object...) - labels\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 3*  \n  :param t: (io.deephaven.db.tables.Table) - table containing labels\n  :param columnName: (java.lang.String) - column in t containing labels.  The label data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 4*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing labels\n  :param columnName: (java.lang.String) - column in sds containing labels.  The color data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries",
  "pointShape": "Sets the point shapes for data point i from index i of the input labels.\n Points outside of these indices use default shapes.\n\n*Overload 1*  \n  :param shapes: (io.deephaven.db.plot.datasets.data.IndexableData<java.lang.String>) - shapes\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 2*  \n  :param shapes: (java.lang.String...) - shapes\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 3*  \n  :param shapes: (io.deephaven.gui.shape.Shape...) - shapes\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 4*  \n  :param t: (io.deephaven.db.tables.Table) - table containing shapes\n  :param columnName: (java.lang.String) - column in t containing shapes.  The shape data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 5*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing shapes\n  :param columnName: (java.lang.String) - column in sds containing shapes.  The color data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries",
  "pointSize": "Sets the point size.  A scale factor of 1 is the default size.  A scale factor of 2 is 2x the\n default size.  Unspecified points use the default size.\n\n*Overload 1*  \n  :param factors: (io.deephaven.db.plot.datasets.data.IndexableData<java.lang.Double>) - factors to multiply the default size (1) by\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 2*  \n  :param factors: (int...) - factors to multiply the default size (1) by\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 3*  \n  :param factors: (long...) - factors to multiply the default size (1) by\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 4*  \n  :param factors: (double...) - factors to multiply the default size (1) by\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 5*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param factors: (T[]) - factors to multiply the default size (1) by\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 6*  \n  :param t: (io.deephaven.db.tables.Table) - table containing factors to multiply the default size (1) by\n  :param columnName: (java.lang.String) - column in t containing size scaling factors.  The size data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries\n  \n*Overload 7*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing factors to multiply the default size (1) by\n  :param columnName: (java.lang.String) - column in sds containing size scaling factors.  The size data for point i comes from row i.\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) this XYDataSeries"
 },
 "path": "io.deephaven.db.plot.datasets.xy.XYDataSeries",
 "text": "DataSeries with two numerical components, x and y.\n Data points are numbered and are accessed with an index.",
 "typeName": "interface"
}