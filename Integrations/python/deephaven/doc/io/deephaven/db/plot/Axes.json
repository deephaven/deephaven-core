{
 "className": "io.deephaven.db.plot.Axes",
 "methods": {
  "axesRemoveSeries": "Removes the series with the specified names from this Axes.\n\n:param names: (java.lang.String...) - series names\n:return: (io.deephaven.db.plot.Axes) this Chart",
  "axis": "Gets the Axis at dimension dim.\n The x-axis is dimension 0, y-axis dimension 1.\n\n:param dim: (int) - dimension of the Axis\n:return: (io.deephaven.db.plot.Axis) Axis at dimension dim",
  "catErrorBar": "Creates a category error bar plot with whiskers in the y direction.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param categories: (java.lang.String) - column in t that holds the discrete data\n  :param values: (java.lang.String) - column in t that holds the numeric data\n  :param yLow: (java.lang.String) - column in t that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in t that holds the high value in the y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table).\n  :param categories: (java.lang.String) - column in sds that holds the discrete data\n  :param values: (java.lang.String) - column in sds that holds the numeric data\n  :param yLow: (java.lang.String) - column in sds that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in sds that holds the high value in the y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (short[]) - numeric data\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (int[]) - numeric data\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (long[]) - numeric data\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (float[]) - numeric data\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (double[]) - numeric data\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (T1[]) - numeric data\n  :param yLow: (T2[]) - low value in y dimension\n  :param yHigh: (T3[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (java.util.List<T1>) - numeric data\n  :param yLow: (java.util.List<T2>) - low value in y dimension\n  :param yHigh: (java.util.List<T3>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (short[]) - numeric data\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (int[]) - numeric data\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (long[]) - numeric data\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (float[]) - numeric data\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (double[]) - numeric data\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (T1[]) - numeric data\n  :param yLow: (T2[]) - low value in y dimension\n  :param yHigh: (T3[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (java.util.List<T1>) - numeric data\n  :param yLow: (java.util.List<T2>) - low value in y dimension\n  :param yHigh: (java.util.List<T3>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (java.util.Date[]) - numeric data\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot\n  \n*Overload 18*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (io.deephaven.db.tables.utils.DBDateTime[]) - numeric data\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created by the plot",
  "catErrorBarBy": "Creates a catErrorBar plot for each distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param categories: (java.lang.String) - column in t that holds the discrete data\n  :param values: (java.lang.String) - column in t that holds the numeric data\n  :param yLow: (java.lang.String) - column in t that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in t that holds the high value in the y dimension\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table).\n  :param categories: (java.lang.String) - column in sds that holds the discrete data\n  :param values: (java.lang.String) - column in sds that holds the numeric data\n  :param yLow: (java.lang.String) - column in sds that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in sds that holds the high value in the y dimension\n  :param byColumns: (java.lang.String...) - column(s) in sds that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "catHistPlot": "Creates a histogram with discrete axis.  Charts the frequency of each unique element in the input data.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param columnName: (java.lang.String) - column in t\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param columnName: (java.lang.String) - column in sds\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 3*  \n  Note: Java generics information - <T extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T[]) - data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 8*  \n  Note: Java generics information - <T extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T>) - data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot",
  "catPlot": "Creates a plot with discrete axis.\n Discrete data must not have duplicates.\n\n*Overload 1*  \n  Note: Java generics information - <T1 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (io.deephaven.db.plot.datasets.data.IndexableData<T1>) - discrete data\n  :param values: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param categories: (java.lang.String) - column in t holding discrete data\n  :param values: (java.lang.String) - column in t holding numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param categories: (java.lang.String) - column in sds holding discrete data\n  :param values: (java.lang.String) - column in sds holding numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (java.util.Date[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (io.deephaven.db.tables.utils.DBDateTime[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (short[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (int[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (long[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (float[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (double[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (T1[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - discrete data\n  :param values: (java.util.List<T1>) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (java.util.Date[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (io.deephaven.db.tables.utils.DBDateTime[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (short[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 16*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (int[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (long[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 18*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (float[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 19*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (double[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 20*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (T1[]) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 21*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - discrete data\n  :param values: (java.util.List<T1>) - numeric data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot",
  "catPlotBy": "Creates a category plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param categories: (java.lang.String) - column in t holding discrete data\n  :param values: (java.lang.String) - column in t holding numeric data\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param categories: (java.lang.String) - column in sds holding discrete data\n  :param values: (java.lang.String) - column in sds holding numeric data\n  :param byColumns: (java.lang.String...) - column(s) in sds that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "errorBarX": "Creates an XY plot with error bars in the x direction.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param xLow: (java.lang.String) - column in t that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in t that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param xLow: (java.lang.String) - column in sds that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in sds that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param xLow: (short[]) - low value in x dimension\n  :param xHigh: (short[]) - high value in x dimension\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param xLow: (int[]) - low value in x dimension\n  :param xHigh: (int[]) - high value in x dimension\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param xLow: (long[]) - low value in x dimension\n  :param xHigh: (long[]) - high value in x dimension\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param xLow: (float[]) - low value in x dimension\n  :param xHigh: (float[]) - high value in x dimension\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param xLow: (double[]) - low value in x dimension\n  :param xHigh: (double[]) - high value in x dimension\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param xLow: (T1[]) - low value in x dimension\n  :param xHigh: (T2[]) - high value in x dimension\n  :param y: (T3[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param xLow: (java.util.List<T1>) - low value in x dimension\n  :param xHigh: (java.util.List<T2>) - high value in x dimension\n  :param y: (java.util.List<T3>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param xLow: (short[]) - low value in x dimension\n  :param xHigh: (short[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param xLow: (int[]) - low value in x dimension\n  :param xHigh: (int[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param xLow: (long[]) - low value in x dimension\n  :param xHigh: (long[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 19*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param xLow: (float[]) - low value in x dimension\n  :param xHigh: (float[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 20*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 21*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param xLow: (double[]) - low value in x dimension\n  :param xHigh: (double[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 22*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (T3[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 23*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param xLow: (T1[]) - low value in x dimension\n  :param xHigh: (T2[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 24*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (java.util.List<T3>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 25*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param xLow: (java.util.List<T1>) - low value in x dimension\n  :param xHigh: (java.util.List<T2>) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 26*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 27*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param xLow: (short[]) - low value in x dimension\n  :param xHigh: (short[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 28*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 29*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param xLow: (int[]) - low value in x dimension\n  :param xHigh: (int[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 30*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 31*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param xLow: (long[]) - low value in x dimension\n  :param xHigh: (long[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 32*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 33*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param xLow: (float[]) - low value in x dimension\n  :param xHigh: (float[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 34*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 35*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param xLow: (double[]) - low value in x dimension\n  :param xHigh: (double[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 36*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (T3[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 37*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param xLow: (T1[]) - low value in x dimension\n  :param xHigh: (T2[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 38*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (java.util.List<T3>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 39*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param xLow: (java.util.List<T1>) - low value in x dimension\n  :param xHigh: (java.util.List<T2>) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot",
  "errorBarXBy": "Creates an errorBarX plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param xLow: (java.lang.String) - column in t that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in t that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param xLow: (java.lang.String) - column in sds that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in sds that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :param byColumns: (java.lang.String...) - column(s) in sds that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "errorBarXY": "Creates an XY plot with error bars in both the x and y directions.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param xLow: (java.lang.String) - column in t that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in t that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :param yLow: (java.lang.String) - column in t that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in t that holds the high value in the y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param xLow: (java.lang.String) - column in sds that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in sds that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :param yLow: (java.lang.String) - column in sds that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in sds that holds the high value in the y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param xLow: (short[]) - low value in x dimension\n  :param xHigh: (short[]) - high value in x dimension\n  :param y: (short[]) - y-values\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param xLow: (int[]) - low value in x dimension\n  :param xHigh: (int[]) - high value in x dimension\n  :param y: (int[]) - y-values\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param xLow: (long[]) - low value in x dimension\n  :param xHigh: (long[]) - high value in x dimension\n  :param y: (long[]) - y-values\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param xLow: (float[]) - low value in x dimension\n  :param xHigh: (float[]) - high value in x dimension\n  :param y: (float[]) - y-values\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param xLow: (double[]) - low value in x dimension\n  :param xHigh: (double[]) - high value in x dimension\n  :param y: (double[]) - y-values\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param xLow: (T1[]) - low value in x dimension\n  :param xHigh: (T2[]) - high value in x dimension\n  :param y: (T3[]) - y-values\n  :param yLow: (T4[]) - low value in y dimension\n  :param yHigh: (T5[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param xLow: (java.util.List<T1>) - low value in x dimension\n  :param xHigh: (java.util.List<T2>) - high value in x dimension\n  :param y: (java.util.List<T3>) - y-values\n  :param yLow: (java.util.List<T4>) - low value in y dimension\n  :param yHigh: (java.util.List<T5>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (short[]) - y-values\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param xLow: (short[]) - low value in x dimension\n  :param xHigh: (short[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (int[]) - y-values\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param xLow: (int[]) - low value in x dimension\n  :param xHigh: (int[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (long[]) - y-values\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param xLow: (long[]) - low value in x dimension\n  :param xHigh: (long[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (float[]) - y-values\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 19*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param xLow: (float[]) - low value in x dimension\n  :param xHigh: (float[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 20*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (double[]) - y-values\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 21*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param xLow: (double[]) - low value in x dimension\n  :param xHigh: (double[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 22*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (T3[]) - y-values\n  :param yLow: (T4[]) - low value in y dimension\n  :param yHigh: (T5[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 23*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param xLow: (T1[]) - low value in x dimension\n  :param xHigh: (T2[]) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 24*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param xLow: (java.util.Date[]) - low value in x dimension\n  :param xHigh: (java.util.Date[]) - high value in x dimension\n  :param y: (java.util.List<T3>) - y-values\n  :param yLow: (java.util.List<T4>) - low value in y dimension\n  :param yHigh: (java.util.List<T5>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 25*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param xLow: (java.util.List<T1>) - low value in x dimension\n  :param xHigh: (java.util.List<T2>) - high value in x dimension\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 26*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (short[]) - y-values\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 27*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param xLow: (short[]) - low value in x dimension\n  :param xHigh: (short[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 28*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (int[]) - y-values\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 29*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param xLow: (int[]) - low value in x dimension\n  :param xHigh: (int[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 30*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (long[]) - y-values\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 31*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param xLow: (long[]) - low value in x dimension\n  :param xHigh: (long[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 32*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (float[]) - y-values\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 33*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param xLow: (float[]) - low value in x dimension\n  :param xHigh: (float[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 34*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (double[]) - y-values\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 35*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param xLow: (double[]) - low value in x dimension\n  :param xHigh: (double[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 36*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (T3[]) - y-values\n  :param yLow: (T4[]) - low value in y dimension\n  :param yHigh: (T5[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 37*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param xLow: (T1[]) - low value in x dimension\n  :param xHigh: (T2[]) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 38*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param xLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in x dimension\n  :param xHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in x dimension\n  :param y: (java.util.List<T3>) - y-values\n  :param yLow: (java.util.List<T4>) - low value in y dimension\n  :param yHigh: (java.util.List<T5>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 39*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param xLow: (java.util.List<T1>) - low value in x dimension\n  :param xHigh: (java.util.List<T2>) - high value in x dimension\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot",
  "errorBarXYBy": "Creates an errorBar plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param xLow: (java.lang.String) - column in t that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in t that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :param yLow: (java.lang.String) - column in t that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in t that holds the high value in the y dimension\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param xLow: (java.lang.String) - column in sds that holds the low value in the x dimension\n  :param xHigh: (java.lang.String) - column in sds that holds the high value in the x dimension\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :param yLow: (java.lang.String) - column in sds that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in sds that holds the high value in the y dimension\n  :param byColumns: (java.lang.String...) - column(s) in sds that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "errorBarY": "Creates an XY plot with error bars in the y direction.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :param yLow: (java.lang.String) - column in t that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in t that holds the high value in the y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :param yLow: (java.lang.String) - column in sds that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in sds that holds the high value in the y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (short[]) - y-values\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (int[]) - y-values\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (long[]) - y-values\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (float[]) - y-values\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (double[]) - y-values\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (T1[]) - y-values\n  :param yLow: (T2[]) - low value in y dimension\n  :param yHigh: (T3[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :param yLow: (java.util.List<T2>) - low value in y dimension\n  :param yHigh: (java.util.List<T3>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (short[]) - y-values\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (int[]) - y-values\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (long[]) - y-values\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 18*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (float[]) - y-values\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 19*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 20*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (double[]) - y-values\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 21*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 22*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (T1[]) - y-values\n  :param yLow: (T2[]) - low value in y dimension\n  :param yHigh: (T3[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 23*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 24*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :param yLow: (java.util.List<T2>) - low value in y dimension\n  :param yHigh: (java.util.List<T3>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 25*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :param yLow: (java.util.Date[]) - low value in y dimension\n  :param yHigh: (java.util.Date[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 26*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (short[]) - y-values\n  :param yLow: (short[]) - low value in y dimension\n  :param yHigh: (short[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 27*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 28*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (int[]) - y-values\n  :param yLow: (int[]) - low value in y dimension\n  :param yHigh: (int[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 29*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 30*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (long[]) - y-values\n  :param yLow: (long[]) - low value in y dimension\n  :param yHigh: (long[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 31*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 32*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (float[]) - y-values\n  :param yLow: (float[]) - low value in y dimension\n  :param yHigh: (float[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 33*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 34*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (double[]) - y-values\n  :param yLow: (double[]) - low value in y dimension\n  :param yHigh: (double[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 35*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 36*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (T1[]) - y-values\n  :param yLow: (T2[]) - low value in y dimension\n  :param yHigh: (T3[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 37*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 38*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :param yLow: (java.util.List<T2>) - low value in y dimension\n  :param yHigh: (java.util.List<T3>) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot\n  \n*Overload 39*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :param yLow: (io.deephaven.db.tables.utils.DBDateTime[]) - low value in y dimension\n  :param yHigh: (io.deephaven.db.tables.utils.DBDateTime[]) - high value in y dimension\n  :return: (io.deephaven.db.plot.datasets.xyerrorbar.XYErrorBarDataSeries) dataset created by the plot",
  "errorBarYBy": "Creates a errorBarY plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :param yLow: (java.lang.String) - column in t that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in t that holds the high value in the y dimension\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable dataset (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :param yLow: (java.lang.String) - column in sds that holds the low value in the y dimension\n  :param yHigh: (java.lang.String) - column in sds that holds the high value in the y dimension\n  :param byColumns: (java.lang.String...) - column(s) in sds that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "histPlot": "Creates a histogram.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param counts: (io.deephaven.db.tables.Table) - table\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param columnName: (java.lang.String) - column in t\n  :param nbins: (int) - number of bins in the resulting histogram\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param columnName: (java.lang.String) - column in t\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins in the resulting histogram\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created for plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param columnName: (java.lang.String) - column in sds\n  :param nbins: (int) - number of bins in the resulting histogram\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created for plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param columnName: (java.lang.String) - column in sds\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins in the resulting histogram\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created for plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - data\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 18*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot\n  \n*Overload 19*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - data\n  :param rangeMin: (double) - minimum of the range\n  :param rangeMax: (double) - maximum of the range\n  :param nbins: (int) - number of bins\n  :return: (io.deephaven.db.plot.datasets.interval.IntervalXYDataSeries) dataset created by the plot",
  "ohlcPlot": "Creates an open-high-low-close plot.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - time data\n  :param open: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - open data\n  :param high: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - high data\n  :param low: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - low data\n  :param close: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param timeCol: (java.lang.String) - column in t that holds the time data\n  :param openCol: (java.lang.String) - column in t that holds the open data\n  :param highCol: (java.lang.String) - column in t that holds the high data\n  :param lowCol: (java.lang.String) - column in t that holds the low data\n  :param closeCol: (java.lang.String) - column in t that holds the close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param timeCol: (java.lang.String) - column in sds that holds the time data\n  :param openCol: (java.lang.String) - column in sds that holds the open data\n  :param highCol: (java.lang.String) - column in sds that holds the high data\n  :param lowCol: (java.lang.String) - column in sds that holds the low data\n  :param closeCol: (java.lang.String) - column in sds that holds the close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created for plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (short[]) - open data\n  :param high: (short[]) - high data\n  :param low: (short[]) - low data\n  :param close: (short[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (short[]) - open data\n  :param high: (short[]) - high data\n  :param low: (short[]) - low data\n  :param close: (short[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (int[]) - open data\n  :param high: (int[]) - high data\n  :param low: (int[]) - low data\n  :param close: (int[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (int[]) - open data\n  :param high: (int[]) - high data\n  :param low: (int[]) - low data\n  :param close: (int[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (long[]) - open data\n  :param high: (long[]) - high data\n  :param low: (long[]) - low data\n  :param close: (long[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (long[]) - open data\n  :param high: (long[]) - high data\n  :param low: (long[]) - low data\n  :param close: (long[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 10*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (float[]) - open data\n  :param high: (float[]) - high data\n  :param low: (float[]) - low data\n  :param close: (float[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 11*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (float[]) - open data\n  :param high: (float[]) - high data\n  :param low: (float[]) - low data\n  :param close: (float[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 12*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (double[]) - open data\n  :param high: (double[]) - high data\n  :param low: (double[]) - low data\n  :param close: (double[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 13*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (double[]) - open data\n  :param high: (double[]) - high data\n  :param low: (double[]) - low data\n  :param close: (double[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 14*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (T1[]) - open data\n  :param high: (T2[]) - high data\n  :param low: (T3[]) - low data\n  :param close: (T4[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (T1[]) - open data\n  :param high: (T2[]) - high data\n  :param low: (T3[]) - low data\n  :param close: (T4[]) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (java.util.Date[]) - time data\n  :param open: (java.util.List<T1>) - open data\n  :param high: (java.util.List<T2>) - high data\n  :param low: (java.util.List<T3>) - low data\n  :param close: (java.util.List<T4>) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot\n  \n*Overload 17*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param time: (io.deephaven.db.tables.utils.DBDateTime[]) - time data\n  :param open: (java.util.List<T1>) - open data\n  :param high: (java.util.List<T2>) - high data\n  :param low: (java.util.List<T3>) - low data\n  :param close: (java.util.List<T4>) - close data\n  :return: (io.deephaven.db.plot.datasets.ohlc.OHLCDataSeries) dataset created by the plot",
  "ohlcPlotBy": "Creates an open-high-low-close plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param timeCol: (java.lang.String) - column in t that holds the time data\n  :param openCol: (java.lang.String) - column in t that holds the open data\n  :param highCol: (java.lang.String) - column in t that holds the high data\n  :param lowCol: (java.lang.String) - column in t that holds the low data\n  :param closeCol: (java.lang.String) - column in t that holds the close data\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param timeCol: (java.lang.String) - column in sds that holds the time data\n  :param openCol: (java.lang.String) - column in sds that holds the open data\n  :param highCol: (java.lang.String) - column in sds that holds the high data\n  :param lowCol: (java.lang.String) - column in sds that holds the low data\n  :param closeCol: (java.lang.String) - column in sds that holds the close data\n  :param byColumns: (java.lang.String...) - column(s) in sds that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "piePlot": "Creates a pie plot.\n Categorical data must not have duplicates.\n\n*Overload 1*  \n  Note: Java generics information - <T1 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (io.deephaven.db.plot.datasets.data.IndexableData<T1>) - categories\n  :param values: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param categories: (java.lang.String) - column in t with categorical data\n  :param values: (java.lang.String) - column in t with numerical data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param categories: (java.lang.String) - column in sds with categorical data\n  :param values: (java.lang.String) - column in sds with numerical data\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (short[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (int[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (long[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (float[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (double[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (T1[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (T0[]) - categories\n  :param values: (java.util.List<T1>) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (short[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (int[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (long[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (float[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (double[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 16*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (T1[]) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param categories: (java.util.List<T0>) - categories\n  :param values: (java.util.List<T1>) - data values\n  :return: (io.deephaven.db.plot.datasets.category.CategoryDataSeries) dataset created for plot",
  "plot": "Creates an XY plot.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param function: (java.util.function.DoubleUnaryOperator) - function to plot\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeriesFunction) dataset created for plot\n  \n*Overload 2*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param function: (groovy.lang.Closure<T>) - function to plot\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeriesFunction) dataset created for plot\n  \n*Overload 3*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - x-values\n  :param y: (io.deephaven.db.plot.datasets.data.IndexableNumericData) - y-values\n  :param hasXTimeAxis: (boolean) - whether to treat the x-values as time data\n  :param hasYTimeAxis: (boolean) - whether to treat the y-values as time data\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 4*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 5*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 6*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 7*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 8*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 9*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 10*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 11*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 12*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 13*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 14*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.Date[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 15*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 16*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 17*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 18*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 19*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 20*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 21*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 22*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 23*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (io.deephaven.db.tables.utils.DBDateTime[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 24*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 25*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 26*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 27*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 28*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 29*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 30*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 31*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 32*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (short[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 33*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 34*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 35*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 36*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 37*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 38*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 39*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 40*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 41*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (int[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 42*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 43*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 44*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 45*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 46*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 47*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 48*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 49*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 50*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (long[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 51*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 52*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 53*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 54*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 55*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 56*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 57*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 58*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 59*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (float[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 60*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 61*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 62*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 63*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 64*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 65*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 66*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 67*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 68*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (double[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 69*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 70*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 71*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 72*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 73*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 74*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 75*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 76*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 77*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (T0[]) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 78*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (java.util.Date[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 79*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (io.deephaven.db.tables.utils.DBDateTime[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 80*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (short[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 81*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (int[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 82*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (long[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 83*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (float[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 84*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (double[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 85*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (T1[]) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot\n  \n*Overload 86*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param x: (java.util.List<T0>) - x-values\n  :param y: (java.util.List<T1>) - y-values\n  :return: (io.deephaven.db.plot.datasets.xy.XYDataSeries) dataset created for plot",
  "plotBy": "Creates an XY plot per distinct grouping value specified in byColumns.\n\n*Overload 1*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param t: (io.deephaven.db.tables.Table) - table\n  :param x: (java.lang.String) - column in t that holds the x-variable data\n  :param y: (java.lang.String) - column in t that holds the y-variable data\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot\n  \n*Overload 2*  \n  :param seriesName: (java.lang.Comparable) - name of the created dataset\n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param x: (java.lang.String) - column in sds that holds the x-variable data\n  :param y: (java.lang.String) - column in sds that holds the y-variable data\n  :param byColumns: (java.lang.String...) - column(s) in t that holds the grouping data\n  :return: (io.deephaven.db.plot.datasets.multiseries.MultiSeries) dataset created for plot",
  "plotStyle": "Sets the PlotStyle of this Axes.\n\n*Overload 1*  \n  :param style: (io.deephaven.db.plot.PlotStyle) - style\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param style: (java.lang.String) - style\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "series": "Gets a data series.\n\n*Overload 1*  \n  :param id: (int) - series id.\n  :return: (io.deephaven.db.plot.Series) selected data series.\n  \n*Overload 2*  \n  :param name: (java.lang.Comparable) - series name.\n  :return: (io.deephaven.db.plot.Series) selected data series.",
  "twin": "Creates a new Axes instance which shares the same Axis\n objects as this Axes.\n The resultant Axes has the same range, ticks, etc. as this Axes\n (as these are fields of the Axis) but may have,\n for example, a different PlotStyle.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.Axes) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 2*  \n  :param name: (java.lang.String) - Name for the axes\n  :return: (io.deephaven.db.plot.Axes) the new Axes instance\n  \n*Overload 3*  \n  :param dim: (int) - Axis dimension to share.  The x-axis is dimension 0, y-axis is dimension 1.\n  :return: (io.deephaven.db.plot.Axes) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 4*  \n  :param name: (java.lang.String) - name for the axes\n  :param dim: (int) - Axis dimension to share.  The x-axis is dimension 0, y-axis is dimension 1.\n  :return: (io.deephaven.db.plot.Axes) the new Axes instance",
  "twinX": "Creates a new Axes instance which shares the same x-Axis\n as this Axes.\n \n The resultant Axes has the same x-axis range, ticks, etc. as this Axes\n (as these are properties of the Axis)\n but may have, for example, a different PlotStyle.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.Axes) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 2*  \n  :param name: (java.lang.String) - Name for the axes\n  :return: (io.deephaven.db.plot.Axes) the new Axes instance",
  "twinY": "Creates a new Axes instance which shares the same y-Axis\n as this Axes.\n \n The resultant Axes has the same y-axis range, ticks, etc. as this Axes\n (as these are properties of the Axis)\n but may have, for example, a different PlotStyle.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.Axes) the new Axes instance.  The axes name will be equal to the string representation of the axes id.\n  \n*Overload 2*  \n  :param name: (java.lang.String) - Name for the axes\n  :return: (io.deephaven.db.plot.Axes) the new Axes instance",
  "xAxis": "Gets the Axis representing the x-axis\n\n:return: (io.deephaven.db.plot.Axis) x-dimension Axis",
  "xBusinessTime": "Sets the AxisTransform of the x-Axis\n as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :param calendar: (io.deephaven.util.calendar.BusinessCalendar) - business calendar for the AxisTransformBusinessCalendar\n  :return: (io.deephaven.db.plot.Axes) this Axes using the calendar for the x-Axis business calendar.\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing the business calendar.\n  :param valueColumn: (java.lang.String) - name of a column containing String values, where each value is the name of a BusinessCalendar.\n  :return: (io.deephaven.db.plot.Axes) this Axes using the business calendar from row 0 of the filtered sds for the x-Axis business calendar.  If no value is found, no transform will be applied.\n  \n*Overload 3*  \n  :return: (io.deephaven.db.plot.Axes) this Axes using the default BusinessCalendar for the x-Axis.",
  "xColor": "Sets the color of the x-Axis\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "xFormat": "Sets the AxisFormat of the x-Axis\n\n:param format: (io.deephaven.db.plot.axisformatters.AxisFormat) - format\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xFormatPattern": "Sets the format pattern of the x-Axis\n\n:param pattern: (java.lang.String) - pattern\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xInvert": "Inverts the x-Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param invert: (boolean) - if true, larger values will be closer to the origin\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "xLabel": "Sets the label of the x-Axis\n\n:param label: (java.lang.String) - label\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xLabelFont": "Sets the font for the x-Axis label.\n\n*Overload 1*  \n  :param font: (io.deephaven.db.plot.Font) - font\n  :return: (io.deephaven.db.plot.Axes) this Axis\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.db.plot.Axes) this Axis",
  "xLog": "Sets the AxisTransform of the x-Axis to log base 10\n\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xMax": "Sets the maximum of the x-Axis.\n\n*Overload 1*  \n  :param max: (double) - maximum of the x-range\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param valueColumn: (java.lang.String) - column in sds.  The value in row 0 is used for the maximum.\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "xMin": "Sets the minimum of the x-Axis.\n\n*Overload 1*  \n  :param min: (double) - minimum of the x-range\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param valueColumn: (java.lang.String) - column in sds.  The value in row 0 is used for the minimum.\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "xMinorTicks": "Sets the number of minor ticks between consecutive major ticks\n in the x-Axis.\n These minor ticks are equally spaced.\n\n:param count: (int) - number of minor ticks between consecutive major ticks.\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xMinorTicksVisible": "Sets whether the x-Axis minor ticks are visible.\n\n:param visible: (boolean) - whether the minor ticks are visible\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xRange": "Sets the range of the x-Axis\n\n:param min: (double) - minimum of the range\n:param max: (double) - maximum of the range\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xTickLabelAngle": "Sets the angle the tick labels the x-Axis are drawn at.\n\n:param angle: (double) - angle in degrees\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xTicks": "Sets the x-Axis ticks.\n\n*Overload 1*  \n  :param gapBetweenTicks: (double) - spacing between major ticks\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param tickLocations: (double[]) - locations of the major ticks\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "xTicksFont": "Sets the font for the x-Axis ticks.\n\n*Overload 1*  \n  :param font: (io.deephaven.db.plot.Font) - font\n  :return: (io.deephaven.db.plot.Axes) this Axis\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.db.plot.Axes) this Axis",
  "xTicksVisible": "Sets whether the x-Axis ticks are visible.\n\n:param visible: (boolean) - whether the ticks are visible\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "xTransform": "Sets the AxisTransform of the x-Axis\n\n:param transform: (io.deephaven.db.plot.axistransformations.AxisTransform) - transform\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yAxis": "Gets the Axis representing the y-axis\n\n:return: (io.deephaven.db.plot.Axis) y-dimension Axis",
  "yBusinessTime": "Sets the AxisTransform of the y-Axis\n as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :param calendar: (io.deephaven.util.calendar.BusinessCalendar) - business calendar for the AxisTransformBusinessCalendar\n  :return: (io.deephaven.db.plot.Axes) this Axes using the calendar for the y-Axis business calendar.\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table) containing the business calendar.\n  :param valueColumn: (java.lang.String) - name of a column containing String values, where each value is the name of a BusinessCalendar.\n  :return: (io.deephaven.db.plot.Axes) this Axes using the business calendar from row 0 of the filtered sds for the y-Axis business calendar.  If no value is found, no transform will be applied.\n  \n*Overload 3*  \n  :return: (io.deephaven.db.plot.Axes) this Axes using the default BusinessCalendar for the y-Axis.",
  "yColor": "Sets the color of the y-Axis\n\n*Overload 1*  \n  :param color: (io.deephaven.gui.color.Paint) - color\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param color: (java.lang.String) - color\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "yFormat": "Sets the AxisFormat of the y-Axis\n\n:param format: (io.deephaven.db.plot.axisformatters.AxisFormat) - format\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yFormatPattern": "Sets the format pattern of the y-Axis\n\n:param pattern: (java.lang.String) - pattern\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yInvert": "Inverts the y-Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param invert: (boolean) - if true, larger values will be closer to the origin\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "yLabel": "Sets the label of the y-Axis\n\n:param label: (java.lang.String) - pattern\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yLabelFont": "Sets the font for the y-Axis label.\n\n*Overload 1*  \n  :param font: (io.deephaven.db.plot.Font) - font\n  :return: (io.deephaven.db.plot.Axes) this Axis\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.db.plot.Axes) this Axis",
  "yLog": "Sets the AxisTransform of the y-Axis to log base 10\n\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yMax": "Sets the maximum of the y-Axis.\n\n*Overload 1*  \n  :param max: (double) - maximum of the y-range\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param valueColumn: (java.lang.String) - column in sds.  The value in row 0 is used for the maximum.\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "yMin": "Sets the minimum of the y-Axis.\n\n*Overload 1*  \n  :param min: (double) - minimum of the y-range\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param sds: (io.deephaven.db.plot.filters.SelectableDataSet) - selectable data set (e.g. OneClick filterable table)\n  :param valueColumn: (java.lang.String) - column in sds.  The value in row 0 is used for the minimum.\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "yMinorTicks": "Sets the number of minor ticks between consecutive major ticks\n in the y-Axis.\n These minor ticks are equally spaced.\n\n:param count: (int) - number of minor ticks between consecutive major ticks.\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yMinorTicksVisible": "Sets whether the y-Axis minor ticks are visible.\n\n:param visible: (boolean) - whether the minor ticks are visible\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yRange": "Sets the range of the y-Axis\n\n:param min: (double) - minimum of the range\n:param max: (double) - maximum of the range\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yTickLabelAngle": "Sets the angle the tick labels the y-Axis are drawn at.\n\n:param angle: (double) - angle in degrees\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yTicks": "Sets the y-Axis ticks.\n\n*Overload 1*  \n  :param gapBetweenTicks: (double) - spacing between major ticks\n  :return: (io.deephaven.db.plot.Axes) this Axes\n  \n*Overload 2*  \n  :param tickLocations: (double[]) - locations of the major ticks\n  :return: (io.deephaven.db.plot.Axes) this Axes",
  "yTicksFont": "Sets the font for the y-Axis ticks.\n\n*Overload 1*  \n  :param font: (io.deephaven.db.plot.Font) - font\n  :return: (io.deephaven.db.plot.Axes) this Axis\n  \n*Overload 2*  \n  :param family: (java.lang.String) - font family; if null, set to Arial\n  :param style: (java.lang.String) - font style; if null, set to Font.FontStyle PLAIN\n  :param size: (int) - the point size of the Font\n  :return: (io.deephaven.db.plot.Axes) this Axis",
  "yTicksVisible": "Sets whether the y-Axis ticks are visible.\n\n:param visible: (boolean) - whether the ticks are visible\n:return: (io.deephaven.db.plot.Axes) this Axes",
  "yTransform": "Sets the AxisTransform of the y-Axis\n\n:param transform: (io.deephaven.db.plot.axistransformations.AxisTransform) - transform\n:return: (io.deephaven.db.plot.Axes) this Axes"
 },
 "path": "io.deephaven.db.plot.Axes",
 "text": "Chart's axes.",
 "typeName": "interface"
}