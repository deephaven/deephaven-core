{
 "className": "io.deephaven.db.v2.sources.chunk.page.ChunkPage",
 "methods": {
  "getChunk": "Same as ChunkSource.getChunk(GetContext, OrderedKeys), except that you pass in the begin and last keys\n representing the begin and last (inclusive) keys of a single range rather than an OrderedKeys.\n Typically you want to call this only if you don't have an OrderedKeys, such as during an\n OrderedKeys.forAllLongRanges(LongRangeConsumer) call.  In this case, it allows you to avoid\n creating an intermediary OrderedKeys object.\n\nNote: Java generics information - io.deephaven.util.annotations.@FinalDefault\n\n:param context: io.deephaven.db.v2.sources.chunk.ChunkSource.GetContext\n:param firstKey: long\n:param lastKey: long\n:return: io.deephaven.db.v2.sources.chunk.Chunk<? extends ChunkPage.ATTR>",
  "getChunkOffset": "Note: Java generics information - io.deephaven.util.annotations.@FinalDefault\n\n:param row: long\n:return: (int) The offset into the chunk for this row.",
  "getChunkType": "Get the most suitable ChunkType for use with this ColumnSource.\n\n:return: (io.deephaven.db.v2.sources.chunk.ChunkType) The ChunkType",
  "length": "Note: Java generics information - io.deephaven.util.annotations.@FinalDefault\n\n:return: (long) the length of this page.",
  "maxRow": "The maxRow is the greatest possible row which may reference this ChunkSource.  This method is\n used by PagingChunkSource.fillChunkAppend(FillContext, WritableChunk, OrderedKeys.Iterator) to determine which of its\n OrderedKeys are referencing this PagingChunkSource.\nThe default implementation assumes that only one PagingChunkSource exits for each page reference.\n That is, there is only one PagingChunkSource for OrderedKeys with the same bits outside of\n PagingChunkSource.mask().\nIt is also possible to pack multiple, non-overlapping PagingChunkSources into the same page reference.\n In this case, one typically will want to override maxRow.  An example such implementation is\n ChunkPage.\n\nNote: Java generics information - io.deephaven.util.annotations.@FinalDefault\n\n:param row: long\n:return: (long) the maximum last row of this page, located in the same way as row."
 },
 "path": "io.deephaven.db.v2.sources.chunk.page.ChunkPage",
 "typeName": "interface"
}