{
 "className": "io.deephaven.db.v2.hashing.HashMapBase",
 "methods": {
  "adjustOrPutValue": ":param key: long\n:param adjust_amount: long\n:param put_amount: long\n:return: long",
  "adjustValue": ":param key: long\n:param amount: long\n:return: boolean",
  "containsKey": ":param key: long\n:return: boolean",
  "containsValue": ":param val: long\n:return: boolean",
  "forEachEntry": ":param procedure: gnu.trove.procedure.TLongLongProcedure\n:return: boolean",
  "forEachKey": ":param procedure: gnu.trove.procedure.TLongProcedure\n:return: boolean",
  "forEachValue": ":param procedure: gnu.trove.procedure.TLongProcedure\n:return: boolean",
  "getNoEntryKey": ":return: long",
  "getNoEntryValue": ":return: long",
  "increment": ":param key: long\n:return: boolean",
  "isEmpty": ":return: boolean",
  "keySet": ":return: gnu.trove.set.TLongSet",
  "putAll": "*Overload 1*  \n  :param map: java.util.Map<? extendsjava.lang.Long,? extendsjava.lang.Long>\n  \n*Overload 2*  \n  :param map: gnu.trove.map.TLongLongMap",
  "retainEntries": ":param procedure: gnu.trove.procedure.TLongLongProcedure\n:return: boolean",
  "size": ":return: int",
  "transformValues": ":param function: gnu.trove.function.TLongFunction",
  "valueCollection": ":return: gnu.trove.TLongCollection"
 },
 "path": "io.deephaven.db.v2.hashing.HashMapBase",
 "typeName": "class"
}