{
 "className": "io.deephaven.db.v2.sort.findruns.FindRunsKernel",
 "methods": {
  "findRuns": "**Incompatible overloads text - text from the first overload:**\n\nFind runs of identical values in a sorted chunk.  This is used as part of an overall sort, after the timsort\n (or other sorting) kernel to identify the runs that must be sorted according to secondary keys.\n\n*Overload 1*  \n  :param sortedValues: (io.deephaven.db.v2.sources.chunk.Chunk) - a chunk of sorted values\n  :param offsetsOut: (io.deephaven.db.v2.sources.chunk.WritableIntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkPositions>) - an output chunk, with offsets of starting locations that a run occurred\n  :param lengthsOut: (io.deephaven.db.v2.sources.chunk.WritableIntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkLengths>) - an output chunk, parallel to offsetsOut, with the lengths of found runs\n  \n*Overload 2*  \n  :param sortedValues: (io.deephaven.db.v2.sources.chunk.Chunk) - a chunk of sorted values\n  :param offsetsIn: (io.deephaven.db.v2.sources.chunk.IntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkPositions>) - the offsets within the chunk to check for runs\n  :param lengthsIn: (io.deephaven.db.v2.sources.chunk.IntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkLengths>) - the lengths parallel to offsetsIn for run checking\n  :param offsetsOut: (io.deephaven.db.v2.sources.chunk.WritableIntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkPositions>) - an output chunk, with offsets of starting locations that a run occurred\n  :param lengthsOut: (io.deephaven.db.v2.sources.chunk.WritableIntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkLengths>) - an output chunk, parallel to offsetsOut, with the lengths of found runs\n  \n   Note, that lengthsIn must contain values greater than 1, and lengthsOut additionally only contain values greater than one",
  "findRunsSingles": "Find runs of identical values in a sorted chunk.\n\n Runs of a single values are included.\n\n:param sortedValues: (io.deephaven.db.v2.sources.chunk.Chunk) - a chunk of sorted values\n:param offsetsOut: (io.deephaven.db.v2.sources.chunk.WritableIntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkPositions>) - an output chunk, with offsets of starting locations that a run occurred\n:param lengthsOut: (io.deephaven.db.v2.sources.chunk.WritableIntChunk<io.deephaven.db.v2.sources.chunk.Attributes.ChunkLengths>) - an output chunk, parallel to offsetsOut, with the lengths of found runs",
  "makeContext": ":param chunkType: io.deephaven.db.v2.sources.chunk.ChunkType\n:return: io.deephaven.db.v2.sort.findruns.FindRunsKernel"
 },
 "path": "io.deephaven.db.v2.sort.findruns.FindRunsKernel",
 "typeName": "interface"
}