{
 "className": "io.deephaven.db.v2.sources.chunk.ChunkChunk",
 "methods": {
  "asBooleanChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.BooleanChunkChunk<ChunkChunk.ATTR>",
  "asByteChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.ByteChunkChunk<ChunkChunk.ATTR>",
  "asCharChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.CharChunkChunk<ChunkChunk.ATTR>",
  "asDoubleChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.DoubleChunkChunk<ChunkChunk.ATTR>",
  "asFloatChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.FloatChunkChunk<ChunkChunk.ATTR>",
  "asIntChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.IntChunkChunk<ChunkChunk.ATTR>",
  "asLongChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.LongChunkChunk<ChunkChunk.ATTR>",
  "asObjectChunkChunk": "Note: Java generics information - <T>\n\n:return: io.deephaven.db.v2.sources.chunk.ObjectChunkChunk<T,ChunkChunk.ATTR>",
  "asShortChunkChunk": ":return: io.deephaven.db.v2.sources.chunk.ShortChunkChunk<ChunkChunk.ATTR>",
  "getChunk": ":param pos: int\n:return: io.deephaven.db.v2.sources.chunk.Chunk<ChunkChunk.ATTR>",
  "size": ":return: int",
  "slice": ":param offset: int\n:param capacity: int\n:return: io.deephaven.db.v2.sources.chunk.ChunkChunk<ChunkChunk.ATTR>"
 },
 "path": "io.deephaven.db.v2.sources.chunk.ChunkChunk",
 "typeName": "interface"
}