{
 "className": "io.deephaven.db.v2.locations.parquet.topage.ToPage",
 "methods": {
  "convertResult": ":param result: java.lang.Object\n:return: (ToPage.RESULT) Produce the array of values from the result",
  "getChunkType": ":return: (io.deephaven.db.v2.sources.chunk.ChunkType) The chunk type used to wrap the arrays produced by this object.",
  "getDictionary": ":return: (io.deephaven.db.v2.sources.chunk.Chunk<ToPage.ATTR>) the dictionary stored for this column, if one exists, otherwise null.",
  "getDictionaryKeysToPage": ":return: (io.deephaven.db.v2.locations.parquet.topage.ToPage<io.deephaven.db.v2.sources.chunk.Attributes.DictionaryKeys,long[]>) an object implementing ToChunk which will read the integral Dictionary Keys when there's a dictionary\n for this column (as opposed to the values, which this object's toChunk will return.).  This will return null iff\n getDictionary returns null.",
  "getNativeComponentType": ":return: (java.lang.Class<?>) The native type for the elements of db arrays produced by this object.",
  "getNativeType": ":return: (java.lang.Class<?>) The native type for the elements of the arrays produced by this object.",
  "getResult": ":param columnPageReader: io.deephaven.parquet.ColumnPageReader\n:return: (java.lang.Object) Gets the result from the columnPageReader.",
  "getReversibleLookup": ":return: (io.deephaven.db.v2.sources.StringSetImpl.ReversibleLookup) an reverse lookup map of the dictionary.",
  "makeDbArray": ":param result: ToPage.RESULT\n:return: (io.deephaven.db.tables.dbarrays.DbArrayBase) the method to create a DBArray from RESULT.",
  "nullValue": ":return: (java.lang.Object) The null value stored in the elements of the arrays produced by thus object.",
  "toPage": "Produce the appropriately typed chunk page for the page read by the columnPageReader.  The is the expected entry\n point for the ColumnChunkPageStore.\n\n:param offset: long\n:param columnPageReader: io.deephaven.parquet.ColumnPageReader\n:param mask: long\n:return: io.deephaven.db.v2.sources.chunk.page.ChunkPage<ToPage.ATTR>"
 },
 "path": "io.deephaven.db.v2.locations.parquet.topage.ToPage",
 "text": "This provides a translation layer from the parquet results into the appropriately typed Chunk's.",
 "typeName": "interface"
}