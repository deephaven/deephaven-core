{
 "className": "io.deephaven.db.v2.utils.Index$SequentialBuilder",
 "methods": {
  "appendIndex": ":param idx: io.deephaven.db.v2.utils.ReadOnlyIndex",
  "appendIndexWithOffset": "Appends the index shifted by the provided offset to this builder.\n\n:param idx: (io.deephaven.db.v2.utils.ReadOnlyIndex) - The index to append.\n:param offset: (long) - An offset to apply to every range in the index.",
  "appendKey": ":param key: long",
  "appendKeys": ":param it: java.util.PrimitiveIterator.OfLong",
  "appendOrderedKeyIndicesChunk": ":param chunk: io.deephaven.db.v2.sources.chunk.LongChunk<io.deephaven.db.v2.sources.chunk.Attributes.OrderedKeyIndices>",
  "appendOrderedKeyRangesChunk": ":param chunk: io.deephaven.db.v2.sources.chunk.LongChunk<io.deephaven.db.v2.sources.chunk.Attributes.OrderedKeyRanges>",
  "appendOrderedKeys": ":param orderedKeys: io.deephaven.db.v2.utils.OrderedKeys",
  "appendRange": ":param rangeFirstKey: long\n:param rangeLastKey: long",
  "appendRanges": ":param it: io.deephaven.db.v2.utils.LongRangeIterator",
  "execute": ":param value: long\n:return: boolean",
  "getIndex": ":return: io.deephaven.db.v2.utils.Index",
  "setDomain": "No obligation to call, but if called, (a) should be called before providing any values, and (b) no value\n should be provided outside of the domain. Implementations may be able to use this information to improve\n memory utilization. Either of the arguments may be given as Index.NULL_KEY, indicating that the respective\n value is not known.\n\n:param minKey: (long) - the minimum key to be provided, or Index.NULL_KEY if not known.\n:param maxKey: (long) - the maximum key to be provided, or Index.NULL_KEY if not known."
 },
 "path": "io.deephaven.db.v2.utils.Index.SequentialBuilder",
 "typeName": "interface"
}