{
 "className": "io.deephaven.db.v2.select.DbArrayChunkAdapter",
 "methods": {
  "fillChunk": "Populates the given destination chunk with data corresponding to the keys from the given OrderedKeys.\n\n:param context: (io.deephaven.db.v2.sources.chunk.ChunkSource.FillContext) - A context containing all mutable/state related data used in retrieving the Chunk.\n:param destination: (io.deephaven.db.v2.sources.chunk.WritableChunk<? superDbArrayChunkAdapter.ATTR>) - The chunk to be populated according to orderedKeys. No assumptions shall be made about\n        the size of the chunk shall be made. The chunk will be populated from position [0,orderedKeys.size()).\n:param orderedKeys: (io.deephaven.db.v2.utils.OrderedKeys) - An OrderedKeys representing the keys to be fetched",
  "getChunkType": "Get the most suitable ChunkType for use with this ChunkSource.\n\n:return: (io.deephaven.db.v2.sources.chunk.ChunkType) The ChunkType",
  "makeFillContext": "Allocate a new ChunkSource.FillContext for filling chunks from this FillContextMaker, typically a\n ChunkSource.\n\n:param chunkCapacity: (int) - The maximum size of any WritableChunk that will be filled with this context\n:param sharedContext: (io.deephaven.db.v2.sources.chunk.SharedContext) - Shared store of intermediate results.\n:return: (io.deephaven.db.v2.sources.chunk.ChunkSource.FillContext) A context for use with fill operations"
 },
 "path": "io.deephaven.db.v2.select.DbArrayChunkAdapter",
 "text": "This class wraps an inner ChunkSource holding a DbArray. The purpose of doing so is to apply DbArray#getDirect to the\n underlying DbArray values returned by the underlying ChunkSource. This is the strategy for implementing this class:\n makeGetContext() - doesn't need to change. The default implementation in our parent, namely\n DefaultChunkSource#makeGetContext, already does the right thing. getChunk() - likewise. makeFillContext() - We don't\n need to add anything to the \"inner\" context, so we just delegate to inner and return its context fillContext() - We\n first let the inner fill the chunk, then we overwrite each value (where non-null) with the result of\n DbArrayBase#getDirect() invoked on that value.",
 "typeName": "class"
}