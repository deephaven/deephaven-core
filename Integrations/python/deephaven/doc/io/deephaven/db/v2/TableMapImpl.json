{
 "className": "io.deephaven.db.v2.TableMapImpl",
 "methods": {
  "addKeyListener": "Listen to changes in the map's keys.\n\n:param listener: (io.deephaven.db.v2.TableMap.KeyListener) - key change listener",
  "addListener": "Add a new listener for changes to the map.\n\n:param listener: (io.deephaven.db.v2.TableMap.Listener) - map change listener",
  "addParentReference": "Called on a dependent node to ensure that a strong reference is maintained to any parent object that is required\n for the proper maintenance and functioning of the dependent.\n\n In the most common case, the parent object is a child listener to a parent node. The parent node only keeps a\n weak reference to its child listener, but the listener maintains a strong reference to the parent node. In this\n scenario, the only strong reference to the listener (and thus indirectly to the parent node itself) is the\n reference kept by the dependent node.\n\n:param parent: (java.lang.Object) - A parent of this node",
  "isRefreshing": "Is the node updating?\n\n:return: (boolean) true if the node is updating; false otherwise.",
  "removeKeyListener": "Removes a key change listener.\n\n:param listener: (io.deephaven.db.v2.TableMap.KeyListener) - key change listener to remove",
  "removeListener": "Removes a map change listener.\n\n:param listener: (io.deephaven.db.v2.TableMap.Listener) - map change listener.",
  "setRefreshing": "Change the node's refresh mode.\n\n:param refreshing: (boolean) - true to cause the node to update; false otherwise.\n:return: (boolean) new refreshing state"
 },
 "path": "io.deephaven.db.v2.TableMapImpl",
 "typeName": "class"
}