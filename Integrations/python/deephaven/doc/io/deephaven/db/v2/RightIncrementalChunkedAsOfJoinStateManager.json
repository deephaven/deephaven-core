{
 "className": "io.deephaven.db.v2.RightIncrementalChunkedAsOfJoinStateManager",
 "methods": {
  "buildAdditions": ":param isLeftSide: boolean\n:param additions: io.deephaven.db.v2.utils.Index\n:param sources: io.deephaven.db.v2.sources.ColumnSource<?>[]\n:param slots: io.deephaven.db.v2.sources.LongArraySource\n:param sequentialBuilders: io.deephaven.db.v2.sources.ObjectArraySource<io.deephaven.db.v2.utils.Index.SequentialBuilder>\n:return: int",
  "doRehash": ":param bc: io.deephaven.db.v2.RightIncrementalChunkedAsOfJoinStateManager.BuildContext\n:param addedSlots: io.deephaven.db.v2.sources.LongArraySource",
  "gatherModifications": ":param restampAdditions: io.deephaven.db.v2.utils.Index\n:param sources: io.deephaven.db.v2.sources.ColumnSource<?>[]\n:param slots: io.deephaven.db.v2.sources.LongArraySource\n:param sequentialBuilders: io.deephaven.db.v2.sources.ObjectArraySource<io.deephaven.db.v2.utils.Index.SequentialBuilder>\n:return: int",
  "gatherShiftIndex": ":param restampAdditions: io.deephaven.db.v2.utils.Index\n:param sources: io.deephaven.db.v2.sources.ColumnSource<?>[]\n:param slots: io.deephaven.db.v2.sources.LongArraySource\n:param sequentialBuilders: io.deephaven.db.v2.sources.ObjectArraySource<io.deephaven.db.v2.utils.Index.SequentialBuilder>\n:return: int",
  "getLeftIndex": ":param slot: long\n:return: io.deephaven.db.v2.utils.Index",
  "getLeftSsa": "*Overload 1*  \n  :param slot: long\n  :return: io.deephaven.db.v2.ssa.SegmentedSortedArray\n  \n*Overload 2*  \n  :param slot: long\n  :param ssaFactory: java.util.function.Function<io.deephaven.db.v2.utils.Index,io.deephaven.db.v2.ssa.SegmentedSortedArray>\n  :return: io.deephaven.db.v2.ssa.SegmentedSortedArray",
  "getLeftSsaOrIndex": ":param slot: long\n:param indexOutput: org.apache.commons.lang3.mutable.MutableObject<io.deephaven.db.v2.utils.Index>\n:return: io.deephaven.db.v2.ssa.SegmentedSortedArray",
  "getOverflowSize": ":return: int",
  "getRightIndex": ":param slot: long\n:return: io.deephaven.db.v2.utils.Index",
  "getRightSsa": "*Overload 1*  \n  :param slot: long\n  :param ssaFactory: java.util.function.Function<io.deephaven.db.v2.utils.Index,io.deephaven.db.v2.ssa.SegmentedSortedArray>\n  :return: io.deephaven.db.v2.ssa.SegmentedSortedArray\n  \n*Overload 2*  \n  :param slot: long\n  :return: io.deephaven.db.v2.ssa.SegmentedSortedArray",
  "getRightSsaOrIndex": ":param slot: long\n:param indexOutput: org.apache.commons.lang3.mutable.MutableObject<io.deephaven.db.v2.utils.Index>\n:return: io.deephaven.db.v2.ssa.SegmentedSortedArray",
  "getState": ":param slot: long\n:return: byte",
  "getTableSize": ":return: int",
  "markForRemoval": ":param restampRemovals: io.deephaven.db.v2.utils.Index\n:param sources: io.deephaven.db.v2.sources.ColumnSource<?>[]\n:param slots: io.deephaven.db.v2.sources.LongArraySource\n:param sequentialBuilders: io.deephaven.db.v2.sources.ObjectArraySource<io.deephaven.db.v2.utils.Index.SequentialBuilder>\n:return: int",
  "probeAdditions": ":param restampAdditions: io.deephaven.db.v2.utils.Index\n:param sources: io.deephaven.db.v2.sources.ColumnSource<?>[]\n:param slots: io.deephaven.db.v2.sources.LongArraySource\n:param sequentialBuilders: io.deephaven.db.v2.sources.ObjectArraySource<io.deephaven.db.v2.utils.Index.SequentialBuilder>\n:return: int",
  "rehashRequired": ":return: boolean",
  "setLeftIndex": ":param slot: long\n:param index: io.deephaven.db.v2.utils.Index",
  "setRightIndex": ":param slot: long\n:param index: io.deephaven.db.v2.utils.Index"
 },
 "path": "io.deephaven.db.v2.RightIncrementalChunkedAsOfJoinStateManager",
 "typeName": "class"
}