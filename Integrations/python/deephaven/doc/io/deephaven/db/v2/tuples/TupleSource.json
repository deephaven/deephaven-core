{
 "className": "io.deephaven.db.v2.tuples.TupleSource",
 "methods": {
  "createPreviousTuple": "Create a tuple for previous key column values at the supplied index key.\n\n:param indexKey: (long) - The index key\n:return: (TupleSource.TUPLE_TYPE) The resulting tuple",
  "createTuple": "Create a tuple for key column values at the supplied index key.\n\n:param indexKey: (long) - The index key\n:return: (TupleSource.TUPLE_TYPE) The resulting tuple",
  "createTupleFromReinterpretedValues": "Create a tuple for the supplied reinterpreted values (e.g., those that come from the getColumnSources after a\n reinterpretation by TupleSourceFactory).\n\n:param values: (java.lang.Object...) - The values\n:return: (TupleSource.TUPLE_TYPE) The resulting tuple",
  "createTupleFromValues": "Create a tuple for the supplied (boxed) values.\n\n:param values: (java.lang.Object...) - The values\n:return: (TupleSource.TUPLE_TYPE) The resulting tuple",
  "getColumnSources": "Get the ColumnSources backing this tuple source.\n\n:return: (java.util.List<io.deephaven.db.v2.sources.ColumnSource>) The column sources"
 },
 "path": "io.deephaven.db.v2.tuples.TupleSource",
 "text": "Factory to produce immutable tuples from a long key in Index space.",
 "typeName": "interface"
}