{
 "className": "io.deephaven.db.v2.select.ChunkFilter$ObjectChunkFilter",
 "methods": {
  "filter": "Filter a chunk of values, setting parallel values in results to \"true\" or \"false\".\n\n The results chunk must have capacity at least as large as values.size(); and the result size will be set to\n values.size() on return.\n\n*Overload 1*  \n  :param values: io.deephaven.db.v2.sources.chunk.ObjectChunk<ChunkFilter.ObjectChunkFilter.T,? extendsio.deephaven.db.v2.sources.chunk.Attributes.Values>\n  :param keys: io.deephaven.db.v2.sources.chunk.LongChunk<io.deephaven.db.v2.sources.chunk.Attributes.OrderedKeyIndices>\n  :param results: io.deephaven.db.v2.sources.chunk.WritableLongChunk<io.deephaven.db.v2.sources.chunk.Attributes.OrderedKeyIndices>\n  \n*Overload 2*  \n  :param values: (io.deephaven.db.v2.sources.chunk.Chunk<? extendsio.deephaven.db.v2.sources.chunk.Attributes.Values>) - the values to filter\n  :param keys: io.deephaven.db.v2.sources.chunk.LongChunk<io.deephaven.db.v2.sources.chunk.Attributes.OrderedKeyIndices>\n  :param results: (io.deephaven.db.v2.sources.chunk.WritableLongChunk<io.deephaven.db.v2.sources.chunk.Attributes.OrderedKeyIndices>) - a boolean chunk with true values for items that match the filter, and false otherwise"
 },
 "path": "io.deephaven.db.v2.select.ChunkFilter.ObjectChunkFilter",
 "typeName": "interface"
}