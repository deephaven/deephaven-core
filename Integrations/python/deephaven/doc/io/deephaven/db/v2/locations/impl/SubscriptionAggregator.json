{
 "className": "io.deephaven.db.v2.locations.impl.SubscriptionAggregator",
 "methods": {
  "activationFailed": "Deliver an exception triggered while activating or maintaining the underlying data source. The underlying data\n source is implicitly deactivated. This is public because it is called externally by services implementing\n subscriptions.\n\nNote: Java generics information - <T>\n\n:param token: (T) - A subscription-related object that the subclass can use to match a notification\n:param exception: (io.deephaven.db.v2.locations.TableDataException) - The exception",
  "activationSuccessful": "Notify the implementation that activation has completed. This may be invoked upon \"re-activation\" of an existing\n subscription, in which case it is effectively a no-op. This is public because it is called externally by services\n implementing subscriptions.\n\nNote: Java generics information - <T>\n\n:param token: (T) - A subscription-related object that the subclass can use to match a notification",
  "checkHasSubscribers": "Check if this subscription aggregator still has any valid subscribers - useful if there may have been no\n notifications delivered for some time, as a test to determine whether work should be done to maintain the\n underlying subscription.\n\n:return: (boolean) true if there are valid subscribers, else false",
  "subscribe": ":param listener: SubscriptionAggregator.LISTENER_TYPE",
  "supportsSubscriptions": ":return: boolean",
  "unsubscribe": ":param listener: SubscriptionAggregator.LISTENER_TYPE"
 },
 "path": "io.deephaven.db.v2.locations.impl.SubscriptionAggregator",
 "text": "Implement optional subscription support suitable for multiple TableDataService components.",
 "typeName": "class"
}