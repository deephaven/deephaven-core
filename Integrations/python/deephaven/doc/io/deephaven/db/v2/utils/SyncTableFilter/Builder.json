{
 "className": "io.deephaven.db.v2.utils.SyncTableFilter$Builder",
 "methods": {
  "addTable": "**Incompatible overloads text - text from the first overload:**\n\nAdd a table to the set of tables to be synchronized, using this builder's default ID and key column names.\n\n*Overload 1*  \n  :param name: (java.lang.String) - the key of the Table in our output TableMap.\n  :param table: (io.deephaven.db.tables.Table) - the Table to add\n  :param idColumn: (java.lang.String) - the name of the ID column in the table, must be a long\n  :param keyColumns: (java.lang.String...) - the key columns, each key is coordinated independently of the other keys\n  :return: (io.deephaven.db.v2.utils.SyncTableFilter.Builder) this builder\n  \n*Overload 2*  \n  :param name: (java.lang.String) - the key of the Table in our output TableMap.\n  :param table: (io.deephaven.db.tables.Table) - the Table to add\n  :return: (io.deephaven.db.v2.utils.SyncTableFilter.Builder) this builder",
  "addTableMap": "Add a TableMap to the set of TableMaps to be synchronized.\n\n*Overload 1*  \n  :param name: (java.lang.String) - the key of the Table in our output TableMap.\n  :param tableMap: (io.deephaven.db.v2.TableMap) - the TableMap to add\n  :return: (io.deephaven.db.v2.utils.SyncTableFilter.Builder) this builder\n  \n*Overload 2*  \n  :param name: (java.lang.String) - the key of the Table in our output TableMap.\n  :param tableMap: (io.deephaven.db.v2.TableMap) - the TableMap to add\n  :param idColumn: (java.lang.String) - the name of the ID column in the table, must be a long\n  :param keyColumns: (java.lang.String...) - the key columns, each key is coordinated independently of the other keys\n  :return: (io.deephaven.db.v2.utils.SyncTableFilter.Builder) this builder",
  "build": "Instantiate the TableMap of synchronized tables.\n\n This must be called under the LiveTableMonitor lock.\n\n:return: (io.deephaven.db.v2.TableMap) a TableMap with one entry for each input table",
  "defaultId": "Set the default ID column name.\n\n:param id: (java.lang.String) - the new default ID column name\n:return: (io.deephaven.db.v2.utils.SyncTableFilter.Builder) this builder",
  "defaultKeys": "Set the default key column name.\n\n:param keys: (java.lang.String...) - the new default key column names\n:return: (io.deephaven.db.v2.utils.SyncTableFilter.Builder) this builder"
 },
 "path": "io.deephaven.db.v2.utils.SyncTableFilter.Builder",
 "text": "Produce a TableMap of synchronized tables.\n\n \n You may include either Tables or TableMaps, but not both. When Tables are included, the result of the build call\n is a TableMap with a String key that corresponds to the name of the input table. When TableMaps are added, the\n result is a TableMap with composite keys (SmartKeys) that are prefixed with the keys from the input TableMap,\n with a last element that is the name of the source passed to the builder.",
 "typeName": "class"
}