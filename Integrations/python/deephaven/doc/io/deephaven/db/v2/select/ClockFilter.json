{
 "className": "io.deephaven.db.v2.select.ClockFilter",
 "methods": {
  "filter": "Filter selection to only matching rows.\n\n:param selection: (io.deephaven.db.v2.utils.Index) - the indices that should be filtered. The selection must be a subset of fullSet; and may not\n        include rows that the engine determines need not be evaluated to produce the result.\n:param fullSet: (io.deephaven.db.v2.utils.Index) - the complete Index of the table to filter. The fullSet is used for calculating variables like \"i\"\n        or \"ii\".\n:param table: (io.deephaven.db.tables.Table) - the table to filter\n:param usePrev: (boolean) - true if previous values should be used. Implementing previous value filtering is optional, and a\n        SelectFilter.PreviousFilteringNotSupported exception may be thrown. If a PreviousFiltering exception is thrown,\n        then the caller must acquire the LiveTableMonitor lock.\n:return: (io.deephaven.db.v2.utils.Index) the subset of selection accepted by this filter",
  "getColumnArrays": "Get the array columns required by this select filter.\n\n:return: (java.util.List<java.lang.String>) the columns used as array input by this select filter.",
  "getColumns": "Get the columns required by this select filter.\n\n:return: (java.util.List<java.lang.String>) the columns used as input by this select filter.",
  "init": "Initialize this select filter given the table definition\n\n:param tableDefinition: (io.deephaven.db.tables.TableDefinition) - the definition of the table that will be filtered",
  "isRefreshing": "Is this filter refreshing?\n\n:return: (boolean) if this filter is refreshing",
  "isSimpleFilter": ":return: (boolean) true if this is a filter that does not require any code execution, but rather is handled entirely within\n         the database engine.",
  "refresh": "Refresh this LiveTable.",
  "setRecomputeListener": "Set the Listener that should be notified if results based on this filter must be recomputed.\n\n:param listener: (io.deephaven.db.v2.select.SelectFilter.RecomputeListener) - the listener to notify."
 },
 "path": "io.deephaven.db.v2.select.ClockFilter",
 "text": "Boilerplate super-class for various clock-oriented filters.",
 "typeName": "class"
}