{
 "className": "io.deephaven.db.v2.sources.chunk.ChunkSource",
 "methods": {
  "fillChunk": "Populates the given destination chunk with data corresponding to the keys from the given OrderedKeys.\n\n:param context: (io.deephaven.db.v2.sources.chunk.ChunkSource.FillContext) - A context containing all mutable/state related data used in retrieving the Chunk.\n:param destination: (io.deephaven.db.v2.sources.chunk.WritableChunk<? superChunkSource.ATTR>) - The chunk to be populated according to orderedKeys.  No assumptions shall be made\n                    about the size of the chunk shall be made.  The chunk will be populated from position\n                    [0,orderedKeys.size()).\n:param orderedKeys: (io.deephaven.db.v2.utils.OrderedKeys) - An OrderedKeys representing the keys to be fetched",
  "getChunk": "**Incompatible overloads text - text from the first overload:**\n\nReturns a chunk of data corresponding to the keys from the given OrderedKeys.\n\n*Overload 1*  \n  :param context: (io.deephaven.db.v2.sources.chunk.ChunkSource.GetContext) - A context containing all mutable/state related data used in retrieving the Chunk.\n                      In particular, the Context may be used to provide a Chunk data pool\n  :param orderedKeys: (io.deephaven.db.v2.utils.OrderedKeys) - An OrderedKeys representing the keys to be fetched\n  :return: (io.deephaven.db.v2.sources.chunk.Chunk<? extends ChunkSource.ATTR>) A chunk of data corresponding to the keys from the given OrderedKeys\n  \n*Overload 2*  \n  :param context: (io.deephaven.db.v2.sources.chunk.ChunkSource.GetContext) - A context containing all mutable/state related data used in retrieving the Chunk.\n                      In particular, the Context may be used to provide a Chunk data pool\n  :param firstKey: (long) - The beginning key (inclusive) of the range to fetch in the chunk\n  :param lastKey: (long) - The last key (inclusive) of the range to fetch in the chunk\n  :return: io.deephaven.db.v2.sources.chunk.Chunk<? extends ChunkSource.ATTR>",
  "getChunkType": "Get the most suitable ChunkType for use with this ChunkSource.\n\n:return: (io.deephaven.db.v2.sources.chunk.ChunkType) The ChunkType"
 },
 "path": "io.deephaven.db.v2.sources.chunk.ChunkSource",
 "typeName": "interface"
}