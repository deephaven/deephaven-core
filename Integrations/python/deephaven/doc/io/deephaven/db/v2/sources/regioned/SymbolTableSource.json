{
 "className": "io.deephaven.db.v2.sources.regioned.SymbolTableSource",
 "methods": {
  "getStaticSymbolTable": "Get a static Table view of this SymbolTableSource's symbol table, providing a many:1 or 1:1 mapping of\n unique long identifiers to the symbol values in this source.\n\n:param sourceIndex: (io.deephaven.db.v2.utils.ReadOnlyIndex) - The ReadOnlyIndex whose keys must be mappable via the result Table's\n                         identifier column\n:param useLookupCaching: (boolean) - Hint whether symbol lookups performed to generate the symbol table should apply caching.\n                         Implementations may ignore this hint.\n:return: (io.deephaven.db.tables.Table) The symbol table",
  "getSymbolTable": "Get a Table view of this SymbolTableSource's symbol table, providing a many:1 or 1:1 mapping of unique\n long identifiers to the symbol values in this source.\n\n The result will be refreshing if table is a refreshing DynamicTable.\n\n:param sourceTable: (io.deephaven.db.v2.QueryTable) - The QueryTable whose Index keys must be mappable via the result\n                         Table's identifier column\n:param useLookupCaching: (boolean) - Hint whether symbol lookups performed to generate the symbol table should apply caching.\n                         Implementations may ignore this hint.\n:return: (io.deephaven.db.tables.Table) The symbol table",
  "hasSymbolTable": ":param sourceIndex: (io.deephaven.db.v2.utils.ReadOnlyIndex) - The ReadOnlyIndex whose keys must be mappable\n:return: (boolean) Whether this SymbolTableSource can provide a symbol table that covers all keys in sourceIndex."
 },
 "path": "io.deephaven.db.v2.sources.regioned.SymbolTableSource",
 "text": "Interface for ColumnSources that can provide a Table view of their\n symbol tables, providing a many:1 or 1:1 mapping of unique long identifiers to the symbol values in this\n source.\n Such sources are also expected to be reinterpretable (ColumnSource.allowsReinterpret(Class)) as\n long ColumnSources of the same identifiers.",
 "typeName": "interface"
}