{
 "className": "io.deephaven.db.v2.by.DistinctStateFactory",
 "methods": {
  "countNulls": ":return: boolean",
  "getChunkedOperator": ":param type: java.lang.Class\n:param name: java.lang.String\n:param exposeInternalColumns: boolean\n:return: io.deephaven.db.v2.by.IterativeChunkedAggregationOperator",
  "getMemoKey": "Produces a MemoKey for this aggregation state factory.\n\n If two AggregationStateFactories have equal memoKeys, then Table.by(io.deephaven.db.v2.by.AggregationStateFactory, io.deephaven.db.v2.select.SelectColumn...) operations that have the same\n group by columns may be memoized.  In that case instead of recomputing the result; the original result will be\n used.\nIf null is returned, the operation will not be memoized.\n\n:return: (io.deephaven.db.v2.by.AggregationMemoKey) an AggregationMemoKey, null if this operation can not be memoized."
 },
 "path": "io.deephaven.db.v2.by.DistinctStateFactory",
 "text": "An Iterative state factory that computes the count of distinct items within a particular state.\n It supports rollups, and converts itself into a Sum at the second level of the rollup.",
 "typeName": "class"
}