{
 "className": "io.deephaven.db.v2.by.ssmcountdistinct.SsmBackedColumnSource",
 "methods": {
  "clear": "Set the SSM at the specified key to null\n\n:param key: (long) - the key to get the ssm for.",
  "clearDeltas": "Clear out any tracked deltas from recent computations.\n\n:param indices: (io.deephaven.db.v2.utils.Index) - the set of indices to clear deltas for.",
  "create": "Create an appropriate instance for the specified type\n\n:param type: (java.lang.Class<?>) - \n:return: io.deephaven.db.v2.by.ssmcountdistinct.SsmBackedColumnSource",
  "ensureCapacity": "Ensure the source has at least `capacity` capacity\n\n:param capacity: (long) - the capacity to ensure.",
  "getCurrentSsm": "Get the current SSM at the specified key. This does not permute it in any way.\n\n:param key: (long) - the key to get the ssm for.\n:return: (SsmBackedColumnSource.K) the SSM",
  "getOrCreate": "Get the ssm at the specified key, creating one if none existed. This method will update the current previous\n tracking state of the SSM.\n\n:param key: (long) - the key to get the ssm for.\n:return: (SsmBackedColumnSource.K) the SSM at the key, or a new one.",
  "getUnderlyingSource": ":return: io.deephaven.db.v2.sources.ObjectArraySource<SsmBackedColumnSource.K>"
 },
 "path": "io.deephaven.db.v2.by.ssmcountdistinct.SsmBackedColumnSource",
 "text": "A ColumnSource that provides DBArrays of type T, backed by a same typed\n SegmentedSortedMultiSet.",
 "typeName": "interface"
}