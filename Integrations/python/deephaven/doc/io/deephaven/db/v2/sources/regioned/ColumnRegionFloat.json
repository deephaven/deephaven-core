{
 "className": "io.deephaven.db.v2.sources.regioned.ColumnRegionFloat",
 "methods": {
  "createNull": "Note: Java generics information - <ATTR extends io.deephaven.db.v2.sources.chunk.Attributes.Any>\n\n:return: io.deephaven.db.v2.sources.regioned.ColumnRegionFloat.Null<ATTR>",
  "getFloat": "Get a single float from this region.\n\n*Overload 1*  \n  :param elementIndex: (long) - Element (float) index in the table's address space\n  :return: (float) The float value at the specified element (float) index\n  \n*Overload 2*  \n  :param context: (io.deephaven.db.v2.sources.chunk.ChunkSource.FillContext) - A ColumnRegionFillContext to enable resource caching where suitable, with current\n                       region index pointing to this region\n  :param elementIndex: (long) - Element (float) index in the table's address space\n  :return: (float) The float value at the specified element (float) index",
  "getNativeType": ":return: java.lang.Class<?>"
 },
 "path": "io.deephaven.db.v2.sources.regioned.ColumnRegionFloat",
 "text": "Column region interface for regions that support fetching primitive floats.",
 "typeName": "interface"
}