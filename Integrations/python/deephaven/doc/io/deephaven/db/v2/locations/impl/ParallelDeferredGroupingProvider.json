{
 "className": "io.deephaven.db.v2.locations.impl.ParallelDeferredGroupingProvider",
 "methods": {
  "addSource": "Add a column location for consideration when constructing groupings.\n\n:param columnLocation: (io.deephaven.db.v2.locations.ColumnLocation) - The column location to add\n:param firstKey: (long) - The first key in the range for this column location\n:param lastKey: (long) - The last key in the range for this column location (inclusive)",
  "getGroupToRange": "**Incompatible overloads text - text from the first overload:**\n\nReturns a grouping structure, possibly constructed on-demand.\n\n*Overload 1*  \n  :return: (java.util.Map<ParallelDeferredGroupingProvider.DATA_TYPE,io.deephaven.db.v2.utils.Index>) a Map from grouping keys to Indices, or null if the group could not be constructed\n  \n*Overload 2*  \n  :param hint: (io.deephaven.db.v2.utils.Index) - required indices within the resultant Map\n  :return: (io.deephaven.base.Pair<java.util.Map<ParallelDeferredGroupingProvider.DATA_TYPE,io.deephaven.db.v2.utils.Index>,java.lang.Boolean>) a Pair containing a Map from grouping keys to Indices, which includes at least the hint indices;\n   and a Boolean which indicates that the grouping is complete"
 },
 "path": "io.deephaven.db.v2.locations.impl.ParallelDeferredGroupingProvider",
 "text": "Grouping provider that loads column location metadata and assembles grouping indexes lazily on demand.",
 "typeName": "class"
}