{
 "className": "io.deephaven.db.v2.sources.chunk.ResettableWritableChunk",
 "methods": {
  "asResettableWritableBooleanChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableBooleanChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableByteChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableByteChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableCharChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableCharChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableDoubleChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableDoubleChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableFloatChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableFloatChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableIntChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableIntChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableLongChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableLongChunk<ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableObjectChunk": "Note: Java generics information - <T>\n\n:return: io.deephaven.db.v2.sources.chunk.ResettableWritableObjectChunk<T,ResettableWritableChunk.ATTR_BASE>",
  "asResettableWritableShortChunk": ":return: io.deephaven.db.v2.sources.chunk.ResettableWritableShortChunk<ResettableWritableChunk.ATTR_BASE>",
  "clear": "Reset this chunk to empty storage.\n\nNote: Java generics information - <ATTR extends ResettableWritableChunk.ATTR_BASE>\n\n:return: io.deephaven.db.v2.sources.chunk.WritableChunk<ATTR>",
  "resetFromArray": "**Incompatible overloads text - text from the first overload:**\n\nReset the data and bounds of this chunk to a range or sub-range of the specified array.\n\n*Overload 1*  \n  Note: Java generics information - <ATTR extends ResettableWritableChunk.ATTR_BASE>\n  \n  :param array: (java.lang.Object) - The array\n  :param offset: (int) - The offset into array\n  :param capacity: (int) - The capacity this should have after reset\n  :return: (io.deephaven.db.v2.sources.chunk.WritableChunk<ATTR>) this\n  \n*Overload 2*  \n  Note: Java generics information - <ATTR extends ResettableWritableChunk.ATTR_BASE>\n  \n  :param array: (java.lang.Object) - The array\n  :return: (io.deephaven.db.v2.sources.chunk.WritableChunk<ATTR>) this",
  "resetFromChunk": "Reset the data and bounds of this chunk to a range or sub-range of the specified WritableChunk.\n\nNote: Java generics information - <ATTR extends ResettableWritableChunk.ATTR_BASE>\n\n:param other: (io.deephaven.db.v2.sources.chunk.WritableChunk<ATTR>) - The other WritableChunk\n:param offset: (int) - The offset into other\n:param capacity: (int) - The capacity this should have after reset\n:return: (io.deephaven.db.v2.sources.chunk.WritableChunk<ATTR>) this"
 },
 "path": "io.deephaven.db.v2.sources.chunk.ResettableWritableChunk",
 "text": "WritableChunk that may have its backing storage reset to a slice of that belonging to another\n WritableChunk or a native array.",
 "typeName": "interface"
}