{
 "className": "io.deephaven.db.v2.locations.TableLocationState",
 "methods": {
  "copyStateValuesTo": "Copy all state values from this to the supplied holder.\n\nNote: Java generics information - io.deephaven.util.annotations.@FinalDefault\n\n:param destinationHolder: (io.deephaven.db.v2.locations.TableLocationStateHolder) - The destination for output\n:return: (boolean) Whether any of destinationHolder's values changed",
  "getLastModifiedTimeMillis": ":return: (long) The last modified time for a table location, in milliseconds from the epoch:\n         NULL_TIME : Modification time information is unknown or does not exist for this table location\n             >= 0L : The time this table was last modified, in milliseconds from the UTC epoch",
  "getSize": ":return: (long) The size of a table location:\n         NULL_SIZE : Size information is unknown or does not exist for this table location\n              >= 0 : The table location exists and has (possibly empty) data",
  "getStateLock": ":return: (java.lang.Object) The Object that accessors should synchronize on if they want to invoke multiple getters with consistent results.",
  "writeStateValuesTo": "Write all state values from this to the supplied output.\n\nNote: Java generics information - io.deephaven.util.annotations.@FinalDefault\n\n:param output: (java.io.DataOutput) - The output for output"
 },
 "path": "io.deephaven.db.v2.locations.TableLocationState",
 "text": "Interface for the mutable fields of a table location.  Supports multi-value copy methods, so that applications\n needing a consistent view of all fields can work with a local copy while only locking this object for a short while.",
 "typeName": "interface"
}