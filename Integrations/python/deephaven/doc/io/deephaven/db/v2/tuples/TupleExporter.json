{
 "className": "io.deephaven.db.v2.tuples.TupleExporter",
 "methods": {
  "exportElement": "**Incompatible overloads text - text from the first overload:**\n\nExport a single element from the tuple, identified by its element index, to an Object\n\n For the empty tuple, this is unsupported.\n For singles, this will copy the sole element, possibly in boxed form.\n For doubles and longer, this will copy the specified element without any unnecessary boxing.\n\n*Overload 1*  \n  Note: Java generics information - <ELEMENT_TYPE>\n  \n  :param tuple: (TupleExporter.TUPLE_TYPE) - The tuple to export an element from\n  :param elementIndex: (int) - The element index to export\n  :param writableSource: (io.deephaven.db.v2.sources.WritableSource<ELEMENT_TYPE>) - The destination\n  :param destinationIndexKey: (long) - The destination index key\n  \n*Overload 2*  \n  :param tuple: (TupleExporter.TUPLE_TYPE) - The tuple to export an element from\n  :param elementIndex: (int) - The element index to export\n  :return: java.lang.Object",
  "exportElementReinterpreted": "Export a single element from the tuple, identified by its element index, to an Object.  If the tuple has\n been internally reinterpreted, return the reinterpreted value.\n\n For the empty tuple, this is unsupported.\n For singles, this will copy the sole element, possibly in boxed form.\n For doubles and longer, this will copy the specified element without any unnecessary boxing.\n\n:param tuple: (TupleExporter.TUPLE_TYPE) - The tuple to export an element from\n:param elementIndex: (int) - The element index to export\n:return: java.lang.Object",
  "exportToExternalKey": "Export this tuple's element list as a key suitable for the TableMaps resulting\n from Table.byExternal(boolean, java.lang.String...).\n For the empty tuple this is a unsupported.\n For singles, this is the (boxed) sole element itself.\n For doubles and longer, this is a newly-allocated \"SmartKey\".\n\n:param tuple: (TupleExporter.TUPLE_TYPE) - The tuple to export all elements from\n:return: (java.lang.Object) The new smart key"
 },
 "path": "io.deephaven.db.v2.tuples.TupleExporter",
 "text": "Interface for classes that know how to export the elements of a given tuple type.\n Currently supports element-wise export to a WritableSource without unnecessary boxing, or full export to a\n \"SmartKey\" with the necessary boxing.",
 "typeName": "interface"
}