{
 "className": "io.deephaven.db.v2.replay.Replayer",
 "methods": {
  "currentTime": "Simulated time.\n\n:return: (io.deephaven.db.tables.utils.DBDateTime) simulated time.",
  "currentTimeNanos": "Simulated time in nanoseconds.\n\n:return: (long) simulated time in nanoseconds.",
  "getHandle": "Gets a handle to the replayer.\n\n:return: (io.deephaven.db.v2.replay.ReplayerHandle) handle to the replayer.",
  "getTimeProvider": "Gets a time provider for the replayer.  The time provider returns the current replay time.\n\n:param replayer: (io.deephaven.db.v2.replay.ReplayerInterface) - replayer\n:return: (io.deephaven.db.v2.utils.TimeProvider) time provider that returns the current replay time.",
  "isDone": "Has the replayer finished replaying all data.\n\n:return: (boolean) true if the replayer has finished replaying all data; false otherwise.",
  "refresh": "Refresh the simulated live tables.",
  "registerTimeSource": "Register the time column and index from a new table to replay.  Most users will use replay,\n replayGrouped, or replayGroupedLastBy instead of this function.\n\n:param index: (io.deephaven.db.v2.utils.Index) - table index\n:param timestampSource: (io.deephaven.db.v2.sources.ColumnSource<io.deephaven.db.tables.utils.DBDateTime>) - column source containing time information.",
  "replay": "Prepares a historical table for replaying.\n\n:param dataSource: io.deephaven.db.tables.Table\n:param timeColumn: java.lang.String\n:return: (io.deephaven.db.v2.DynamicTable) dynamic, replayed version of the table.",
  "replayGrouped": "Prepares a grouped historical table for replaying.  This method can be faster than the ungrouped replay, but\n the performance increase comes with a cost.  Within a group, the data ordering is maintained.  Between groups,\n data ordering is not maintained for a time interval.\n\n:param dataSource: io.deephaven.db.tables.Table\n:param timeColumn: java.lang.String\n:param groupingColumn: java.lang.String\n:return: (io.deephaven.db.v2.DynamicTable) dynamic, replayed version of the table.",
  "replayGroupedLastBy": "Prepares a grouped historical table for replaying as a last-by table.\n\n:param dataSource: io.deephaven.db.tables.Table\n:param timeColumn: java.lang.String\n:param groupingColumns: java.lang.String...\n:return: (io.deephaven.db.v2.DynamicTable) dynamic, replayed version of the last-by table.",
  "schedule": "Schedule a task to execute.\n\n:param task: java.util.TimerTask\n:param delay: long\n:param period: long",
  "setTime": "Sets the current replay time.\n\n:param updatedTime: long",
  "shutdown": "Shuts down the replayer.",
  "start": "Starts replaying data.",
  "waitDone": "Wait a specified interval for the replayer to complete.  If the replayer has not completed by the\n end of the interval, the method returns.\n\n:param maxTimeMillis: long"
 },
 "path": "io.deephaven.db.v2.replay.Replayer",
 "text": "Replay historical data as simulated real-time data.",
 "typeName": "class"
}