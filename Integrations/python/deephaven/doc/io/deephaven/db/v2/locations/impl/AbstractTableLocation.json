{
 "className": "io.deephaven.db.v2.locations.impl.AbstractTableLocation",
 "methods": {
  "getColumnLocation": ":param name: (java.lang.CharSequence) - The column name\n:return: (io.deephaven.db.v2.locations.ColumnLocation) The ColumnLocation for the defined column under this table location",
  "getKey": ":return: (io.deephaven.db.v2.locations.ImmutableTableLocationKey) An ImmutableTableLocationKey instance for this location",
  "getLastModifiedTimeMillis": ":return: (long) The last modified time for a table location, in milliseconds from the epoch:\n         NULL_TIME : Modification time information is unknown or does not exist for this table location\n             >= 0L : The time this table was last modified, in milliseconds from the UTC epoch",
  "getSize": ":return: (long) The size of a table location:\n         NULL_SIZE : Size information is unknown or does not exist for this table location\n              >= 0 : The table location exists and has (possibly empty) data",
  "getStateLock": ":return: (java.lang.Object) The Object that accessors should synchronize on if they want to invoke multiple getters with consistent results.",
  "getTableKey": ":return: (io.deephaven.db.v2.locations.ImmutableTableKey) An ImmutableTableKey instance for the enclosing table",
  "handleUpdate": "**Incompatible overloads text - text from the first overload:**\n\nSee TableLocationState for documentation of values.\n\n*Overload 1*  \n  :param size: (long) - The new size\n  :param lastModifiedTimeMillis: (long) - The new lastModificationTimeMillis\n  \n*Overload 2*  \n  :param source: (io.deephaven.db.v2.locations.TableLocationState) - The source to copy state values from",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.db.v2.locations.impl.AbstractTableLocation",
 "text": "Partial TableLocation implementation for use by TableDataService implementations.",
 "typeName": "class"
}