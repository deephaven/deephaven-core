{
 "className": "io.deephaven.db.v2.utils.ColumnHolder",
 "methods": {
  "createColumnHolder": "Create a column holder from an array object, inferring the data type from the given array object.\n\nNote: Java generics information - <T>\n\n:param name: (java.lang.String) - The column name\n:param grouped: (boolean) - true if the column is grouped; false otherwise\n:param data: (T...) - The data array\n:return: (io.deephaven.db.v2.utils.ColumnHolder<T>) a column holder with a type matching the component type of the provided array",
  "getBooleanColumnHolder": "Create a column holder for a Boolean column where the calues are represented as bytes. The given byte array will\n be converted to a Boolean array.\n\n:param name: (java.lang.String) - column name\n:param grouped: (boolean) - true if the column is grouped; false otherwise\n:param data: (byte...) - column data (byte values where 1 represents true, 0 represents false, and null otherwise)\n:return: (io.deephaven.db.v2.utils.ColumnHolder<java.lang.Boolean>) a Boolean column holder",
  "getColumnSource": "Gets a column source for the data. Other than the special case of DBDateTime columns, this requires that the type\n specified match the component type of the actual data.\n\n:return: (io.deephaven.db.v2.sources.ColumnSource<?>) column source constructed with data from this column holder",
  "getDateTimeColumnHolder": "Create a column holder for a DateTime column where the values are represented as longs. Whatever process produces\n a table from this column holder should respect this and create the appropriate type of ColumnSource. Under normal\n conditions, this will be a DateTimeArraySource (see getColumnSource()).\n\n:param name: (java.lang.String) - column name\n:param grouped: (boolean) - true if the column is grouped; false otherwise\n:param data: (long...) - column data (long integers representing nanos since the epoch)\n:return: (io.deephaven.db.v2.utils.ColumnHolder<io.deephaven.db.tables.utils.DBDateTime>) a DBDateTime column holder implemented with longs for storage",
  "getName": ":return: java.lang.String"
 },
 "path": "io.deephaven.db.v2.utils.ColumnHolder",
 "text": "Data to construct a data column.",
 "typeName": "class"
}