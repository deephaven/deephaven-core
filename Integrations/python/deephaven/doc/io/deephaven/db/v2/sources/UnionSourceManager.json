{
 "className": "io.deephaven.db.v2.sources.UnionSourceManager",
 "methods": {
  "addTable": "Adds a table to the managed constituents.\n\n:param table: (io.deephaven.db.tables.Table) - the new table\n:param onNewTableMapKey: (boolean) - whether this table is being added after the initial setup",
  "allowsReinterpret": "Determine whether column sources that use this manager should allow reinterpret.\n\n:return: (boolean) If ColumnSource.reinterpret(Class) is allowed",
  "getColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.db.v2.sources.UnionColumnSource<?>>",
  "getComponentTables": ":return: java.util.Collection<io.deephaven.db.tables.Table>",
  "getResult": ":return: io.deephaven.db.v2.QueryTable",
  "isUsingComponentsSafe": "Determine whether using the component tables directly in a subsequent merge will affect the correctness of the\n merge.\n\n:return: (boolean) If using the component tables is allowed.",
  "noteUsingComponentsIsUnsafe": "Note that this UnionSourceManager might have tables added dynamically throughout its lifetime.",
  "setDisallowReinterpret": "Specify that columns sources using this manager should not allow reinterpret.",
  "setRefreshing": "Ensure that this UnionSourceManager will be refreshing. Should be called proactively if it is expected that\n refreshing DynamicTables may be added *after* the initial set, in order to ensure that children of the result\n table are correctly setup to listen and refresh."
 },
 "path": "io.deephaven.db.v2.sources.UnionSourceManager",
 "typeName": "class"
}