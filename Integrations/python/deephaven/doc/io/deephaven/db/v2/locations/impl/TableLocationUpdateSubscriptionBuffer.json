{
 "className": "io.deephaven.db.v2.locations.impl.TableLocationUpdateSubscriptionBuffer",
 "methods": {
  "handleException": "Notify the listener that an exception was encountered while initiating or maintaining the subscription.\n Delivery of an exception implies that the subscription is no longer valid.\n This might happen during subscription establishment, and consequently should be checked for after\n subscribe completes.\n\n:param exception: (io.deephaven.db.v2.locations.TableDataException) - The exception",
  "handleUpdate": "Notify the listener that the table location has been updated.  This may be called \"spuriously,\" i.e. in cases\n where there has been no substantive update since the last handleUpdate() invocation.  Implementations should\n use appropriate measures to avoid reacting to spurious updates.",
  "processPending": "Subscribe if needed, and return whether there was a pending update to the table location, or throw a pending\n exception.\n If a pending exception is thrown, this signals that the subscription is no longer valid and no\n subsequent pending updates will be returned.\n\n:return: (boolean) Whether there was a pending update",
  "reset": "Unsubscribe and clear any state pending processing."
 },
 "path": "io.deephaven.db.v2.locations.impl.TableLocationUpdateSubscriptionBuffer",
 "text": "Intermediates between push-based subscription to a TableLocation and polling on LiveTable refresh.",
 "typeName": "class"
}