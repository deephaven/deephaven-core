{
 "className": "io.grpc.servlet.jakarta.ServletAdapter",
 "methods": {
  "destroy": "Call this method when the adapter is no longer needed. The gRPC server will be terminated.",
  "doGet": "Call this method inside HttpServlet.doGet(HttpServletRequest, HttpServletResponse)\n to serve gRPC GET request.\n\n \n This method is currently not implemented.\n\n \n Note that in rare case gRPC client sends GET requests.\n\n \n Do not modify req and resp before or after calling this method. However, calling\n resp.setBufferSize() before invocation is allowed.\n\n:param req: jakarta.servlet.http.HttpServletRequest\n:param resp: jakarta.servlet.http.HttpServletResponse",
  "doPost": "Call this method inside HttpServlet.doPost(HttpServletRequest, HttpServletResponse)\n to serve gRPC POST request.\n\n \n Do not modify req and resp before or after calling this method. However, calling\n resp.setBufferSize() before invocation is allowed.\n\n:param req: jakarta.servlet.http.HttpServletRequest\n:param resp: jakarta.servlet.http.HttpServletResponse",
  "isGrpc": "Checks whether an incoming HttpServletRequest may come from a gRPC client.\n\n:param request: jakarta.servlet.http.HttpServletRequest\n:return: (boolean) true if the request comes from a gRPC client",
  "otherAdapter": "Note: Java generics information - <T>\n\n:param constructor: io.grpc.servlet.jakarta.ServletAdapter.AdapterConstructor<T>\n:return: T"
 },
 "path": "io.grpc.servlet.jakarta.ServletAdapter",
 "text": "An adapter that transforms HttpServletRequest into gRPC request and lets a gRPC server process it, and\n transforms the gRPC response into HttpServletResponse. An adapter can be instantiated by\n ServletServerBuilder.buildServletAdapter().\n\n \n In a servlet, calling doPost(HttpServletRequest, HttpServletResponse) inside\n HttpServlet.doPost(HttpServletRequest, HttpServletResponse) makes the servlet backed by\n the gRPC server associated with the adapter. The servlet must support Asynchronous Processing and must be deployed to\n a container that supports servlet 4.0 and enables HTTP/2.\n\n \n The API is experimental. The authors would like to know more about the real usecases. Users are welcome to provide\n feedback by commenting on the tracking issue.",
 "typeName": "class"
}