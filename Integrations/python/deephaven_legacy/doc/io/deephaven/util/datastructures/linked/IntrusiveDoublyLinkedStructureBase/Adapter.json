{
 "className": "io.deephaven.util.datastructures.linked.IntrusiveDoublyLinkedStructureBase$Adapter",
 "methods": {
  "getNext": "Get the next node after the input node.\n\n:param node: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) - The input node\n:return: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) The input node's next node",
  "getPrev": "Get the previous node before the input node.\n\n:param node: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) - The input node\n:return: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) The input node's previous node",
  "setNext": "Set the input node's next node.\n\n:param node: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) - The input node\n:param other: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) - The input node's new next node",
  "setPrev": "Set the input node's previous node.\n\n:param node: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) - The input node\n:param other: (IntrusiveDoublyLinkedStructureBase.Adapter.NODE_TYPE) - The input node's new previous node"
 },
 "path": "io.deephaven.util.datastructures.linked.IntrusiveDoublyLinkedStructureBase.Adapter",
 "text": "Adapter interface for nodes with intrusively-stored previous and next nodes.",
 "typeName": "interface"
}