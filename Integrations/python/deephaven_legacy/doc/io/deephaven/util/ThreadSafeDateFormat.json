{
 "className": "io.deephaven.util.ThreadSafeDateFormat",
 "methods": {
  "clone": ":return: java.lang.Object",
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "format": ":param date: java.util.Date\n:param toAppendTo: java.lang.StringBuffer\n:param fieldPosition: java.text.FieldPosition\n:return: java.lang.StringBuffer",
  "formatToCharacterIterator": ":param obj: java.lang.Object\n:return: java.text.AttributedCharacterIterator",
  "getCalendar": ":return: java.util.Calendar",
  "getNumberFormat": ":return: java.text.NumberFormat",
  "getTimeZone": ":return: java.util.TimeZone",
  "hashCode": ":return: int",
  "isLenient": ":return: boolean",
  "parse": "*Overload 1*  \n  :param source: java.lang.String\n  :param pos: java.text.ParsePosition\n  :return: java.util.Date\n  \n*Overload 2*  \n  :param source: java.lang.String\n  :return: java.util.Date",
  "parseObject": "*Overload 1*  \n  :param source: java.lang.String\n  :param pos: java.text.ParsePosition\n  :return: java.lang.Object\n  \n*Overload 2*  \n  :param source: java.lang.String\n  :return: java.lang.Object",
  "setCalendar": ":param newCalendar: java.util.Calendar",
  "setLenient": ":param lenient: boolean",
  "setNumberFormat": ":param newNumberFormat: java.text.NumberFormat",
  "setTimeZone": ":param zone: java.util.TimeZone",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.util.ThreadSafeDateFormat",
 "text": "Wraps a DateFormat to provide a minimal level of thread safety that DateFormat is lacking (namely, preventing\n simultaneous calls to format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition) from separate threads from interfering with each other).",
 "typeName": "class"
}