{
 "className": "io.deephaven.util.PrimitiveArrayType",
 "methods": {
  "booleans": ":return: io.deephaven.util.PrimitiveArrayType.Booleans",
  "bytes": ":return: io.deephaven.util.PrimitiveArrayType.Bytes",
  "chars": ":return: io.deephaven.util.PrimitiveArrayType.Chars",
  "doubles": ":return: io.deephaven.util.PrimitiveArrayType.Doubles",
  "floats": ":return: io.deephaven.util.PrimitiveArrayType.Floats",
  "getPrimitiveType": ":return: java.lang.Class<?>",
  "ints": ":return: io.deephaven.util.PrimitiveArrayType.Ints",
  "longs": ":return: io.deephaven.util.PrimitiveArrayType.Longs",
  "lookupForArrayType": ":param clazz: java.lang.Class<?>\n:return: java.util.Optional<io.deephaven.util.PrimitiveArrayType<?>>",
  "lookupForObject": ":param array: java.lang.Object\n:return: java.util.Optional<io.deephaven.util.PrimitiveArrayType<?>>",
  "lookupForPrimitiveType": ":param clazz: java.lang.Class<?>\n:return: java.util.Optional<io.deephaven.util.PrimitiveArrayType<?>>",
  "shorts": ":return: io.deephaven.util.PrimitiveArrayType.Shorts",
  "types": ":return: java.util.List<io.deephaven.util.PrimitiveArrayType<?>>",
  "walk": "Note: Java generics information - <V extends io.deephaven.util.PrimitiveArrayType.Visitor>\n\n:param visitor: V\n:return: V"
 },
 "path": "io.deephaven.util.PrimitiveArrayType",
 "typeName": "interface"
}