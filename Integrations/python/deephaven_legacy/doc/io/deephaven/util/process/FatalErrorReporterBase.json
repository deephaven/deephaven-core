{
 "className": "io.deephaven.util.process.FatalErrorReporterBase",
 "methods": {
  "addInterceptor": ":param interceptor: io.deephaven.util.process.FatalErrorReporter.Interceptor",
  "report": "*Overload 1*  \n  :param message: java.lang.String\n  :param throwable: java.lang.Throwable\n  \n*Overload 2*  \n  :param message: java.lang.String",
  "reportAsync": "*Overload 1*  \n  :param message: java.lang.String\n  :param throwable: java.lang.Throwable\n  \n*Overload 2*  \n  :param message: java.lang.String",
  "uncaughtException": ":param thread: java.lang.Thread\n:param throwable: java.lang.Throwable"
 },
 "path": "io.deephaven.util.process.FatalErrorReporterBase",
 "text": "Tool for centralizing error reports that should result in process termination.",
 "typeName": "class"
}