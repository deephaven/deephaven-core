{
 "className": "io.deephaven.plot.PlottingConvenience",
 "methods": {
  "axisTransform": "See AxisTransforms.axisTransform(java.lang.String)\n\n:param name: java.lang.String\n:return: io.deephaven.plot.axistransformations.AxisTransform",
  "axisTransformNames": "See AxisTransforms.axisTransformNames()\n\n:return: java.lang.String[]",
  "catErrorBar": "See Figure.catErrorBar(java.lang.Comparable, T0[], T1[], T2[], T3[])\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "catErrorBarBy": "See Figure.catErrorBarBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "catHistPlot": "See Figure.catHistPlot(java.lang.Comparable, T[])\n\n*Overload 1*  \n  Note: Java generics information - <T extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param categories: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param categories: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param categories: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param categories: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  Note: Java generics information - <T extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param categories: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "catPlot": "See Figure.catPlot(java.lang.Comparable, T0[], T1[])\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  Note: Java generics information - <T1 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: io.deephaven.plot.datasets.data.IndexableData<T1>\n  :param y: io.deephaven.plot.datasets.data.IndexableNumericData\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 19*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "catPlotBy": "See Figure.catPlotBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "color": "See Color.color\n\n:param color: java.lang.String\n:return: io.deephaven.gui.color.Color",
  "colorHSL": "See Color.colorHSL(float, float, float)\n\n*Overload 1*  \n  :param h: float\n  :param s: float\n  :param l: float\n  :return: io.deephaven.gui.color.Color\n  \n*Overload 2*  \n  :param h: float\n  :param s: float\n  :param l: float\n  :param a: float\n  :return: io.deephaven.gui.color.Color",
  "colorNames": "See Color.colorNames()\n\n:return: java.lang.String[]",
  "colorRGB": "See Color.colorRGB(int, int, int)\n\n*Overload 1*  \n  :param rgb: int\n  :return: io.deephaven.gui.color.Color\n  \n*Overload 2*  \n  :param rgba: int\n  :param hasAlpha: boolean\n  :return: io.deephaven.gui.color.Color\n  \n*Overload 3*  \n  :param r: float\n  :param g: float\n  :param b: float\n  :return: io.deephaven.gui.color.Color\n  \n*Overload 4*  \n  :param r: int\n  :param g: int\n  :param b: int\n  :return: io.deephaven.gui.color.Color\n  \n*Overload 5*  \n  :param r: float\n  :param g: float\n  :param b: float\n  :param a: float\n  :return: io.deephaven.gui.color.Color\n  \n*Overload 6*  \n  :param r: int\n  :param g: int\n  :param b: int\n  :param a: int\n  :return: io.deephaven.gui.color.Color",
  "errorBarX": "See Figure.errorBarX(java.lang.Comparable, T0[], T1[], T2[], T3[])\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 23*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 24*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 29*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 30*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 31*  \n  Note: Java generics information - <T3 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 35*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 36*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 37*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 38*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 39*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "errorBarXBy": "See Figure.errorBarXBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "errorBarXY": "See Figure.errorBarXY(java.lang.Comparable, T0[], T1[], T2[], T3[], T4[], T5[])\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: T3[]\n  :param yLow: T4[]\n  :param yHigh: T5[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xLow: T1[]\n  :param xHigh: T2[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xLow: double[]\n  :param xHigh: double[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xLow: float[]\n  :param xHigh: float[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xLow: int[]\n  :param xHigh: int[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xLow: long[]\n  :param xHigh: long[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: T3[]\n  :param yLow: T4[]\n  :param yHigh: T5[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 23*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param xLow: io.deephaven.time.DateTime[]\n  :param xHigh: io.deephaven.time.DateTime[]\n  :param y: java.util.List<T3>\n  :param yLow: java.util.List<T4>\n  :param yHigh: java.util.List<T5>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 24*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: T3[]\n  :param yLow: T4[]\n  :param yHigh: T5[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 29*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 30*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 31*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param xLow: java.util.Date[]\n  :param xHigh: java.util.Date[]\n  :param y: java.util.List<T3>\n  :param yLow: java.util.List<T4>\n  :param yHigh: java.util.List<T5>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xLow: short[]\n  :param xHigh: short[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 35*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 36*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 37*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xLow: java.util.List<T1>\n  :param xHigh: java.util.List<T2>\n  :param y: java.util.List<T3>\n  :param yLow: java.util.List<T4>\n  :param yHigh: java.util.List<T5>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 38*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 39*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "errorBarXYBy": "See Figure.errorBarXYBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xLow: java.lang.String\n  :param xHigh: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "errorBarY": "See Figure.errorBarY(java.lang.Comparable, T0[], T1[], T2[], T3[])\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 20*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 21*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 23*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 24*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: T1[]\n  :param yLow: T2[]\n  :param yHigh: T3[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: double[]\n  :param yLow: double[]\n  :param yHigh: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: float[]\n  :param yLow: float[]\n  :param yHigh: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: int[]\n  :param yLow: int[]\n  :param yHigh: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: long[]\n  :param yLow: long[]\n  :param yHigh: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 29*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 30*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 31*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: short[]\n  :param yLow: short[]\n  :param yHigh: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 35*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: io.deephaven.time.DateTime[]\n  :param yLow: io.deephaven.time.DateTime[]\n  :param yHigh: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 36*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.Date[]\n  :param yLow: java.util.Date[]\n  :param yHigh: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 37*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :param yLow: java.util.List<T2>\n  :param yHigh: java.util.List<T3>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 38*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 39*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "errorBarYBy": "See Figure.errorBarYBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param yLow: java.lang.String\n  :param yHigh: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "figure": "See FigureFactory.figure()\n\n*Overload 1*  \n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param numRows: int\n  :param numCols: int\n  :return: io.deephaven.plot.Figure",
  "font": "See Font.font\n\n*Overload 1*  \n  :param family: java.lang.String\n  :param style: io.deephaven.plot.Font.FontStyle\n  :param size: int\n  :return: io.deephaven.plot.Font\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: io.deephaven.plot.Font",
  "fontFamilyNames": "See Font.fontFamilyNames()\n\n:return: java.lang.String[]",
  "fontStyle": "See Font.fontStyle(java.lang.String)\n\n:param style: java.lang.String\n:return: io.deephaven.plot.Font.FontStyle",
  "fontStyleNames": "See Font.fontStyleNames()\n\n:return: java.lang.String[]",
  "histPlot": "See Figure.histPlot(java.lang.Comparable, io.deephaven.engine.table.Table)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param xmin: double\n  :param xmax: double\n  :param nbins: int\n  :return: io.deephaven.plot.Figure",
  "lineEndStyle": "See LineStyle.lineEndStyle(java.lang.String)\n\n:param style: java.lang.String\n:return: io.deephaven.plot.LineStyle.LineEndStyle",
  "lineEndStyleNames": "See LineStyle.lineEndStyleNames()\n\n:return: java.lang.String[]",
  "lineJoinStyle": "See LineStyle.lineJoinStyle(java.lang.String)\n\n:param style: java.lang.String\n:return: io.deephaven.plot.LineStyle.LineJoinStyle",
  "lineJoinStyleNames": "See LineStyle.lineJoinStyleNames()\n\n:return: java.lang.String[]",
  "lineStyle": "See LineStyle.lineStyle(double, io.deephaven.plot.LineStyle.LineEndStyle, io.deephaven.plot.LineStyle.LineJoinStyle, double...)\n\n*Overload 1*  \n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 2*  \n  :param dashPattern: double...\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 3*  \n  :param width: double\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 4*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param dashPattern: java.util.List<T>\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 5*  \n  :param endStyle: java.lang.String\n  :param joinStyle: java.lang.String\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 6*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param width: double\n  :param dashPattern: T[]\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 7*  \n  :param width: double\n  :param dashPattern: double[]\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 8*  \n  :param width: double\n  :param dashPattern: float[]\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 9*  \n  :param width: double\n  :param dashPattern: int[]\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 10*  \n  :param width: double\n  :param dashPattern: long[]\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 11*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param width: double\n  :param dashPattern: java.util.List<T>\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 12*  \n  :param width: double\n  :param endStyle: io.deephaven.plot.LineStyle.LineEndStyle\n  :param joinStyle: io.deephaven.plot.LineStyle.LineJoinStyle\n  :param dashPattern: double...\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 13*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param width: double\n  :param endStyle: io.deephaven.plot.LineStyle.LineEndStyle\n  :param joinStyle: io.deephaven.plot.LineStyle.LineJoinStyle\n  :param dashPattern: java.util.List<T>\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 14*  \n  :param width: double\n  :param endStyle: java.lang.String\n  :param joinStyle: java.lang.String\n  :param dashPattern: double...\n  :return: io.deephaven.plot.LineStyle\n  \n*Overload 15*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param width: double\n  :param endStyle: java.lang.String\n  :param joinStyle: java.lang.String\n  :param dashPattern: java.util.List<T>\n  :return: io.deephaven.plot.LineStyle",
  "newAxes": "See Figure.newAxes()\n\n*Overload 1*  \n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param dim: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param name: java.lang.String\n  :param dim: int\n  :return: io.deephaven.plot.Figure",
  "newChart": "See Figure.newChart()\n\n*Overload 1*  \n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param index: int\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param rowNum: int\n  :param colNum: int\n  :return: io.deephaven.plot.Figure",
  "ohlcPlot": "See Figure.ohlcPlot(java.lang.Comparable, io.deephaven.time.DateTime[], T1[], T2[], T3[], T4[])\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: T1[]\n  :param high: T2[]\n  :param low: T3[]\n  :param close: T4[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: double[]\n  :param high: double[]\n  :param low: double[]\n  :param close: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: float[]\n  :param high: float[]\n  :param low: float[]\n  :param close: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: int[]\n  :param high: int[]\n  :param low: int[]\n  :param close: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: long[]\n  :param high: long[]\n  :param low: long[]\n  :param close: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: short[]\n  :param high: short[]\n  :param low: short[]\n  :param close: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.time.DateTime[]\n  :param open: java.util.List<T1>\n  :param high: java.util.List<T2>\n  :param low: java.util.List<T3>\n  :param close: java.util.List<T4>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: T1[]\n  :param high: T2[]\n  :param low: T3[]\n  :param close: T4[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: double[]\n  :param high: double[]\n  :param low: double[]\n  :param close: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: float[]\n  :param high: float[]\n  :param low: float[]\n  :param close: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: int[]\n  :param high: int[]\n  :param low: int[]\n  :param close: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: long[]\n  :param high: long[]\n  :param low: long[]\n  :param close: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: short[]\n  :param high: short[]\n  :param low: short[]\n  :param close: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param time: java.util.Date[]\n  :param open: java.util.List<T1>\n  :param high: java.util.List<T2>\n  :param low: java.util.List<T3>\n  :param close: java.util.List<T4>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param time: io.deephaven.plot.datasets.data.IndexableNumericData\n  :param open: io.deephaven.plot.datasets.data.IndexableNumericData\n  :param high: io.deephaven.plot.datasets.data.IndexableNumericData\n  :param low: io.deephaven.plot.datasets.data.IndexableNumericData\n  :param close: io.deephaven.plot.datasets.data.IndexableNumericData\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param time: java.lang.String\n  :param open: java.lang.String\n  :param high: java.lang.String\n  :param low: java.lang.String\n  :param close: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param time: java.lang.String\n  :param open: java.lang.String\n  :param high: java.lang.String\n  :param low: java.lang.String\n  :param close: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "ohlcPlotBy": "See Figure.ohlcPlotBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param time: java.lang.String\n  :param open: java.lang.String\n  :param high: java.lang.String\n  :param low: java.lang.String\n  :param close: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param time: java.lang.String\n  :param open: java.lang.String\n  :param high: java.lang.String\n  :param low: java.lang.String\n  :param close: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "oneClick": "See Selectables.oneClick(io.deephaven.engine.table.Table, java.lang.String...)\n\n*Overload 1*  \n  :param t: io.deephaven.engine.table.Table\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.filters.SelectableDataSetOneClick\n  \n*Overload 2*  \n  :param t: io.deephaven.engine.table.Table\n  :param requireAllFiltersToDisplay: boolean\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.filters.SelectableDataSetOneClick\n  \n*Overload 3*  \n  :param tMap: io.deephaven.engine.table.TableMap\n  :param tableDefinition: io.deephaven.engine.table.TableDefinition\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.filters.SelectableDataSetOneClick\n  \n*Overload 4*  \n  :param tMap: io.deephaven.engine.table.TableMap\n  :param t: io.deephaven.engine.table.Table\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.filters.SelectableDataSetOneClick\n  \n*Overload 5*  \n  :param tMap: io.deephaven.engine.table.TableMap\n  :param tableDefinition: io.deephaven.engine.table.TableDefinition\n  :param requireAllFiltersToDisplay: boolean\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.filters.SelectableDataSetOneClick\n  \n*Overload 6*  \n  :param tMap: io.deephaven.engine.table.TableMap\n  :param t: io.deephaven.engine.table.Table\n  :param requireAllFiltersToDisplay: boolean\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.filters.SelectableDataSetOneClick",
  "piePlot": "See Figure.piePlot(java.lang.Comparable, T0[], T1[])\n\n*Overload 1*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: T0[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  Note: Java generics information - <T1 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: io.deephaven.plot.datasets.data.IndexableData<T1>\n  :param y: io.deephaven.plot.datasets.data.IndexableNumericData\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  Note: Java generics information - <T0 extends java.lang.Comparable>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  Note: Java generics information - <T0 extends java.lang.Comparable,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param categories: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param categories: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure",
  "plot": "See Figure.plot(java.lang.Comparable, groovy.lang.Closure<T>)\n\n*Overload 1*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param function: groovy.lang.Closure<T>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param function: java.util.function.DoubleUnaryOperator\n  :return: io.deephaven.plot.Figure\n  \n*Overload 3*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 4*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 5*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 6*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 7*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 8*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 9*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 10*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 11*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: T0[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 12*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 13*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 14*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 15*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 16*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 17*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 18*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 19*  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 20*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: double[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 21*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 22*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 23*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 24*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 25*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 26*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 27*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 28*  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 29*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: float[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 30*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 31*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 32*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 33*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 34*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 35*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 36*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 37*  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 38*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: int[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 39*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 40*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 41*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 42*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 43*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 44*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 45*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 46*  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 47*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: long[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 48*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 49*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 50*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 51*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 52*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 53*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 54*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 55*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 56*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.time.DateTime[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 57*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 58*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 59*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 60*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 61*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 62*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 63*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 64*  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 65*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.Date[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 66*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 67*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 68*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 69*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 70*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 71*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 72*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 73*  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 74*  \n  Note: Java generics information - <T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: short[]\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 75*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: T1[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 76*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: double[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 77*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: float[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 78*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: int[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 79*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: long[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 80*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: io.deephaven.time.DateTime[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 81*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.Date[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 82*  \n  Note: Java generics information - <T0 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: short[]\n  :return: io.deephaven.plot.Figure\n  \n*Overload 83*  \n  Note: Java generics information - <T0 extends java.lang.Number,\n  T1 extends java.lang.Number>\n  \n  :param seriesName: java.lang.Comparable\n  :param x: java.util.List<T0>\n  :param y: java.util.List<T1>\n  :return: io.deephaven.plot.Figure\n  \n*Overload 84*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 85*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :return: io.deephaven.plot.Figure\n  \n*Overload 86*  \n  :param seriesName: java.lang.Comparable\n  :param x: io.deephaven.plot.datasets.data.IndexableNumericData\n  :param y: io.deephaven.plot.datasets.data.IndexableNumericData\n  :param hasXTimeAxis: boolean\n  :param hasYTimeAxis: boolean\n  :return: io.deephaven.plot.Figure",
  "plotBy": "See Figure.plotBy(java.lang.Comparable, io.deephaven.engine.table.Table, java.lang.String, java.lang.String, java.lang.String...)\n\n*Overload 1*  \n  :param seriesName: java.lang.Comparable\n  :param t: io.deephaven.engine.table.Table\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure\n  \n*Overload 2*  \n  :param seriesName: java.lang.Comparable\n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param x: java.lang.String\n  :param y: java.lang.String\n  :param byColumns: java.lang.String...\n  :return: io.deephaven.plot.Figure",
  "plotStyleNames": "See PlotStyle.plotStyleNames()\n\n:return: java.lang.String[]",
  "scatterPlotMatrix": "See ScatterPlotMatrix.scatterPlotMatrix(T[]...)\n\n*Overload 1*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param variables: T[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 2*  \n  :param variables: double[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 3*  \n  :param variables: float[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 4*  \n  :param variables: int[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 5*  \n  :param variables: long[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 6*  \n  Note: Java generics information - <T extends java.lang.Number>\n  \n  :param variableNames: java.lang.String[]\n  :param variables: T[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 7*  \n  :param variableNames: java.lang.String[]\n  :param variables: double[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 8*  \n  :param variableNames: java.lang.String[]\n  :param variables: float[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 9*  \n  :param variableNames: java.lang.String[]\n  :param variables: int[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 10*  \n  :param variableNames: java.lang.String[]\n  :param variables: long[]...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 11*  \n  :param t: io.deephaven.engine.table.Table\n  :param columns: java.lang.String...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix\n  \n*Overload 12*  \n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param columns: java.lang.String...\n  :return: io.deephaven.plot.composite.ScatterPlotMatrix"
 },
 "path": "io.deephaven.plot.PlottingConvenience",
 "text": "A library of methods for constructing plots.",
 "typeName": "class"
}