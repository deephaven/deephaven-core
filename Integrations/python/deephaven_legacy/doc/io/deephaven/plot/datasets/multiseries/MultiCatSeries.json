{
 "className": "io.deephaven.plot.datasets.multiseries.MultiCatSeries",
 "methods": {
  "copy": "Create a copy of the series on a different set of axes.\n\n:param axes: (io.deephaven.plot.AxesImpl) - new axes.\n:return: (io.deephaven.plot.datasets.multiseries.MultiCatSeries) copy of the series on a different set of axes.",
  "createSeries": "Creates a new series for this multi-series.\n\n:param seriesName: (java.lang.String) - name for the series\n:param t: (io.deephaven.engine.table.impl.BaseTable) - client side source table\n:param seriesNamer: (io.deephaven.plot.datasets.DynamicSeriesNamer) - creates the name for the newly generated series. Ensures unique names.\n:return: (io.deephaven.plot.datasets.category.CategoryDataSeriesInternal) new series for this multi-series",
  "errorBarColor": "*Overload 1*  \n  :param errorBarColor: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  :param errorBarColor: int\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param errorBarColor: io.deephaven.gui.color.Paint\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "errorBarColorSeriesNameToPaintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,io.deephaven.gui.color.Paint>",
  "errorBarColorSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "errorBarColorSeriesNameTointMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Integer>",
  "getCategoryCol": ":return: java.lang.String",
  "getNumericCol": ":return: java.lang.String",
  "gradientVisible": ":param gradientVisible: boolean\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "gradientVisibleSeriesNameTobooleanMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Boolean>",
  "group": ":param group: int\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "groupSeriesNameTointMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Integer>",
  "initializeSeries": "Assigns series modifiers, e.g. point color, to the given series\n\n:param series: (io.deephaven.plot.datasets.category.CategoryDataSeriesInternal) - series to initialize",
  "lineColor": "*Overload 1*  \n  :param color: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  :param color: int\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "lineColorSeriesNameToPaintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,io.deephaven.gui.color.Paint>",
  "lineColorSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "lineColorSeriesNameTointMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Integer>",
  "lineStyle": ":param lineStyle: io.deephaven.plot.LineStyle\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "lineStyleSeriesNameToLineStyleMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,io.deephaven.plot.LineStyle>",
  "linesVisible": ":param visible: java.lang.Boolean\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "linesVisibleSeriesNameToBooleanMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Boolean>",
  "piePercentLabelFormat": ":param pieLabelFormat: java.lang.String\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "piePercentLabelFormatSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "pointColor": "*Overload 1*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param pointColor: groovy.lang.Closure<COLOR>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  Note: Java generics information - <COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param pointColor: java.util.function.Function<java.lang.Comparable,COLOR>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param pointColor: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 4*  \n  :param pointColor: int\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 5*  \n  :param pointColor: io.deephaven.gui.color.Paint\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 6*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,\n  COLOR extends io.deephaven.gui.color.Paint>\n  \n  :param pointColor: java.util.Map<CATEGORY,COLOR>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 7*  \n  :param category: java.lang.Comparable\n  :param pointColor: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 8*  \n  :param category: java.lang.Comparable\n  :param pointColor: int\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 9*  \n  :param category: java.lang.Comparable\n  :param pointColor: io.deephaven.gui.color.Paint\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 10*  \n  :param t: io.deephaven.engine.table.Table\n  :param category: java.lang.String\n  :param pointColor: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 11*  \n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param category: java.lang.String\n  :param pointColor: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointColorInteger": "*Overload 1*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: groovy.lang.Closure<COLOR>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  Note: Java generics information - <COLOR extends java.lang.Integer>\n  \n  :param colors: java.util.function.Function<java.lang.Comparable,COLOR>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param colors: java.util.Map<CATEGORY,COLOR>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointColorIntegerSeriesNameToMapMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.util.Map>",
  "pointColorSeriesNameToComparablePaintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointColorSeriesNameToComparableStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointColorSeriesNameToComparableintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointColorSeriesNameToMapMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.util.Map>",
  "pointColorSeriesNameToPaintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,io.deephaven.gui.color.Paint>",
  "pointColorSeriesNameToSelectableDataSetStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointColorSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "pointColorSeriesNameToTableStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointColorSeriesNameTointMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Integer>",
  "pointLabel": "*Overload 1*  \n  Note: Java generics information - <LABEL>\n  \n  :param pointLabels: groovy.lang.Closure<LABEL>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  Note: Java generics information - <LABEL>\n  \n  :param pointLabels: java.util.function.Function<java.lang.Comparable,LABEL>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param pointLabel: java.lang.Object\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 4*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable,\n  LABEL>\n  \n  :param pointLabels: java.util.Map<CATEGORY,LABEL>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 5*  \n  :param category: java.lang.Comparable\n  :param pointLabel: java.lang.Object\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 6*  \n  :param t: io.deephaven.engine.table.Table\n  :param category: java.lang.String\n  :param pointLabel: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 7*  \n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param category: java.lang.String\n  :param pointLabel: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointLabelFormat": ":param pointLabelFormat: java.lang.String\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointLabelFormatSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "pointLabelSeriesNameToComparableObjectMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointLabelSeriesNameToMapMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.util.Map>",
  "pointLabelSeriesNameToObjectMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object>",
  "pointLabelSeriesNameToSelectableDataSetStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointLabelSeriesNameToTableStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointShape": "*Overload 1*  \n  :param pointShapes: groovy.lang.Closure<java.lang.String>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  :param pointShapes: java.util.function.Function<java.lang.Comparable,java.lang.String>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param pointShape: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 4*  \n  :param pointShape: io.deephaven.gui.shape.Shape\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 5*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param pointShapes: java.util.Map<CATEGORY,java.lang.String>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 6*  \n  :param category: java.lang.Comparable\n  :param pointShape: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 7*  \n  :param category: java.lang.Comparable\n  :param pointShape: io.deephaven.gui.shape.Shape\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 8*  \n  :param t: io.deephaven.engine.table.Table\n  :param category: java.lang.String\n  :param pointShape: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 9*  \n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param category: java.lang.String\n  :param pointShape: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointShapeSeriesNameToComparableShapeMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointShapeSeriesNameToComparableStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointShapeSeriesNameToMapMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.util.Map>",
  "pointShapeSeriesNameToSelectableDataSetStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointShapeSeriesNameToShapeMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,io.deephaven.gui.shape.Shape>",
  "pointShapeSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "pointShapeSeriesNameToTableStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSize": "*Overload 1*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param pointSizes: groovy.lang.Closure<NUMBER>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  Note: Java generics information - <NUMBER extends java.lang.Number>\n  \n  :param pointSizes: java.util.function.Function<java.lang.Comparable,NUMBER>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param pointSize: java.lang.Number\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 4*  \n  :param pointSizes: java.util.Map<CATEGORY,NUMBER>\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 5*  \n  :param categories: CATEGORY[]\n  :param pointSizes: NUMBER[]\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 6*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param pointSizes: double[]\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 7*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param pointSizes: int[]\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 8*  \n  Note: Java generics information - <CATEGORY extends java.lang.Comparable>\n  \n  :param categories: CATEGORY[]\n  :param pointSizes: long[]\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 9*  \n  :param category: java.lang.Comparable\n  :param pointSize: java.lang.Number\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 10*  \n  :param category: java.lang.Comparable\n  :param pointSize: double\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 11*  \n  :param category: java.lang.Comparable\n  :param pointSize: int\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 12*  \n  :param category: java.lang.Comparable\n  :param pointSize: long\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 13*  \n  :param t: io.deephaven.engine.table.Table\n  :param category: java.lang.String\n  :param pointSize: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 14*  \n  :param sds: io.deephaven.plot.filters.SelectableDataSet\n  :param category: java.lang.String\n  :param pointSize: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointSizeSeriesNameToCATEGORYArrayNUMBERArrayMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToCATEGORYArraydoubleArrayMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToCATEGORYArrayintArrayMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToCATEGORYArraylongArrayMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToComparableNumberMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToComparabledoubleMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToComparableintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToComparablelongMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToMapMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.util.Map>",
  "pointSizeSeriesNameToNumberMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Number>",
  "pointSizeSeriesNameToSelectableDataSetStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointSizeSeriesNameToTableStringStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Object[]>",
  "pointsVisible": ":param visible: java.lang.Boolean\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "pointsVisibleSeriesNameToBooleanMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Boolean>",
  "seriesColor": "*Overload 1*  \n  :param color: java.lang.String\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 2*  \n  :param color: int\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries\n  \n*Overload 3*  \n  :param color: io.deephaven.gui.color.Paint\n  :param multiSeriesKey: java.lang.Object...\n  :return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "seriesColorSeriesNameToPaintMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,io.deephaven.gui.color.Paint>",
  "seriesColorSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "seriesColorSeriesNameTointMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.Integer>",
  "toolTipPattern": ":param toolTipPattern: java.lang.String\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "toolTipPatternSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "xToolTipPattern": ":param xToolTipPattern: java.lang.String\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "xToolTipPatternSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>",
  "yToolTipPattern": ":param yToolTipPattern: java.lang.String\n:param multiSeriesKey: java.lang.Object...\n:return: io.deephaven.plot.datasets.multiseries.MultiCatSeries",
  "yToolTipPatternSeriesNameToStringMap": ":return: io.deephaven.plot.util.PlotUtils.HashMapWithDefault<java.lang.String,java.lang.String>"
 },
 "path": "io.deephaven.plot.datasets.multiseries.MultiCatSeries",
 "text": "A AbstractMultiSeries collection that holds and generates CategoryDataSeriesInternal.",
 "typeName": "class"
}