{
 "className": "io.deephaven.proto.backplane.grpc.ExportNotificationOrBuilder",
 "methods": {
  "getContext": "any errors will include an id that can be used to find details of the error in the logs\n \nstring context = 3;\n\n:return: (java.lang.String) The context.",
  "getContextBytes": "any errors will include an id that can be used to find details of the error in the logs\n \nstring context = 3;\n\n:return: (com.google.protobuf.ByteString) The bytes for context.",
  "getDependentHandle": "will be set to an identifier of the dependency that cascaded the error if applicable\n \nstring dependent_handle = 4;\n\n:return: (java.lang.String) The dependentHandle.",
  "getDependentHandleBytes": "will be set to an identifier of the dependency that cascaded the error if applicable\n \nstring dependent_handle = 4;\n\n:return: (com.google.protobuf.ByteString) The bytes for dependentHandle.",
  "getExportState": ".io.deephaven.proto.backplane.grpc.ExportNotification.State export_state = 2;\n\n:return: (io.deephaven.proto.backplane.grpc.ExportNotification.State) The exportState.",
  "getExportStateValue": ".io.deephaven.proto.backplane.grpc.ExportNotification.State export_state = 2;\n\n:return: (int) The enum numeric value on the wire for exportState.",
  "getTicket": ".io.deephaven.proto.backplane.grpc.Ticket ticket = 1;\n\n:return: (io.deephaven.proto.backplane.grpc.Ticket) The ticket.",
  "getTicketOrBuilder": ".io.deephaven.proto.backplane.grpc.Ticket ticket = 1;\n\n:return: io.deephaven.proto.backplane.grpc.TicketOrBuilder",
  "hasTicket": ".io.deephaven.proto.backplane.grpc.Ticket ticket = 1;\n\n:return: (boolean) Whether the ticket field is set."
 },
 "path": "io.deephaven.proto.backplane.grpc.ExportNotificationOrBuilder",
 "typeName": "interface"
}