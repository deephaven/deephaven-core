{
 "className": "io.deephaven.proto.backplane.grpc.Literal",
 "methods": {
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "getBoolValue": "bool bool_value = 3;\n\n:return: (boolean) The boolValue.",
  "getDefaultInstance": ":return: io.deephaven.proto.backplane.grpc.Literal",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.Literal",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getDoubleValue": "double double_value = 2;\n\n:return: (double) The doubleValue.",
  "getLongValue": "sint64 long_value = 4 [jstype = JS_STRING];\n\n:return: (long) The longValue.",
  "getNanoTimeValue": "nanos since the epoch\n \nsint64 nano_time_value = 5 [jstype = JS_STRING];\n\n:return: (long) The nanoTimeValue.",
  "getParserForType": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.Literal>",
  "getSerializedSize": ":return: int",
  "getStringValue": "string string_value = 1;\n\n:return: (java.lang.String) The stringValue.",
  "getStringValueBytes": "string string_value = 1;\n\n:return: (com.google.protobuf.ByteString) The bytes for stringValue.",
  "getUnknownFields": ":return: com.google.protobuf.UnknownFieldSet",
  "getValueCase": ":return: io.deephaven.proto.backplane.grpc.Literal.ValueCase",
  "hasBoolValue": "bool bool_value = 3;\n\n:return: (boolean) Whether the boolValue field is set.",
  "hasDoubleValue": "double double_value = 2;\n\n:return: (boolean) Whether the doubleValue field is set.",
  "hasLongValue": "sint64 long_value = 4 [jstype = JS_STRING];\n\n:return: (boolean) Whether the longValue field is set.",
  "hasNanoTimeValue": "nanos since the epoch\n \nsint64 nano_time_value = 5 [jstype = JS_STRING];\n\n:return: (boolean) Whether the nanoTimeValue field is set.",
  "hasStringValue": "string string_value = 1;\n\n:return: (boolean) Whether the stringValue field is set.",
  "hashCode": ":return: int",
  "isInitialized": ":return: boolean",
  "newBuilder": "*Overload 1*  \n  :return: io.deephaven.proto.backplane.grpc.Literal.Builder\n  \n*Overload 2*  \n  :param prototype: io.deephaven.proto.backplane.grpc.Literal\n  :return: io.deephaven.proto.backplane.grpc.Literal.Builder",
  "newBuilderForType": ":return: io.deephaven.proto.backplane.grpc.Literal.Builder",
  "parseDelimitedFrom": "*Overload 1*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 2*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Literal",
  "parseFrom": "*Overload 1*  \n  :param data: java.nio.ByteBuffer\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 2*  \n  :param data: java.nio.ByteBuffer\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 3*  \n  :param data: com.google.protobuf.ByteString\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 4*  \n  :param data: com.google.protobuf.ByteString\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 5*  \n  :param data: byte[]\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 6*  \n  :param data: byte[]\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 7*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 8*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 9*  \n  :param input: com.google.protobuf.CodedInputStream\n  :return: io.deephaven.proto.backplane.grpc.Literal\n  \n*Overload 10*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.Literal",
  "parser": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.Literal>",
  "toBuilder": ":return: io.deephaven.proto.backplane.grpc.Literal.Builder",
  "writeTo": ":param output: com.google.protobuf.CodedOutputStream"
 },
 "path": "io.deephaven.proto.backplane.grpc.Literal",
 "text": "Protobuf type io.deephaven.proto.backplane.grpc.Literal",
 "typeName": "class"
}