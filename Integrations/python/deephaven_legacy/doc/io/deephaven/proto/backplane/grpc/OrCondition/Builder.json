{
 "className": "io.deephaven.proto.backplane.grpc.OrCondition$Builder",
 "methods": {
  "addAllFilters": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:param values: java.lang.Iterable<? extendsio.deephaven.proto.backplane.grpc.Condition>\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "addFilters": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n*Overload 1*  \n  :param value: io.deephaven.proto.backplane.grpc.Condition\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  \n*Overload 2*  \n  :param index: int\n  :param value: io.deephaven.proto.backplane.grpc.Condition\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  \n*Overload 3*  \n  :param builderForValue: io.deephaven.proto.backplane.grpc.Condition.Builder\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  \n*Overload 4*  \n  :param index: int\n  :param builderForValue: io.deephaven.proto.backplane.grpc.Condition.Builder\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "addFiltersBuilder": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n*Overload 1*  \n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder\n  \n*Overload 2*  \n  :param index: int\n  :return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "addRepeatedField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "build": ":return: io.deephaven.proto.backplane.grpc.OrCondition",
  "buildPartial": ":return: io.deephaven.proto.backplane.grpc.OrCondition",
  "clear": ":return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "clearField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "clearFilters": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "clearOneof": ":param oneof: com.google.protobuf.Descriptors.OneofDescriptor\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "clone": ":return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.OrCondition",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getDescriptorForType": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getFilters": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:param index: int\n:return: io.deephaven.proto.backplane.grpc.Condition",
  "getFiltersBuilder": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:param index: int\n:return: io.deephaven.proto.backplane.grpc.Condition.Builder",
  "getFiltersBuilderList": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:return: java.util.List<io.deephaven.proto.backplane.grpc.Condition.Builder>",
  "getFiltersCount": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:return: int",
  "getFiltersList": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:return: java.util.List<io.deephaven.proto.backplane.grpc.Condition>",
  "getFiltersOrBuilder": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:param index: int\n:return: io.deephaven.proto.backplane.grpc.ConditionOrBuilder",
  "getFiltersOrBuilderList": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:return: java.util.List<? extends io.deephaven.proto.backplane.grpc.ConditionOrBuilder>",
  "isInitialized": ":return: boolean",
  "mergeFrom": "*Overload 1*  \n  :param other: com.google.protobuf.Message\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  \n*Overload 2*  \n  :param other: io.deephaven.proto.backplane.grpc.OrCondition\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  \n*Overload 3*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "mergeUnknownFields": ":param unknownFields: com.google.protobuf.UnknownFieldSet\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "removeFilters": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n:param index: int\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "setField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "setFilters": "repeated .io.deephaven.proto.backplane.grpc.Condition filters = 1;\n\n*Overload 1*  \n  :param index: int\n  :param value: io.deephaven.proto.backplane.grpc.Condition\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder\n  \n*Overload 2*  \n  :param index: int\n  :param builderForValue: io.deephaven.proto.backplane.grpc.Condition.Builder\n  :return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "setRepeatedField": ":param field: com.google.protobuf.Descriptors.FieldDescriptor\n:param index: int\n:param value: java.lang.Object\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder",
  "setUnknownFields": ":param unknownFields: com.google.protobuf.UnknownFieldSet\n:return: io.deephaven.proto.backplane.grpc.OrCondition.Builder"
 },
 "path": "io.deephaven.proto.backplane.grpc.OrCondition.Builder",
 "text": "Protobuf type io.deephaven.proto.backplane.grpc.OrCondition",
 "typeName": "class"
}