{
 "className": "io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
 "methods": {
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "getCharts": "repeated .io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor charts = 10;\n\n:param index: int\n:return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor",
  "getChartsCount": "repeated .io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor charts = 10;\n\n:return: int",
  "getChartsList": "repeated .io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor charts = 10;\n\n:return: java.util.List<io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor>",
  "getChartsOrBuilder": "repeated .io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor charts = 10;\n\n:param index: int\n:return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptorOrBuilder",
  "getChartsOrBuilderList": "repeated .io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptor charts = 10;\n\n:return: java.util.List<? extends io.deephaven.proto.backplane.script.grpc.FigureDescriptor.ChartDescriptorOrBuilder>",
  "getCols": "int32 cols = 8;\n\n:return: (int) The cols.",
  "getDefaultInstance": ":return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getErrors": "repeated string errors = 13;\n\n:param index: (int) - The index of the element to return.\n:return: (java.lang.String) The errors at the given index.",
  "getErrorsBytes": "repeated string errors = 13;\n\n:param index: (int) - The index of the value to return.\n:return: (com.google.protobuf.ByteString) The bytes of the errors at the given index.",
  "getErrorsCount": "repeated string errors = 13;\n\n:return: (int) The count of errors.",
  "getErrorsList": "repeated string errors = 13;\n\n:return: (com.google.protobuf.ProtocolStringList) A list containing the errors.",
  "getParserForType": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.script.grpc.FigureDescriptor>",
  "getRows": "int32 rows = 9;\n\n:return: (int) The rows.",
  "getSerializedSize": ":return: int",
  "getTitle": "optional string title = 1;\n\n:return: (java.lang.String) The title.",
  "getTitleBytes": "optional string title = 1;\n\n:return: (com.google.protobuf.ByteString) The bytes for title.",
  "getTitleColor": "string title_color = 3;\n\n:return: (java.lang.String) The titleColor.",
  "getTitleColorBytes": "string title_color = 3;\n\n:return: (com.google.protobuf.ByteString) The bytes for titleColor.",
  "getTitleFont": "string title_font = 2;\n\n:return: (java.lang.String) The titleFont.",
  "getTitleFontBytes": "string title_font = 2;\n\n:return: (com.google.protobuf.ByteString) The bytes for titleFont.",
  "getUnknownFields": ":return: com.google.protobuf.UnknownFieldSet",
  "getUpdateInterval": "int64 update_interval = 7 [jstype = JS_STRING];\n\n:return: (long) The updateInterval.",
  "hasTitle": "optional string title = 1;\n\n:return: (boolean) Whether the title field is set.",
  "hashCode": ":return: int",
  "isInitialized": ":return: boolean",
  "newBuilder": "*Overload 1*  \n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor.Builder\n  \n*Overload 2*  \n  :param prototype: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor.Builder",
  "newBuilderForType": ":return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor.Builder",
  "parseDelimitedFrom": "*Overload 1*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 2*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
  "parseFrom": "*Overload 1*  \n  :param data: java.nio.ByteBuffer\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 2*  \n  :param data: java.nio.ByteBuffer\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 3*  \n  :param data: com.google.protobuf.ByteString\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 4*  \n  :param data: com.google.protobuf.ByteString\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 5*  \n  :param data: byte[]\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 6*  \n  :param data: byte[]\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 7*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 8*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 9*  \n  :param input: com.google.protobuf.CodedInputStream\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor\n  \n*Overload 10*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
  "parser": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.script.grpc.FigureDescriptor>",
  "toBuilder": ":return: io.deephaven.proto.backplane.script.grpc.FigureDescriptor.Builder",
  "writeTo": ":param output: com.google.protobuf.CodedOutputStream"
 },
 "path": "io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
 "text": "Protobuf type io.deephaven.proto.backplane.script.grpc.FigureDescriptor",
 "typeName": "class"
}