{
 "className": "io.deephaven.proto.backplane.grpc.SnapshotTableRequestOrBuilder",
 "methods": {
  "getDoInitialSnapshot": "Whether to take an initial snapshot (passed to table.snapshot function).\n \nbool do_initial_snapshot = 4;\n\n:return: (boolean) The doInitialSnapshot.",
  "getLeftId": "The table on which to invoke the snapshot function. If unset, an empty(1) table will be used.\n \n.io.deephaven.proto.backplane.grpc.TableReference left_id = 2;\n\n:return: (io.deephaven.proto.backplane.grpc.TableReference) The leftId.",
  "getLeftIdOrBuilder": "The table on which to invoke the snapshot function. If unset, an empty(1) table will be used.\n \n.io.deephaven.proto.backplane.grpc.TableReference left_id = 2;\n\n:return: io.deephaven.proto.backplane.grpc.TableReferenceOrBuilder",
  "getResultId": ".io.deephaven.proto.backplane.grpc.Ticket result_id = 1;\n\n:return: (io.deephaven.proto.backplane.grpc.Ticket) The resultId.",
  "getResultIdOrBuilder": ".io.deephaven.proto.backplane.grpc.Ticket result_id = 1;\n\n:return: io.deephaven.proto.backplane.grpc.TicketOrBuilder",
  "getRightId": "The table to pass into the snapshot function.\n \n.io.deephaven.proto.backplane.grpc.TableReference right_id = 3;\n\n:return: (io.deephaven.proto.backplane.grpc.TableReference) The rightId.",
  "getRightIdOrBuilder": "The table to pass into the snapshot function.\n \n.io.deephaven.proto.backplane.grpc.TableReference right_id = 3;\n\n:return: io.deephaven.proto.backplane.grpc.TableReferenceOrBuilder",
  "getStampColumns": "Which columns to take from the left table (can be renamed if desired).\n \nrepeated string stamp_columns = 5;\n\n:param index: (int) - The index of the element to return.\n:return: (java.lang.String) The stampColumns at the given index.",
  "getStampColumnsBytes": "Which columns to take from the left table (can be renamed if desired).\n \nrepeated string stamp_columns = 5;\n\n:param index: (int) - The index of the value to return.\n:return: (com.google.protobuf.ByteString) The bytes of the stampColumns at the given index.",
  "getStampColumnsCount": "Which columns to take from the left table (can be renamed if desired).\n \nrepeated string stamp_columns = 5;\n\n:return: (int) The count of stampColumns.",
  "getStampColumnsList": "Which columns to take from the left table (can be renamed if desired).\n \nrepeated string stamp_columns = 5;\n\n:return: (java.util.List<java.lang.String>) A list containing the stampColumns.",
  "hasLeftId": "The table on which to invoke the snapshot function. If unset, an empty(1) table will be used.\n \n.io.deephaven.proto.backplane.grpc.TableReference left_id = 2;\n\n:return: (boolean) Whether the leftId field is set.",
  "hasResultId": ".io.deephaven.proto.backplane.grpc.Ticket result_id = 1;\n\n:return: (boolean) Whether the resultId field is set.",
  "hasRightId": "The table to pass into the snapshot function.\n \n.io.deephaven.proto.backplane.grpc.TableReference right_id = 3;\n\n:return: (boolean) Whether the rightId field is set."
 },
 "path": "io.deephaven.proto.backplane.grpc.SnapshotTableRequestOrBuilder",
 "typeName": "interface"
}