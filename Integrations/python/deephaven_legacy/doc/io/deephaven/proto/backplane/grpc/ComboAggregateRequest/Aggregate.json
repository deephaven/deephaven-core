{
 "className": "io.deephaven.proto.backplane.grpc.ComboAggregateRequest$Aggregate",
 "methods": {
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "getAvgMedian": "used in percentileBy only\n \nbool avg_median = 5;\n\n:return: (boolean) The avgMedian.",
  "getColumnName": "countBy result (output) column OR weighted avg weight (input) column, otherwise unused\n \nstring column_name = 3;\n\n:return: (java.lang.String) The columnName.",
  "getColumnNameBytes": "countBy result (output) column OR weighted avg weight (input) column, otherwise unused\n \nstring column_name = 3;\n\n:return: (com.google.protobuf.ByteString) The bytes for columnName.",
  "getDefaultInstance": ":return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate",
  "getDefaultInstanceForType": ":return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate",
  "getDescriptor": ":return: com.google.protobuf.Descriptors.Descriptor",
  "getMatchPairs": "used in all aggregates except countBy\n \nrepeated string match_pairs = 2;\n\n:param index: (int) - The index of the element to return.\n:return: (java.lang.String) The matchPairs at the given index.",
  "getMatchPairsBytes": "used in all aggregates except countBy\n \nrepeated string match_pairs = 2;\n\n:param index: (int) - The index of the value to return.\n:return: (com.google.protobuf.ByteString) The bytes of the matchPairs at the given index.",
  "getMatchPairsCount": "used in all aggregates except countBy\n \nrepeated string match_pairs = 2;\n\n:return: (int) The count of matchPairs.",
  "getMatchPairsList": "used in all aggregates except countBy\n \nrepeated string match_pairs = 2;\n\n:return: (com.google.protobuf.ProtocolStringList) A list containing the matchPairs.",
  "getParserForType": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate>",
  "getPercentile": "required by percentileBy aggregates, otherwise unused\n \ndouble percentile = 4;\n\n:return: (double) The percentile.",
  "getSerializedSize": ":return: int",
  "getType": ".io.deephaven.proto.backplane.grpc.ComboAggregateRequest.AggType type = 1;\n\n:return: (io.deephaven.proto.backplane.grpc.ComboAggregateRequest.AggType) The type.",
  "getTypeValue": ".io.deephaven.proto.backplane.grpc.ComboAggregateRequest.AggType type = 1;\n\n:return: (int) The enum numeric value on the wire for type.",
  "getUnknownFields": ":return: com.google.protobuf.UnknownFieldSet",
  "hashCode": ":return: int",
  "isInitialized": ":return: boolean",
  "newBuilder": "*Overload 1*  \n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate.Builder\n  \n*Overload 2*  \n  :param prototype: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate.Builder",
  "newBuilderForType": ":return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate.Builder",
  "parseDelimitedFrom": "*Overload 1*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 2*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate",
  "parseFrom": "*Overload 1*  \n  :param data: java.nio.ByteBuffer\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 2*  \n  :param data: java.nio.ByteBuffer\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 3*  \n  :param data: com.google.protobuf.ByteString\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 4*  \n  :param data: com.google.protobuf.ByteString\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 5*  \n  :param data: byte[]\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 6*  \n  :param data: byte[]\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 7*  \n  :param input: java.io.InputStream\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 8*  \n  :param input: java.io.InputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 9*  \n  :param input: com.google.protobuf.CodedInputStream\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate\n  \n*Overload 10*  \n  :param input: com.google.protobuf.CodedInputStream\n  :param extensionRegistry: com.google.protobuf.ExtensionRegistryLite\n  :return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate",
  "parser": ":return: com.google.protobuf.Parser<io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate>",
  "toBuilder": ":return: io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate.Builder",
  "writeTo": ":param output: com.google.protobuf.CodedOutputStream"
 },
 "path": "io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate",
 "text": "Protobuf type io.deephaven.proto.backplane.grpc.ComboAggregateRequest.Aggregate",
 "typeName": "class"
}