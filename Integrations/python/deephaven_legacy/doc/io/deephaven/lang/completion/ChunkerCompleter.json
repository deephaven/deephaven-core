{
 "className": "io.deephaven.lang.completion.ChunkerCompleter",
 "methods": {
  "addMatch": ":param results: java.util.Collection<io.deephaven.proto.backplane.script.grpc.CompletionItem.Builder>\n:param node: io.deephaven.lang.generated.Node\n:param match: java.lang.String\n:param index: io.deephaven.lang.completion.CompletionRequest\n:param nextTokens: java.lang.String...",
  "complete": ":param command: java.lang.String\n:param offset: int\n:return: java.util.concurrent.CompletableFuture<? extends java.util.Collection<io.deephaven.lang.completion.CompletionFragment>>",
  "findAssignment": ":param doc: io.deephaven.lang.parse.ParsedDocument\n:param request: io.deephaven.lang.completion.CompletionRequest\n:param name: java.lang.String\n:return: java.util.List<io.deephaven.lang.generated.ChunkerAssign>",
  "getDefaultQuoteType": ":return: java.lang.String",
  "getQuoteType": ":param node: io.deephaven.lang.generated.Node\n:return: java.lang.String",
  "runCompletion": "Part 1 of the V2 completion api; adapting our API to fit into existing CompletionHandler semantics.\n\n Right now we are just blindly re-parsing the whole document when using the old api, which is going to be\n good-enough-for-now; this may also allow us to borrow the existing unit tests to some degree.\n\n*Overload 1*  \n  :param doc: io.deephaven.lang.parse.ParsedDocument\n  :param pos: io.deephaven.proto.backplane.script.grpc.Position\n  :param offset: int\n  :return: java.util.Collection<io.deephaven.proto.backplane.script.grpc.CompletionItem.Builder>\n  \n*Overload 2*  \n  :param doc: (io.deephaven.lang.parse.ParsedDocument) - \n  :param offset: (int) - \n  :return: java.util.Set<io.deephaven.proto.backplane.script.grpc.CompletionItem>",
  "setDefaultQuoteType": ":param defaultQuoteType: java.lang.String",
  "sliceBefore": ":param item: io.deephaven.proto.backplane.script.grpc.CompletionItem.Builder\n:param requested: io.deephaven.proto.backplane.script.grpc.Position\n:param node: io.deephaven.lang.generated.Node\n:return: io.deephaven.proto.backplane.script.grpc.TextEdit.Builder",
  "stringLiteral": ":param ns: io.deephaven.lang.generated.Node\n:return: java.lang.String"
 },
 "path": "io.deephaven.lang.completion.ChunkerCompleter",
 "text": "Uses a ChunkerDocument to lookup user cursor and perform autocompletion.",
 "typeName": "class"
}