{
 "className": "io.deephaven.lang.generated.SimpleNode",
 "methods": {
  "addJunk": ":param junk: io.deephaven.lang.generated.Token\n:return: io.deephaven.lang.generated.Token",
  "addToken": ":param token: io.deephaven.lang.generated.Token\n:param anchor: io.deephaven.lang.generated.Node",
  "adopt": ":param node: io.deephaven.lang.generated.Node",
  "childrenAccept": "Accept the visitor.\n\n:param visitor: io.deephaven.lang.generated.ChunkerVisitor\n:param data: java.lang.Object\n:return: java.lang.Object",
  "dump": ":param prefix: java.lang.String",
  "getChildren": ":return: java.util.List<io.deephaven.lang.generated.Node>",
  "getId": ":return: int",
  "getJunk": ":return: io.deephaven.lang.generated.Token",
  "indexOf": ":param node: io.deephaven.lang.generated.Node\n:return: int",
  "isWellFormed": ":return: boolean",
  "jjtAccept": "Accept the visitor.\n\n:param visitor: io.deephaven.lang.generated.ChunkerVisitor\n:param data: java.lang.Object\n:return: java.lang.Object",
  "jjtAddChild": "This method tells the node to add its argument to the node's\n     list of children.\n\n:param n: io.deephaven.lang.generated.Node\n:param i: int",
  "jjtClose": "This method is called after all the child nodes have been\n     added.",
  "jjtGetChild": "This method returns a child node.  The children are numbered\n     from zero, left to right.\n\n:param i: int\n:return: io.deephaven.lang.generated.Node",
  "jjtGetFirstToken": ":return: io.deephaven.lang.generated.Token",
  "jjtGetLastToken": ":return: io.deephaven.lang.generated.Token",
  "jjtGetNumChildren": "Return the number of children the node has.\n\n:return: int",
  "jjtGetParent": ":return: io.deephaven.lang.generated.Node",
  "jjtGetValue": ":return: java.lang.Object",
  "jjtInsertChild": "This method inserts the specified node at the given index, shifting any existing items to the right.\n\n:param n: io.deephaven.lang.generated.Node\n:param i: int",
  "jjtOpen": "This method is called after the node has been made the current\n     node.  It indicates that child nodes can now be added to it.",
  "jjtSetFirstToken": ":param token: io.deephaven.lang.generated.Token",
  "jjtSetLastToken": ":param token: io.deephaven.lang.generated.Token",
  "jjtSetParent": "This pair of methods are used to inform the node of its\n     parent.\n\n:param n: io.deephaven.lang.generated.Node",
  "jjtSetValue": ":param value: java.lang.Object",
  "removeChild": ":param node: io.deephaven.lang.generated.Node",
  "removeToken": ":param token: io.deephaven.lang.generated.Token\n:return: io.deephaven.lang.generated.Token",
  "setWellFormed": ":param wellFormed: boolean",
  "toString": "*Overload 1*  \n  :return: java.lang.String\n  \n*Overload 2*  \n  :param prefix: java.lang.String\n  :return: java.lang.String"
 },
 "path": "io.deephaven.lang.generated.SimpleNode",
 "typeName": "class"
}