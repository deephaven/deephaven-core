{
 "className": "io.deephaven.lang.generated.SimpleCharStream",
 "methods": {
  "BeginToken": "Start.\n\n:return: char",
  "Done": "Reset buffer when finished.",
  "GetImage": "Get token literal value.\n\n:return: java.lang.String",
  "GetSuffix": "Get the suffix.\n\n:param len: int\n:return: char[]",
  "ReInit": "Reinitialise.\n\n*Overload 1*  \n  :param dstream: io.deephaven.lang.generated.Provider\n  :param startline: int\n  :param startcolumn: int\n  :param buffersize: int\n  \n*Overload 2*  \n  :param dstream: io.deephaven.lang.generated.Provider\n  :param startline: int\n  :param startcolumn: int\n  \n*Overload 3*  \n  :param dstream: io.deephaven.lang.generated.Provider",
  "adjustBeginLineColumn": "Method to adjust line and column numbers for the start of a token.\n\n:param newLine: int\n:param newCol: int",
  "backup": "Backup a number of characters.\n\n:param amount: int",
  "getAbsoluteTokenBegin": ":return: int",
  "getBeginColumn": "Get token beginning column number.\n\n:return: int",
  "getBeginLine": "Get token beginning line number.\n\n:return: int",
  "getColumn": ":return: int",
  "getEndColumn": "Get token end column number.\n\n:return: int",
  "getEndLine": "Get token end line number.\n\n:return: int",
  "getLine": ":return: int",
  "getMaxNextCharInd": ":return: int",
  "getTabSize": ":return: int",
  "getTotalCharsRead": ":return: int",
  "readChar": "Read a character.\n\n:return: char",
  "setTabSize": ":param i: int"
 },
 "path": "io.deephaven.lang.generated.SimpleCharStream",
 "text": "An implementation of interface CharStream, where the stream is assumed to\n contain only ASCII characters (without unicode processing).",
 "typeName": "class"
}