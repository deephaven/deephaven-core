{
 "className": "io.deephaven.kafka.ingest.JsonNodeUtil",
 "methods": {
  "getBigDecimal": "Returns a BigDecimal from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.math.BigDecimal) A BigDecimal\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.math.BigDecimal) A BigDecimal\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.math.BigDecimal) A BigDecimal",
  "getBigInteger": "Returns a BigInteger from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.math.BigInteger) A BigInteger\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.math.BigInteger) A BigInteger\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.math.BigInteger) A BigInteger",
  "getBoolean": "Returns a Boolean from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Boolean) A Boolean\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Boolean) A Boolean\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Boolean) A Boolean",
  "getBoxedByte": "Returns a Byte from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Byte) A Byte\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Byte) A Byte",
  "getBoxedChar": "Returns a Character from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Character) A Character\n  \n*Overload 2*  \n  :param tmpNode: com.fasterxml.jackson.databind.JsonNode\n  :return: java.lang.Character",
  "getBoxedDouble": "Returns a Double from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Double) A Double\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Double) A Double",
  "getBoxedFloat": "Returns a Float from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Float) A Float\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Float) A Float",
  "getBoxedInt": "Returns an Integer from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Integer) An Integer\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Integer) An Integer",
  "getBoxedLong": "Returns a Long from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Long) A Long\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Long) A Long",
  "getBoxedShort": "Returns a Short from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Short) A Short\n  \n*Overload 2*  \n  :param node: com.fasterxml.jackson.databind.JsonNode\n  :return: java.lang.Short",
  "getByte": "Returns a Deephaven byte (primitive byte with a reserved value for Null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (byte) A Deephaven byte (primitive byte with a reserved value for Null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (byte) A Deephaven byte (primitive byte with a reserved value for Null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (byte) A Deephaven byte (primitive byte with a reserved value for Null)",
  "getChar": "Returns a Deephaven char (primitive char with a reserved value for Null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (char) A Deephaven char (primitive char with a reserved value for Null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (char) A Deephaven char (primitive char with a reserved value for Null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (char) A Deephaven char (primitive char with a reserved value for Null)",
  "getDateTime": "Returns a DateTime from a JsonNode. Will try to infer precision of a long value to be parsed\n using DateTimeUtils autoEpochToTime. If the value in the JSON record is not numeric, this method will\n attempt to parse it as a Deephaven DateTime string (yyyy-MM-ddThh:mm:ss[.nnnnnnnnn] TZ).\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (io.deephaven.time.DateTime) A DateTime\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (io.deephaven.time.DateTime) A DateTime\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (io.deephaven.time.DateTime) A DateTime",
  "getDouble": "Returns a Deephaven double (primitive double with reserved values for null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (double) A Deephaven double (primitive double with reserved values for null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (double) A Deephaven double (primitive double with reserved values for null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (double) A Deephaven double (primitive double with reserved values for null)",
  "getFloat": "Returns a Deephaven float (primitive float with reserved values for Null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (float) A Deephaven float (primitive float with reserved values for Null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (float) A Deephaven float (primitive float with reserved values for Null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (float) A Deephaven float (primitive float with reserved values for Null)",
  "getInt": "Returns a Deephaven int (primitive int with reserved values for null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (int) A Deephaven int (primitive int with reserved values for null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (int) A Deephaven int (primitive int with reserved values for null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (int) A Deephaven int (primitive int with reserved values for null)",
  "getLong": "**Incompatible overloads text - text from the first overload:**\n\nReturns a Deephaven long (primitive long with reserved values for Null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (long) A Deephaven long (primitive long with reserved values for Null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (long) A Deephaven long (primitive long with reserved values for Null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (long) A Deephaven long (primitive long with reserved values for null)",
  "getShort": "Returns a Deephaven short (primitive short with reserved values for Null) from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (short) A Deephaven short (primitive short with reserved values for Null)\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (short) A Deephaven short (primitive short with reserved values for Null)\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (short) A Deephaven short (primitive short with reserved values for Null)",
  "getString": "Returns a String from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.String) A String\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param ptr: (com.fasterxml.jackson.core.JsonPointer) - A JsonPointer to the node for the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.String) A String\n  \n*Overload 3*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.String) A String",
  "getValue": "Returns a generic Object from a JsonNode.\n\n*Overload 1*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :param key: (java.lang.String) - The String key of the value to retrieve.\n  :param allowMissingKeys: boolean\n  :param allowNullValues: boolean\n  :return: (java.lang.Object) An Object\n  \n*Overload 2*  \n  :param node: (com.fasterxml.jackson.databind.JsonNode) - The JsonNode from which to retrieve the value.\n  :return: (java.lang.Object) An Object",
  "makeJsonNode": ":param json: java.lang.String\n:return: com.fasterxml.jackson.databind.JsonNode"
 },
 "path": "io.deephaven.kafka.ingest.JsonNodeUtil",
 "typeName": "class"
}