{
 "className": "io.deephaven.engine.table.iterators.IntegerColumnIterator",
 "methods": {
  "forEachRemaining": "*Overload 1*  \n  :param action: java.util.function.IntConsumer\n  \n*Overload 2*  \n  :param action: java.util.function.Consumer<? superjava.lang.Integer>",
  "next": ":return: java.lang.Integer",
  "nextInt": ":return: int",
  "stream": "Create a IntStream over the remaining elements of this IntegerColumnIterator. The result must be\n closed in order to ensure resources are released. A\n try-with-resources block is strongly encouraged.\n\n:return: (java.util.stream.IntStream) A IntStream over the remaining contents of this iterator. Must be closed."
 },
 "path": "io.deephaven.engine.table.iterators.IntegerColumnIterator",
 "text": "ColumnIterator implementation for chunk sources of primitive ints.",
 "typeName": "class"
}