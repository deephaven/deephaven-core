{
 "className": "io.deephaven.engine.table.impl.locations.TableLocationState",
 "methods": {
  "copyStateValuesTo": "Copy all state values from this to the supplied holder.\n\n:param destinationHolder: (io.deephaven.engine.table.impl.locations.TableLocationStateHolder) - The destination for output\n:return: (boolean) Whether any of destinationHolder's values changed",
  "getLastModifiedTimeMillis": ":return: (long) The last modified time for a table location, in milliseconds from the epoch: \nNULL_TIME: Modification time information is unknown or does not exist for this\n         location \n>= 0: The time this table was last modified, in milliseconds from the UTC epoch",
  "getRowSet": ":return: (io.deephaven.engine.rowset.RowSet) The (possibly-empty) RowSet of a table location, or null if RowSet information is unknown\n         or does not exist for this table location.",
  "getSize": ":return: (long) The size of a table location: \nNULL_SIZE: Size information is unknown or does not exist for this location \n>= 0: The table location exists and has (possibly empty) data",
  "getStateLock": ":return: (java.lang.Object) The Object that accessors should synchronize on if they want to invoke multiple getters with consistent\n         results."
 },
 "path": "io.deephaven.engine.table.impl.locations.TableLocationState",
 "text": "Interface for the mutable fields of a table location. Supports multi-value copy methods, so that applications needing\n a consistent view of all fields can work with a local copy while only locking this object for a short while.",
 "typeName": "interface"
}