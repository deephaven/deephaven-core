{
 "className": "io.deephaven.engine.table.impl.DeferredViewTable$TableReference",
 "methods": {
  "clear": "Clear the referent.",
  "get": "Returns the table in a form that the user can run queries on it. This may be as simple as returning a\n reference, but for amorphous tables, this means we need to do the work to instantiate it.\n\n:return: (io.deephaven.engine.table.Table) the table",
  "getDefinition": "Get the definition, without instantiating the table.\n\n:return: (io.deephaven.engine.table.TableDefinition) the definition of the table",
  "getSize": "What size should the uninitialized table return.\n\n:return: (long) the size",
  "getWithWhere": "Get the table in a form that the user can run queries on it. All of the filters that can be run efficiently\n should be run before instantiating the full table should be run. Other filters are returned in the\n remainingFilters field.\n\n:param whereFilters: (io.deephaven.engine.table.impl.select.WhereFilter...) - filters to maybe apply before returning the table\n:return: (io.deephaven.engine.table.impl.DeferredViewTable.TableReference.TableAndRemainingFilters) the instantiated table and a set of filters that were not applied.",
  "selectDistinct": "If possible to execute a selectDistinct without instantiating the full table, then do so. Otherwise return\n null.\n\n:param columns: (io.deephaven.engine.table.impl.select.SelectColumn[]) - the columns to selectDistinct\n:return: (io.deephaven.engine.table.Table) null if the operation can not be performed on an uninstantiated table, otherwise a new table with the\n         distinct values from strColumns."
 },
 "path": "io.deephaven.engine.table.impl.DeferredViewTable.TableReference",
 "text": "The table reference hides the table underlying table from us.",
 "typeName": "class"
}