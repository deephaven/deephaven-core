{
 "className": "io.deephaven.engine.table.impl.select.WhereFilterFactory",
 "methods": {
  "expandQuickFilter": "*Overload 1*  \n  :param t: io.deephaven.engine.table.Table\n  :param quickFilter: java.lang.String\n  :param columnNames: java.util.Set<java.lang.String>\n  :return: io.deephaven.engine.table.impl.select.WhereFilter[]\n  \n*Overload 2*  \n  :param t: io.deephaven.engine.table.Table\n  :param quickFilter: java.lang.String\n  :param filterMode: io.deephaven.gui.table.QuickFilterMode\n  :return: io.deephaven.engine.table.impl.select.WhereFilter[]\n  \n*Overload 3*  \n  :param t: io.deephaven.engine.table.Table\n  :param quickFilter: java.lang.String\n  :param filterMode: io.deephaven.gui.table.QuickFilterMode\n  :param columnNames: java.util.Set<java.lang.String>\n  :return: io.deephaven.engine.table.impl.select.WhereFilter[]",
  "getExpression": ":param match: java.lang.String\n:return: io.deephaven.engine.table.impl.select.WhereFilter",
  "getExpressions": "*Overload 1*  \n  :param expressions: java.lang.String...\n  :return: io.deephaven.engine.table.impl.select.WhereFilter[]\n  \n*Overload 2*  \n  :param expressions: java.util.Collection<java.lang.String>\n  :return: io.deephaven.engine.table.impl.select.WhereFilter[]",
  "getExpressionsWithQuickFilter": ":param expressions: java.lang.String[]\n:param t: io.deephaven.engine.table.Table\n:param quickFilter: java.lang.String\n:param filterMode: io.deephaven.gui.table.QuickFilterMode\n:return: io.deephaven.engine.table.impl.select.WhereFilter[]"
 },
 "path": "io.deephaven.engine.table.impl.select.WhereFilterFactory",
 "text": "Given a user's filter string produce an appropriate WhereFilter instance.",
 "typeName": "class"
}