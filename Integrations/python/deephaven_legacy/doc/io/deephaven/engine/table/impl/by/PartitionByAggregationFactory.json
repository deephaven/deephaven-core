{
 "className": "io.deephaven.engine.table.impl.by.PartitionByAggregationFactory",
 "methods": {
  "makeAggregationContext": "Make an AggregationContext for this aggregation.\n\n:param inputTable: (io.deephaven.engine.table.Table) - The source Table to aggregate\n:param groupByColumnNames: (java.lang.String...) - The key column names\n:return: (io.deephaven.engine.table.impl.by.AggregationContext) A new or safely reusable AggregationContext",
  "noKeyPartitionBy": ":param inputTable: io.deephaven.engine.table.impl.QueryTable\n:return: io.deephaven.engine.table.impl.LocalTableMap",
  "partitionBy": "*Overload 1*  \n  :param inputTable: io.deephaven.engine.table.impl.QueryTable\n  :param dropKeys: boolean\n  :param attributeCopier: io.deephaven.engine.table.impl.by.PartitionByChunkedOperator.AttributeCopier\n  :param keysToPrepopulate: java.util.List<java.lang.Object>\n  :param groupByColumnNames: java.lang.String...\n  :return: io.deephaven.engine.table.impl.LocalTableMap\n  \n*Overload 2*  \n  :param inputTable: io.deephaven.engine.table.impl.QueryTable\n  :param dropKeys: boolean\n  :param attributeCopier: io.deephaven.engine.table.impl.by.PartitionByChunkedOperator.AttributeCopier\n  :param keysToPrepopulate: java.util.List<java.lang.Object>\n  :param groupByColumns: io.deephaven.engine.table.impl.select.SelectColumn[]\n  :return: io.deephaven.engine.table.impl.LocalTableMap\n  \n*Overload 3*  \n  :param aggregationControl: io.deephaven.engine.table.impl.by.AggregationControl\n  :param inputTable: io.deephaven.engine.table.impl.QueryTable\n  :param dropKeys: boolean\n  :param attributeCopier: io.deephaven.engine.table.impl.by.PartitionByChunkedOperator.AttributeCopier\n  :param keysToPrepopulate: java.util.List<java.lang.Object>\n  :param groupByColumnNames: java.lang.String...\n  :return: io.deephaven.engine.table.impl.LocalTableMap\n  \n*Overload 4*  \n  :param aggregationControl: io.deephaven.engine.table.impl.by.AggregationControl\n  :param inputTable: io.deephaven.engine.table.impl.QueryTable\n  :param dropKeys: boolean\n  :param attributeCopier: io.deephaven.engine.table.impl.by.PartitionByChunkedOperator.AttributeCopier\n  :param keysToPrepopulate: java.util.List<java.lang.Object>\n  :param groupByColumns: io.deephaven.engine.table.impl.select.SelectColumn[]\n  :return: io.deephaven.engine.table.impl.LocalTableMap",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.engine.table.impl.by.PartitionByAggregationFactory",
 "text": "An AggregationContextFactory used in the implementation of Table.partitionBy(boolean, java.lang.String...).",
 "typeName": "class"
}