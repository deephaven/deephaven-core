{
 "className": "io.deephaven.engine.table.impl.util.RuntimeMemory",
 "methods": {
  "getInstance": "Return a singleton RuntimeMemory object.\n\n:return: (io.deephaven.engine.table.impl.util.RuntimeMemory) the RuntimeMemory singleton",
  "read": "Read last collected samples.\n\n:param buf: (io.deephaven.engine.table.impl.util.RuntimeMemory.Sample) - a user provided buffer object to store the samples."
 },
 "path": "io.deephaven.engine.table.impl.util.RuntimeMemory",
 "text": "Cache memory utilization.\n\n \n >Calling Runtime.getRuntime().getFreeMemory() is expensive; and we may do it a lot when we have automatically\n computed tables, such as in a partitionBy. Instead of calling the runtime directly from the performance\n instrumentation framework, we call this class's methods; which cache the result for a configurable number of\n milliseconds to avoid repeated calls that are not likely any different./p>\n\n \n Additionally, we log our JVM heap usage on a regular basis; to enable users to quickly examine their worker logs and\n understand memory issues.",
 "typeName": "class"
}