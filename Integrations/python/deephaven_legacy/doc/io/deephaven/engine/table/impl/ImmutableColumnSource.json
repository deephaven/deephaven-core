{
 "className": "io.deephaven.engine.table.impl.ImmutableColumnSource",
 "methods": {
  "getPrev": ":param elementIndex: long\n:return: ImmutableColumnSource.DATA_TYPE",
  "getPrevBoolean": ":param elementIndex: long\n:return: java.lang.Boolean",
  "getPrevByte": ":param elementIndex: long\n:return: byte",
  "getPrevChar": ":param elementIndex: long\n:return: char",
  "getPrevDouble": ":param elementIndex: long\n:return: double",
  "getPrevFloat": ":param elementIndex: long\n:return: float",
  "getPrevInt": ":param elementIndex: long\n:return: int",
  "getPrevLong": ":param elementIndex: long\n:return: long",
  "getPrevShort": ":param elementIndex: long\n:return: short",
  "isImmutable": "Determine if this column source is immutable, meaning that the values at a given row key never change.\n\n:return: (boolean) true if the values at a given row key of the column source never change, false otherwise"
 },
 "path": "io.deephaven.engine.table.impl.ImmutableColumnSource",
 "text": "Sub-interface of ColumnSource for implementations that always use return true from\n isImmutable() and delegate all getPrev* methods to their current (non-previous) equivalents.",
 "typeName": "interface"
}