{
 "className": "io.deephaven.engine.page.Page$WithDefaults",
 "methods": {
  "fillChunk": "Populates the given destination chunk with data corresponding to the keys from the given RowSequence.\n\n:param context: (io.deephaven.engine.table.ChunkSource.FillContext) - A context containing all mutable/state related data used in retrieving the Chunk.\n:param destination: (io.deephaven.chunk.WritableChunk<? superPage.WithDefaults.ATTR>) - The chunk to be populated according to rowSequence. No assumptions shall be made about\n        the size of the chunk shall be made. The chunk will be populated from position [0,rowSequence.size()).\n:param rowSequence: (io.deephaven.engine.rowset.RowSequence) - An RowSequence representing the keys to be fetched",
  "fillChunkAppend": "**Incompatible overloads text - text from the first overload:**\n\n\n Similar to ChunkSource.fillChunk(FillContext, WritableChunk, RowSequence), except that the values from the\n ChunkSource are appended to destination, rather than placed at the beginning.\n \n\n The values to fill into destination are specified by RowSequenceIterator, whose\n RowSequence.firstRowKey() must exist, and must be represented by this PagingChunkSource\n (modulo {#link @mask}), otherwise results are undefined.\n \n\n No more than the elements in RowSequenceIterator, which are on the same page as\n RowSequence.firstRowKey(), have their values appended to destination, and consumed from\n RowSequenceIterator. Indices are on the same page when the bits outside of PagingChunkSource.mask() are identical.\n\n*Overload 1*  \n  :param context: (io.deephaven.engine.table.ChunkSource.FillContext) - A context containing all mutable/state related data used in retrieving the Chunk. In particular,\n          the Context may be used to provide a Chunk data pool\n  :param destination: (io.deephaven.chunk.WritableChunk<? superPage.WithDefaults.ATTR>) - The chunk to append the results to.\n  :param RowSequenceIterator: (io.deephaven.engine.rowset.RowSequence.Iterator) - The iterator to the ordered keys, which contain at least the keys to extract from this\n          ChunkSource. The keys to extract will be at the beginning of iteration order.\n  \n*Overload 2*  \n  :param context: io.deephaven.engine.table.ChunkSource.FillContext\n  :param destination: io.deephaven.chunk.WritableChunk<? superPage.WithDefaults.ATTR>\n  :param rowSequence: io.deephaven.engine.rowset.RowSequence"
 },
 "path": "io.deephaven.engine.page.Page.WithDefaults",
 "text": "Helper defaults for general pages.",
 "typeName": "interface"
}