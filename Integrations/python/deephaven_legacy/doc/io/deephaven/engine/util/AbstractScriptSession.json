{
 "className": "io.deephaven.engine.util.AbstractScriptSession",
 "methods": {
  "evaluateScript": "Evaluates the script and manages liveness of objects that are exported to the user. This method should be called\n from the serial executor as it manipulates static state.\n\n*Overload 1*  \n  :param script: (java.lang.String) - the code to execute\n  :param scriptName: (java.lang.String) - an optional script name, which may be ignored by the implementation, or used improve error\n          messages or for other internal purposes\n  :return: (io.deephaven.engine.util.ScriptSession.Changes) the changes made to the exportable objects\n  \n*Overload 2*  \n  :param scriptPath: (java.nio.file.Path) - the path to the script to execute\n  :return: (io.deephaven.engine.util.ScriptSession.Changes) the changes made to the exportable objects",
  "getTableDefinition": ":param var: java.lang.String\n:return: io.deephaven.engine.table.TableDefinition",
  "getVariableProvider": "A VariableProvider instance, for services like autocomplete which may want a limited \"just the variables\"\n view of our session state.\n\n:return: (io.deephaven.engine.util.VariableProvider) a VariableProvider instance backed by the global/binding context of this script session.",
  "getVariableType": ":param var: java.lang.String\n:return: java.lang.Class<?>",
  "snapshot": "Tracks changes in the script session bindings until the SnapshotScope is closed.\n\n This API should be considered unstable, see deephaven-core#2453.\n\n:param previousIfPresent: (io.deephaven.engine.util.ScriptSession.SnapshotScope) - if non-null, will be closed atomically with the new scope being opened.\n:return: (io.deephaven.engine.util.ScriptSession.SnapshotScope) a new SnapshotScope, so that the caller can control when to stop tracking changes to bindings."
 },
 "path": "io.deephaven.engine.util.AbstractScriptSession",
 "text": "This class exists to make all script sessions to be liveness artifacts, and provide a default implementation for\n evaluateScript which handles liveness and diffs in a consistent way.",
 "typeName": "class"
}