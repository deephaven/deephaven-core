{
 "className": "io.deephaven.engine.rowset.TrackingRowSet",
 "methods": {
  "copyPrev": "Get a copy of the value of this TrackingRowSet as of the end of the previous update graph cycle. As in other\n operations that return a WritableRowSet, the result must be closed by the caller when it\n is no longer needed. The result will never be a TrackingRowSet; use WritableRowSet.toTracking()\n on the result as needed.\n\n:return: (io.deephaven.engine.rowset.WritableRowSet) A copy of the previous value",
  "findPrev": "Returns the position in [0..(size-1)] where the row key is found in the previous value of this. If not\n found, then return (-(position it would be) - 1), as in Array.binarySearch.\n\n:param rowKey: (long) - The row key to search for\n:return: (long) A position from [0..(size-1)] if the row key was found. If the row key was not found, then\n         (-position - 1) as in Array.binarySearch",
  "firstRowKeyPrev": "Same as firstRowKey(), as of the end of the previous update graph cycle.\n\n:return: (long) The previous first row key",
  "getPrev": "Same as get(rowPosition), as of the end of the previous update graph cycle.\n\n:param rowPosition: (long) - A row position in this RowSet between 0 and sizePrev() - 1.\n:return: (long) The row key previously at the supplied row position",
  "indexer": "Get an opaque TrackingRowSet.Indexer object previously associated with this TrackingRowSet, or set and get one created\n with indexerFactory if this is the first invocation.\n\nNote: Java generics information - <INDEXER_TYPE extends io.deephaven.engine.rowset.TrackingRowSet.Indexer>\n\n:param indexerFactory: (java.util.function.Function<io.deephaven.engine.rowset.TrackingRowSet,INDEXER_TYPE>) - The indexer factory to be used if no indexer has been set previously\n:return: (INDEXER_TYPE) An opaque indexer object associated with this TrackingRowSet",
  "intSizePrev": "Get the size of this TrackingRowSet as of the end of the previous update graph cycle, constrained to be between\n 0 and 2147483647.\n\n:return: (int) The previous size, as an int",
  "lastRowKeyPrev": "Same as lastRowKey(), as of the end of the previous update graph cycle.\n\n:return: (long) The previous last row key",
  "sizePrev": "Get the size of this TrackingRowSet as of the end of the previous update graph cycle.\n\n:return: (long) The previous size",
  "writableCast": "Cast this RowSet reference to a WritableRowSet.\n\n:return: (io.deephaven.engine.rowset.TrackingWritableRowSet) this cast to a WritableRowSet"
 },
 "path": "io.deephaven.engine.rowset.TrackingRowSet",
 "text": "RowSet that internally tracks changes and maintains a consistent snapshot of its previous state, valid during\n the updating phase of its associated LogicalClock.\n \n Also adds support for hosting opaque index information.",
 "typeName": "interface"
}