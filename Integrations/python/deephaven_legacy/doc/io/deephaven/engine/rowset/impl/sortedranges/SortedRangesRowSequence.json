{
 "className": "io.deephaven.engine.rowset.impl.sortedranges.SortedRangesRowSequence",
 "methods": {
  "asRowSet": "Get a RowSet representation of this RowSequence.\n\n:return: (io.deephaven.engine.rowset.RowSet) A RowSet representation for the same row keys in the same order",
  "close": "Free any resources associated with this object.\n \n Using any RowSequence methods after close() is an error and may produce exceptions or undefined\n results.",
  "fillRowKeyChunk": "Fill the supplied WritableLongChunk with individual row keys from this RowSequence.\n \n The chunk's capacity is assumed to be big enough.\n\n:param chunkToFill: (io.deephaven.chunk.WritableLongChunk<? extendsio.deephaven.engine.rowset.chunkattributes.RowKeys>) - A chunk to fill with individual row keys",
  "fillRowKeyRangesChunk": "Fill the supplied WritableLongChunk with row key ranges from this RowSequence.\n \n The chunk's capacity is assumed to be big enough.\n\n:param chunkToFill: (io.deephaven.chunk.WritableLongChunk<io.deephaven.engine.rowset.chunkattributes.OrderedRowKeyRanges>) - A chunk to fill with row key ranges",
  "firstRowKey": "Get the first row key in this RowSequence.\n\n:return: (long) The first row key, or RowSequence.NULL_ROW_KEY if there is none.",
  "forEachRowKey": "For as long as the consumer wants more row keys, call accept on the consumer with the individual row key\n instances in this RowSequence, in increasing order.\n\n:param lac: (io.deephaven.util.datastructures.LongAbortableConsumer) - a consumer to feed the individual row key values to.\n:return: (boolean) false if the consumer provided ever returned false, true otherwise.",
  "forEachRowKeyRange": "For as long as the consumer wants more ranges, call accept on the consumer with the individual row key ranges in\n this RowSequence, in increasing order.\n\n:param lrac: (io.deephaven.util.datastructures.LongRangeAbortableConsumer) - a consumer to feed the individual row key values to.\n:return: (boolean) false if the consumer provided ever returned false, true otherwise.",
  "getAverageRunLengthEstimate": "Get an estimate of the average (mean) length of runs of adjacent row keys in this RowSequence.\n \n Implementations should strive to keep this method efficient (O(1) preferred) at the expense of accuracy.\n \n Empty RowSequence should return an arbitrary valid value, usually 1.\n\n:return: (long) An estimate of the average run length in this RowSequence, in [1, size()]",
  "getRowSequenceByKeyRange": "Get an ordered subset of the row keys in this RowSequence for a row key range. The returned set will be\n the intersection of the row keys in this with the row keys in the closed interval\n [startRowKeyInclusive, endRowKeyInclusive].\n\n The returned reference is owned by the caller, who should call close() when it is done with it.\n\n:param startRowKeyInclusive: (long) - The minimum row key to include\n:param endRowKeyInclusive: (long) - The maximum row key to include\n:return: (io.deephaven.engine.rowset.RowSequence) The subset as an RowSequence, which may be this",
  "getRowSequenceByPosition": "Get an ordered subset of the row keys in this RowSequence for a position range. The result will contain\n the set of row keys in this that lie at positions in the half-open range [startPositionInclusive,\n startPositionInclusive + length).\n\n The returned reference is owned by the caller, who should call close() when it is done with it.\n\n:param pos: (long) - The position of the first row key to include\n:param length: (long) - The number of row keys to include\n:return: (io.deephaven.engine.rowset.RowSequence) The subset as an RowSequence, which may be this",
  "getRowSequenceIterator": "Get an RowSequence.Iterator over this RowSequence.\n\n:return: (io.deephaven.engine.rowset.impl.sortedranges.SortedRangesRowSequence.Iterator) A new iterator, positioned at the first row key",
  "isEmpty": "True if the size of this RowSequence is zero.\n\n:return: (boolean) True if there are no elements in this RowSequence.",
  "lastRowKey": "Get the last row key in this RowSequence.\n\n:return: (long) The last row key, or RowSequence.NULL_ROW_KEY if there is none.",
  "rangesCountUpperBound": ":return: long",
  "size": "Get the number of row keys in this RowSequence.\n\n:return: (long) The size, in [0, Long.MAX_VALUE]"
 },
 "path": "io.deephaven.engine.rowset.impl.sortedranges.SortedRangesRowSequence",
 "typeName": "class"
}