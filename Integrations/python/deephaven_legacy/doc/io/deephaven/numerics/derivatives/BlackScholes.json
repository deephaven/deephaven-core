{
 "className": "io.deephaven.numerics.derivatives.BlackScholes",
 "methods": {
  "carryRho": "Computes the generalized Black-Scholes carryRho (first order partial derivative of option price with respect to\n cost-of-carry).\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "charm": "Computes the generalized Black-Scholes charm (first order partial derivative of Delta with respect to time to\n expiry).\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "delta": "Computes the generalized Black-Scholes delta (first order partial derivative of option price with respect to\n stock price).\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option delta",
  "driftlessTheta": "Computes the generalized Black-Scholes driftlessTheta (theta assuing the risk free rate and the cost of carry are\n zero).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "gamma": "Computes the generalized Black-Scholes gamma (second order partial derivative of option price with respect to\n stock price).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "gammaP": "Computes the generalized Black-Scholes percentage gamma (first order partial derivative of delta with respect to\n ln(stock price)).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "impliedVolBisect": "Generalized Black-Scholes implied vol fitter using a bisection algorithm.\n\n*Overload 1*  \n  :param P: (double) - option price\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param X: (double) - strike price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :return: (double) implied volatility\n  \n*Overload 2*  \n  :param P: (double) - option price\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param X: (double) - strike price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :param eps: (double) - volatility convergence tolerance\n  :param maxIters: (int) - maximum number of optimization iterations\n  :return: (double) implied volatility",
  "impliedVolNewton": "Generalized Black-Scholes implied vol fitter using a newton algorithm.\n\n*Overload 1*  \n  :param P: (double) - option price\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param X: (double) - strike price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :return: (double) implied volatility\n  \n*Overload 2*  \n  :param P: (double) - option price\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param X: (double) - strike price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :param eps: (double) - volatility convergence tolerance\n  :param maxIters: (int) - maximum number of optimization iterations\n  :return: (double) implied volatility",
  "impliedVolNewtonP": "Generalized Black-Scholes implied vol fitter using a newton algorithm based on log(vol).\n\n*Overload 1*  \n  :param P: (double) - option price\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param X: (double) - strike price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :return: (double) implied volatility\n  \n*Overload 2*  \n  :param P: (double) - option price\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param X: (double) - strike price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :param eps: (double) - volatility convergence tolerance\n  :param maxIters: (int) - maximum number of optimization iterations\n  :return: (double) implied volatility",
  "price": "Computes the generalized Black-Scholes option price.\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "rho": "Computes the generalized Black-Scholes rho (first order partial derivative of option price with respect to\n risk-free rate).\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "strikeDelta": "Computes the generalized Black-Scholes strikeDelta (first order partial derivative of option price with respect\n to strike price).\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "strikeFromDeltaBisect": "Finds the Generalized Black-Scholes strike from the delta.\n\n*Overload 1*  \n  :param delta: (double) - delta\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :param v: (double) - volatility\n  :return: (double) strike associated with the delta\n  \n*Overload 2*  \n  :param delta: (double) - delta\n  :param isCall: (java.lang.Boolean) - true for call; false for put.\n  :param S: (double) - underlying stock price\n  :param T: (double) - years to expiry\n  :param r: (double) - risk-free rate\n  :param b: (double) - cost-of-carry\n  :param v: (double) - volatility\n  :param eps: (double) - volatility convergence tolerance\n  :param maxIters: (int) - maximum number of optimization iterations\n  :return: (double) strike associated with the delta",
  "theta": "Computes the generalized Black-Scholes theta (first order partial derivative of option price with respect to time\n to expiry).\n\n:param isCall: (boolean) - true for call; false for put.\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "vega": "Computes the generalized Black-Scholes vega (first order partial derivative of option price with respect to\n volatility).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "vegaBleed": "Computes the generalized Black-Scholes vegaBleed (first order partial derivative of Vega with respect to time to\n expiry).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "vegaP": "Computes the generalized Black-Scholes percentage vega (first order partial derivative of vega with respect to\n ln(volatility)).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "vomma": "Computes the generalized Black-Scholes vomma (second order partial derivative of option price with respect to\n volatility).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price",
  "vommaP": "Computes the generalized Black-Scholes percentage vomma (first order partial derivative of Vega with respect to\n ln(volatility)).\n\n:param S: (double) - underlying stock price\n:param X: (double) - strike price\n:param T: (double) - years to expiry\n:param r: (double) - risk-free rate\n:param b: (double) - cost-of-carry\n:param v: (double) - volatility\n:return: (double) theoretical option price"
 },
 "path": "io.deephaven.numerics.derivatives.BlackScholes",
 "text": "A generalized Black-Scholes model for European options.",
 "typeName": "class"
}