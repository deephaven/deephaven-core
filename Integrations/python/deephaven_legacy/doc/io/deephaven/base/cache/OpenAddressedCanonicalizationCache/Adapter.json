{
 "className": "io.deephaven.base.cache.OpenAddressedCanonicalizationCache$Adapter",
 "methods": {
  "equals": "Note: equals(inputItem, cachedItem) implies hashCode(inputItem) == cachedItem.hashCode() must be true.\n\n:param inputItem: (OpenAddressedCanonicalizationCache.Adapter.INPUT_TYPE) - The input item\n:param cachedItem: (java.lang.Object) - The cached item\n:return: (boolean) True if inputItem is equal to cachedItem for the cache's purposes.",
  "hashCode": ":param inputItem: (OpenAddressedCanonicalizationCache.Adapter.INPUT_TYPE) - The input item\n:return: (int) Return a hash code for inputItem consistent with its cacheable form.",
  "makeCacheableItem": "Note: The following must be true: hashCode(inputItem) == outputItem.hashCode() && equals(inputItem,\n outputItem)\n\n:param inputItem: (OpenAddressedCanonicalizationCache.Adapter.INPUT_TYPE) - The input item\n:return: (OpenAddressedCanonicalizationCache.Adapter.OUTPUT_TYPE) A cacheable version of inputItem."
 },
 "path": "io.deephaven.base.cache.OpenAddressedCanonicalizationCache.Adapter",
 "text": "Allows cache users to supercede the equals() and hashCode() methods of their input items, and supply an\n alternative object to cache.",
 "typeName": "interface"
}