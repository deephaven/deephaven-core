{
 "className": "io.deephaven.base.text.Convert",
 "methods": {
  "appendDouble": "Append a decimal representation of a double to a ByteBuffer. Works as if\n Double.toString(double) were used.\n\n:param input: (double) - The double to be converted\n:param dest: (java.nio.ByteBuffer) - The ByteBuffer\n:return: (java.nio.ByteBuffer) dest",
  "appendISO8601": "Append an ISO 8601 representation of a broken-down time to a byte buffer. The output length is always 23 bytes\n plus the length of the GMT offset suffix: YYYY-MM-DDTHH:MM:SS.MMM<suffix>.\n\n:param year: (int) - the year\n:param month: (int) - the month\n:param day: (int) - the day of the month\n:param hour: (int) - the hour\n:param minute: (int) - the minute\n:param second: (int) - the second\n:param millis: (int) - the millis\n:param gmtOffsetSuffix: (byte[]) - the time zone suffix, or null for no suffix\n:param b: (java.nio.ByteBuffer) - the byte buffer\n:return: (java.nio.ByteBuffer) the byte buffer",
  "appendISO8601Micros": "**Incompatible overloads text - text from the first overload:**\n\nAppend an ISO 8601 representation of a broken-down time to a byte buffer. The output length is always 23 bytes\n plus the length of the GMT offset suffix: YYYY-MM-DDTHH:MM:SS.MMM<suffix>.\n\n*Overload 1*  \n  :param t: (long) - the timestamp to be converted, micros since 1970-01-01T00:00:00 GMT\n  :param gmtOffsetSuffix: (byte[]) - the time zone suffix, or null for no suffix\n  :param b: (java.nio.ByteBuffer) - the byte buffer\n  :return: (java.nio.ByteBuffer) the byte buffer\n  \n*Overload 2*  \n  :param year: (int) - the year\n  :param month: (int) - the month\n  :param day: (int) - the day of the month\n  :param hour: (int) - the hour\n  :param minute: (int) - the minute\n  :param second: (int) - the second\n  :param millis: (int) - the millis\n  :param micros: (int) - the micros\n  :param gmtOffsetSuffix: (byte[]) - the time zone suffix, or null for no suffix\n  :param b: (java.nio.ByteBuffer) - the byte buffer\n  :return: (java.nio.ByteBuffer) the byte buffer",
  "appendISO8601Millis": "Append an ISO 8601 representation of millis-since-the-epoch timestamp to a byte buffer. The output length is\n always 23 bytes plus the length of the GMT offset suffix: YYYY-MM-DDTHH:MM:SS.MMM<suffix>.\n\n:param t: (long) - the timestamp to be converted, millis since 1970-01-01T00:00:00 GMT\n:param gmtOffsetSuffix: (byte[]) - the time zone suffix, or null for no suffix\n:param b: (java.nio.ByteBuffer) - the byte buffer\n:return: (java.nio.ByteBuffer) the byte buffer",
  "appendInt": "Append a decimal representation of an integer to a byte buffer.\n\n:param n: (int) - the integer to be converted\n:param b: (java.nio.ByteBuffer) - the byte buffer\n:return: (java.nio.ByteBuffer) the byte buffer",
  "appendLong": "Append a decimal representation of a long to a byte buffer.\n\n:param n: (long) - the long to be converted\n:param b: (java.nio.ByteBuffer) - the byte buffer\n:return: (java.nio.ByteBuffer) the byte buffer",
  "appendShort": "Append a decimal representation of a short to a byte buffer.\n\n:param n: (short) - the integer to be converted\n:param b: (java.nio.ByteBuffer) - the byte buffer\n:return: (java.nio.ByteBuffer) the byte buffer"
 },
 "path": "io.deephaven.base.text.Convert",
 "typeName": "class"
}