{
 "className": "io.deephaven.base.LowGarbageArraySet",
 "methods": {
  "add": ":param t: LowGarbageArraySet.T\n:return: boolean",
  "clone": ":return: io.deephaven.base.LowGarbageArraySet<LowGarbageArraySet.T>",
  "contains": ":param o: java.lang.Object\n:return: boolean",
  "isEmpty": ":return: boolean",
  "iterator": ":return: java.util.Iterator<LowGarbageArraySet.T>",
  "remove": ":param o: java.lang.Object\n:return: boolean",
  "size": ":return: int"
 },
 "path": "io.deephaven.base.LowGarbageArraySet",
 "text": "A very simple Set for small sets (uses linear time algorithms) that creates no garbage (except when\n expanding). This set only has one Iterator, which is reused. This set is not thread safe.\n \n Note: This class extends HashSet rather than Set (or AbstractSet) only because one of the\n fields where we want to use it (sun.nio.ch.SelectorImpl#keys) is (improperly) declared as a HashSet rather\n than a Set.",
 "typeName": "class"
}