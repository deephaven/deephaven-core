{
 "className": "io.deephaven.base.verify.Require",
 "methods": {
  "contains": "require (collection != null && collection.contains(element))\n\n*Overload 1*  \n  Note: Java generics information - <C extends java.util.Collection<T>,\n  T>\n  \n  :param collection: C\n  :param collectionName: java.lang.String\n  :param element: T\n  :param elementName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: C\n  \n*Overload 2*  \n  Note: Java generics information - <C extends java.util.Collection<T>,\n  T>\n  \n  :param collection: C\n  :param collectionName: java.lang.String\n  :param element: T\n  :param elementName: java.lang.String\n  :return: C",
  "containsKey": "require (map != null && map.containsKey(key))\n\n*Overload 1*  \n  Note: Java generics information - <M extends java.util.Map<K,\n  V>,\n  K,\n  V>\n  \n  :param map: M\n  :param mapName: java.lang.String\n  :param key: K\n  :param keyName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: M\n  \n*Overload 2*  \n  Note: Java generics information - <M extends java.util.Map<K,\n  V>,\n  K,\n  V>\n  \n  :param map: M\n  :param mapName: java.lang.String\n  :param key: K\n  :param keyName: java.lang.String\n  :return: M",
  "elementsNeqInf": "*Overload 1*  \n  :param elements: double[]\n  :param name: java.lang.String\n  \n*Overload 2*  \n  :param elements: double[][]\n  :param name: java.lang.String",
  "elementsNeqNaN": "*Overload 1*  \n  :param elements: double[]\n  :param name: java.lang.String\n  \n*Overload 2*  \n  :param elements: double[][]\n  :param name: java.lang.String",
  "elementsNeqNull": "Note: Java generics information - <T>\n\n:param elements: T[]\n:param name: java.lang.String\n:return: T[]",
  "eq": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b0 == b1)\n\n*Overload 1*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  \n*Overload 3*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param numCallsBelowRequirer: int\n  \n*Overload 4*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  \n*Overload 5*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 6*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  \n*Overload 7*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param numCallsBelowRequirer: int\n  \n*Overload 8*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  \n*Overload 9*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 10*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  \n*Overload 11*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param numCallsBelowRequirer: int\n  \n*Overload 12*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  \n*Overload 13*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 14*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  \n*Overload 15*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param numCallsBelowRequirer: int\n  \n*Overload 16*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  \n*Overload 17*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 18*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  \n*Overload 19*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param numCallsBelowRequirer: int\n  \n*Overload 20*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  \n*Overload 21*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 22*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  \n*Overload 23*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param numCallsBelowRequirer: int\n  \n*Overload 24*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  \n*Overload 25*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 26*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  \n*Overload 27*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param numCallsBelowRequirer: int\n  \n*Overload 28*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  \n*Overload 29*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 30*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  \n*Overload 31*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param numCallsBelowRequirer: int\n  \n*Overload 32*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  \n*Overload 33*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 34*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  \n*Overload 35*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param numCallsBelowRequirer: int\n  \n*Overload 36*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object",
  "eqFalse": "require (b == false)\n\n*Overload 1*  \n  :param b: boolean\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param b: boolean\n  :param name: java.lang.String",
  "eqNull": "require (o == null)\n\n*Overload 1*  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param o: java.lang.Object\n  :param name: java.lang.String",
  "eqTrue": "require (b == true)\n\n*Overload 1*  \n  :param b: boolean\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param b: boolean\n  :param name: java.lang.String",
  "eqZero": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b == 0)\n\n*Overload 1*  \n  :param c: char\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param c: char\n  :param name: java.lang.String\n  \n*Overload 3*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 4*  \n  :param b: byte\n  :param name: java.lang.String\n  \n*Overload 5*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 6*  \n  :param s: short\n  :param name: java.lang.String\n  \n*Overload 7*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 8*  \n  :param i: int\n  :param name: java.lang.String\n  \n*Overload 9*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 10*  \n  :param l: long\n  :param name: java.lang.String\n  \n*Overload 11*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 12*  \n  :param f: float\n  :param name: java.lang.String\n  \n*Overload 13*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 14*  \n  :param d: double\n  :param name: java.lang.String",
  "equals": "require (o0 != null && o1 != null && o0.equals(o1))\n\n*Overload 1*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  \n*Overload 3*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param numCallsBelowRequirer: int\n  \n*Overload 4*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object",
  "exceptionNeverCaught": "**Incompatible overloads text - text from the first overload:**\n\nrequire (this exception is never caught, Exception e)\n\n*Overload 1*  \n  :param e: java.lang.Exception\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 2*  \n  :param e: java.lang.Exception\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 3*  \n  :param tryStatementDescription: java.lang.String\n  :param e: java.lang.Exception\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 4*  \n  :param tryStatementDescription: java.lang.String\n  :param e: java.lang.Exception\n  :return: io.deephaven.base.verify.RequirementFailure",
  "geq": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b0 >= b1)\n\n*Overload 1*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 2*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :return: char\n  \n*Overload 3*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 4*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :return: char\n  \n*Overload 5*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 6*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :return: byte\n  \n*Overload 7*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 8*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :return: byte\n  \n*Overload 9*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 10*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :return: short\n  \n*Overload 11*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 12*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :return: short\n  \n*Overload 13*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 14*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :return: int\n  \n*Overload 15*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 16*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :return: int\n  \n*Overload 17*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 18*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :return: long\n  \n*Overload 19*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 20*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :return: long\n  \n*Overload 21*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 22*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :return: float\n  \n*Overload 23*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 24*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :return: float\n  \n*Overload 25*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 26*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :return: double\n  \n*Overload 27*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 28*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :return: double",
  "geqZero": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b >= 0)\n\n*Overload 1*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 2*  \n  :param b: byte\n  :param name: java.lang.String\n  :return: byte\n  \n*Overload 3*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 4*  \n  :param s: short\n  :param name: java.lang.String\n  :return: short\n  \n*Overload 5*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 6*  \n  :param i: int\n  :param name: java.lang.String\n  :return: int\n  \n*Overload 7*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 8*  \n  :param l: long\n  :param name: java.lang.String\n  :return: long\n  \n*Overload 9*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 10*  \n  :param f: float\n  :param name: java.lang.String\n  :return: float\n  \n*Overload 11*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 12*  \n  :param d: double\n  :param name: java.lang.String\n  :return: double",
  "gt": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b0 > b1)\n\n*Overload 1*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 2*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :return: char\n  \n*Overload 3*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 4*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :return: char\n  \n*Overload 5*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 6*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :return: byte\n  \n*Overload 7*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 8*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :return: byte\n  \n*Overload 9*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 10*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :return: short\n  \n*Overload 11*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 12*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :return: short\n  \n*Overload 13*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 14*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :return: int\n  \n*Overload 15*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 16*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :return: int\n  \n*Overload 17*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 18*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :return: long\n  \n*Overload 19*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 20*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :return: long\n  \n*Overload 21*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 22*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :return: float\n  \n*Overload 23*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 24*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :return: float\n  \n*Overload 25*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 26*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :return: double\n  \n*Overload 27*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 28*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :return: double",
  "gtZero": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b > 0)\n\n*Overload 1*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 2*  \n  :param b: byte\n  :param name: java.lang.String\n  :return: byte\n  \n*Overload 3*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 4*  \n  :param s: short\n  :param name: java.lang.String\n  :return: short\n  \n*Overload 5*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 6*  \n  :param i: int\n  :param name: java.lang.String\n  :return: int\n  \n*Overload 7*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 8*  \n  :param l: long\n  :param name: java.lang.String\n  :return: long\n  \n*Overload 9*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 10*  \n  :param f: float\n  :param name: java.lang.String\n  :return: float\n  \n*Overload 11*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 12*  \n  :param d: double\n  :param name: java.lang.String\n  :return: double",
  "holdsLock": "require (o != null && (current thread holds o's lock))\n\n*Overload 1*  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param o: java.lang.Object\n  :param name: java.lang.String",
  "inRange": "**Incompatible overloads text - text from the first overload:**\n\nrequire (offset >= 0 && offset < length)\n\n*Overload 1*  \n  :param offset: int\n  :param offsetName: java.lang.String\n  :param length: int\n  :param lengthName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 2*  \n  :param offset: int\n  :param offsetName: java.lang.String\n  :param length: int\n  :param lengthName: java.lang.String\n  :return: int\n  \n*Overload 3*  \n  :param offset: int\n  :param offsetName: java.lang.String\n  :param start: int\n  :param startName: java.lang.String\n  :param end: int\n  :param endName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 4*  \n  :param offset: int\n  :param offsetName: java.lang.String\n  :param start: int\n  :param startName: java.lang.String\n  :param end: int\n  :param endName: java.lang.String\n  :return: int\n  \n*Overload 5*  \n  :param offset: long\n  :param offsetName: java.lang.String\n  :param length: long\n  :param lengthName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 6*  \n  :param offset: long\n  :param offsetName: java.lang.String\n  :param length: long\n  :param lengthName: java.lang.String\n  :return: long\n  \n*Overload 7*  \n  :param offset: long\n  :param offsetName: java.lang.String\n  :param start: long\n  :param startName: java.lang.String\n  :param end: long\n  :param endName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 8*  \n  :param offset: long\n  :param offsetName: java.lang.String\n  :param start: long\n  :param startName: java.lang.String\n  :param end: long\n  :param endName: java.lang.String\n  :return: long\n  \n*Overload 9*  \n  :param trialValue: double\n  :param endPointA: double\n  :param endPointB: double\n  :param name: java.lang.String\n  :return: double\n  \n*Overload 10*  \n  :param trialValue: float\n  :param endPointA: float\n  :param endPointB: float\n  :param name: java.lang.String\n  :return: float",
  "instanceOf": "require (o instanceof type)\n\n*Overload 1*  \n  Note: Java generics information - <T>\n  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param type: java.lang.Class<T>\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  Note: Java generics information - <T>\n  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param type: java.lang.Class<T>",
  "isAWTThread": "require (current thread is AWT Event Dispatch Thread)\n\n*Overload 1*  \n  \n  \n*Overload 2*  \n  :param numCallsBelowRequirer: int",
  "isNotAWTThread": "require (current thread is AWT Event Dispatch Thread)\n\n*Overload 1*  \n  \n  \n*Overload 2*  \n  :param numCallsBelowRequirer: int",
  "isSquare": ":param m: double[][]\n:param name: java.lang.String",
  "lengthEqual": "*Overload 1*  \n  :param a: int[]\n  :param name: java.lang.String\n  :param length: int\n  :param numCallsBelowRequirer: int\n  :return: int[]\n  \n*Overload 2*  \n  :param a: int[]\n  :param name: java.lang.String\n  :param length: int\n  :return: int[]",
  "leq": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b0 <= b1)\n\n*Overload 1*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 2*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :return: char\n  \n*Overload 3*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 4*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :return: char\n  \n*Overload 5*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 6*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :return: byte\n  \n*Overload 7*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 8*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :return: byte\n  \n*Overload 9*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 10*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :return: short\n  \n*Overload 11*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 12*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :return: short\n  \n*Overload 13*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 14*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :return: int\n  \n*Overload 15*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 16*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :return: int\n  \n*Overload 17*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 18*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :return: long\n  \n*Overload 19*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 20*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :return: long\n  \n*Overload 21*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 22*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :return: float\n  \n*Overload 23*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 24*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :return: float\n  \n*Overload 25*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 26*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :return: double\n  \n*Overload 27*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 28*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :return: double",
  "leqZero": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b <= 0)\n\n*Overload 1*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 2*  \n  :param b: byte\n  :param name: java.lang.String\n  :return: byte\n  \n*Overload 3*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 4*  \n  :param s: short\n  :param name: java.lang.String\n  :return: short\n  \n*Overload 5*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 6*  \n  :param i: int\n  :param name: java.lang.String\n  :return: int\n  \n*Overload 7*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 8*  \n  :param l: long\n  :param name: java.lang.String\n  :return: long\n  \n*Overload 9*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 10*  \n  :param f: float\n  :param name: java.lang.String\n  :return: float\n  \n*Overload 11*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 12*  \n  :param d: double\n  :param name: java.lang.String\n  :return: double",
  "lt": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b0 < b1)\n\n*Overload 1*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 2*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :return: char\n  \n*Overload 3*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 4*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :return: char\n  \n*Overload 5*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 6*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :return: byte\n  \n*Overload 7*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 8*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :return: byte\n  \n*Overload 9*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 10*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :return: short\n  \n*Overload 11*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 12*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :return: short\n  \n*Overload 13*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 14*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :return: int\n  \n*Overload 15*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 16*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :return: int\n  \n*Overload 17*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 18*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :return: long\n  \n*Overload 19*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 20*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :return: long\n  \n*Overload 21*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 22*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :return: float\n  \n*Overload 23*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 24*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :return: float\n  \n*Overload 25*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 26*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :return: double\n  \n*Overload 27*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 28*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :return: double",
  "ltZero": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b < 0)\n\n*Overload 1*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 2*  \n  :param b: byte\n  :param name: java.lang.String\n  :return: byte\n  \n*Overload 3*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 4*  \n  :param s: short\n  :param name: java.lang.String\n  :return: short\n  \n*Overload 5*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 6*  \n  :param i: int\n  :param name: java.lang.String\n  :return: int\n  \n*Overload 7*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 8*  \n  :param l: long\n  :param name: java.lang.String\n  :return: long\n  \n*Overload 9*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 10*  \n  :param f: float\n  :param name: java.lang.String\n  :return: float\n  \n*Overload 11*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 12*  \n  :param d: double\n  :param name: java.lang.String\n  :return: double",
  "neq": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b0 != b1)\n\n*Overload 1*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  \n*Overload 3*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param numCallsBelowRequirer: int\n  \n*Overload 4*  \n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  \n*Overload 5*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 6*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param name1: java.lang.String\n  \n*Overload 7*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  :param numCallsBelowRequirer: int\n  \n*Overload 8*  \n  :param c0: char\n  :param name0: java.lang.String\n  :param c1: char\n  \n*Overload 9*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 10*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param name1: java.lang.String\n  \n*Overload 11*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  :param numCallsBelowRequirer: int\n  \n*Overload 12*  \n  :param b0: byte\n  :param name0: java.lang.String\n  :param b1: byte\n  \n*Overload 13*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 14*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param name1: java.lang.String\n  \n*Overload 15*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  :param numCallsBelowRequirer: int\n  \n*Overload 16*  \n  :param s0: short\n  :param name0: java.lang.String\n  :param s1: short\n  \n*Overload 17*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 18*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :return: int\n  \n*Overload 19*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param numCallsBelowRequirer: int\n  \n*Overload 20*  \n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  \n*Overload 21*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 22*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param name1: java.lang.String\n  \n*Overload 23*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  :param numCallsBelowRequirer: int\n  \n*Overload 24*  \n  :param l0: long\n  :param name0: java.lang.String\n  :param l1: long\n  \n*Overload 25*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 26*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param name1: java.lang.String\n  \n*Overload 27*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  :param numCallsBelowRequirer: int\n  \n*Overload 28*  \n  :param f0: float\n  :param name0: java.lang.String\n  :param f1: float\n  \n*Overload 29*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 30*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  \n*Overload 31*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  :param numCallsBelowRequirer: int\n  \n*Overload 32*  \n  :param d0: double\n  :param name0: java.lang.String\n  :param d1: double\n  \n*Overload 33*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 34*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  \n*Overload 35*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param numCallsBelowRequirer: int\n  \n*Overload 36*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object",
  "neqFalse": "require (b != false)\n\n*Overload 1*  \n  :param b: boolean\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param b: boolean\n  :param name: java.lang.String",
  "neqInf": "require (o != +/-Inf)\n\n*Overload 1*  \n  :param o: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 2*  \n  :param o: double\n  :param name: java.lang.String\n  :return: double",
  "neqNaN": "require (o != NaN)\n\n*Overload 1*  \n  :param o: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 2*  \n  :param o: double\n  :param name: java.lang.String\n  :return: double",
  "neqNull": "require (o != null)\n\n*Overload 1*  \n  Note: Java generics information - <T>\n  \n  :param o: T\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: T\n  \n*Overload 2*  \n  Note: Java generics information - <T>\n  \n  :param o: T\n  :param name: java.lang.String\n  :return: T",
  "neqTrue": "require (b != true)\n\n*Overload 1*  \n  :param b: boolean\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param b: boolean\n  :param name: java.lang.String",
  "neqZero": "**Incompatible overloads text - text from the first overload:**\n\nrequire (b != 0)\n\n*Overload 1*  \n  :param c: char\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: char\n  \n*Overload 2*  \n  :param c: char\n  :param name: java.lang.String\n  :return: char\n  \n*Overload 3*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: byte\n  \n*Overload 4*  \n  :param b: byte\n  :param name: java.lang.String\n  :return: byte\n  \n*Overload 5*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: short\n  \n*Overload 6*  \n  :param s: short\n  :param name: java.lang.String\n  :return: short\n  \n*Overload 7*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: int\n  \n*Overload 8*  \n  :param i: int\n  :param name: java.lang.String\n  :return: int\n  \n*Overload 9*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: long\n  \n*Overload 10*  \n  :param l: long\n  :param name: java.lang.String\n  :return: long\n  \n*Overload 11*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: float\n  \n*Overload 12*  \n  :param f: float\n  :param name: java.lang.String\n  :return: float\n  \n*Overload 13*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 14*  \n  :param d: double\n  :param name: java.lang.String\n  :return: double",
  "nonEmpty": "*Overload 1*  \n  Note: Java generics information - <T>\n  \n  :param a: T[]\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: T[]\n  \n*Overload 2*  \n  Note: Java generics information - <T>\n  \n  :param a: T[]\n  :param name: java.lang.String\n  :return: T[]",
  "nonempty": "require (s != null && s.length() > 0)\n\n*Overload 1*  \n  :param s: java.lang.String\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: java.lang.String\n  \n*Overload 2*  \n  :param s: java.lang.String\n  :param name: java.lang.String\n  :return: java.lang.String",
  "normalized": "require d != {Infinity, -Infinity, NaN}.\n\n*Overload 1*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: double\n  \n*Overload 2*  \n  :param d: double\n  :param name: java.lang.String\n  :return: double",
  "notContains": "require (collection != null && !collection.contains(element))\n\n*Overload 1*  \n  Note: Java generics information - <C extends java.util.Collection<T>,\n  T>\n  \n  :param collection: C\n  :param collectionName: java.lang.String\n  :param element: T\n  :param elementName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: C\n  \n*Overload 2*  \n  Note: Java generics information - <C extends java.util.Collection<T>,\n  T>\n  \n  :param collection: C\n  :param collectionName: java.lang.String\n  :param element: T\n  :param elementName: java.lang.String\n  :return: C",
  "notContainsKey": "require (map != null && !map.containsKey(element))\n\n*Overload 1*  \n  Note: Java generics information - <M extends java.util.Map<K,\n  V>,\n  K,\n  V>\n  \n  :param map: M\n  :param mapName: java.lang.String\n  :param key: K\n  :param keyName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: M\n  \n*Overload 2*  \n  Note: Java generics information - <M extends java.util.Map<K,\n  V>,\n  K,\n  V>\n  \n  :param map: M\n  :param mapName: java.lang.String\n  :param key: K\n  :param keyName: java.lang.String\n  :return: M",
  "notContainsNull": "require (collection != null && !collection.stream().anyMatch(Objects::isNull)\n\n*Overload 1*  \n  Note: Java generics information - <C extends java.util.Collection<T>,\n  T>\n  \n  :param collection: C\n  :param collectionName: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: C\n  \n*Overload 2*  \n  Note: Java generics information - <C extends java.util.Collection<T>,\n  T>\n  \n  :param collection: C\n  :param collectionName: java.lang.String\n  :return: C",
  "notEquals": "require (o0 != null && o1 != null && !o0.equals(o1))\n\n*Overload 1*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  \n*Overload 3*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param numCallsBelowRequirer: int\n  \n*Overload 4*  \n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object",
  "notHoldsLock": "require (o != null && !(current thread holds o's lock))\n\n*Overload 1*  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param o: java.lang.Object\n  :param name: java.lang.String",
  "notInstanceOf": "require !(o instanceof type)\n\n*Overload 1*  \n  Note: Java generics information - <T>\n  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param type: java.lang.Class<T>\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  Note: Java generics information - <T>\n  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param type: java.lang.Class<T>",
  "requirement": "**Incompatible overloads text - text from the first overload:**\n\nrequire (condition, Object o0, String name0, ... )\n\n*Overload 1*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 2*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  \n*Overload 3*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param detailMessage: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 4*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param detailMessage: java.lang.String\n  \n*Overload 5*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 6*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  \n*Overload 7*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 8*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  \n*Overload 9*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param o2: java.lang.Object\n  :param name2: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 10*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: long\n  :param name0: java.lang.String\n  :param o1: long\n  :param name1: java.lang.String\n  :param o2: long\n  :param name2: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 11*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param o2: java.lang.Object\n  :param name2: java.lang.String\n  \n*Overload 12*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: long\n  :param name0: java.lang.String\n  :param o1: long\n  :param name1: java.lang.String\n  :param o2: long\n  :param name2: java.lang.String\n  \n*Overload 13*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param o2: java.lang.Object\n  :param name2: java.lang.String\n  :param o3: java.lang.Object\n  :param name3: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 14*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param o0: java.lang.Object\n  :param name0: java.lang.String\n  :param o1: java.lang.Object\n  :param name1: java.lang.String\n  :param o2: java.lang.Object\n  :param name2: java.lang.String\n  :param o3: java.lang.Object\n  :param name3: java.lang.String\n  \n*Overload 15*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 16*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  \n*Overload 17*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 18*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  \n*Overload 19*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 20*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param d1: double\n  :param name1: java.lang.String\n  \n*Overload 21*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param b2: boolean\n  :param name2: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 22*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param b2: boolean\n  :param name2: java.lang.String\n  \n*Overload 23*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param b2: boolean\n  :param name2: java.lang.String\n  :param b3: boolean\n  :param name3: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 24*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param b0: boolean\n  :param name0: java.lang.String\n  :param b1: boolean\n  :param name1: java.lang.String\n  :param b2: boolean\n  :param name2: java.lang.String\n  :param b3: boolean\n  :param name3: java.lang.String\n  \n*Overload 25*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param i0: int\n  :param name0: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 26*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param i0: int\n  :param name0: java.lang.String\n  \n*Overload 27*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 28*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param i0: int\n  :param name0: java.lang.String\n  :param i1: int\n  :param name1: java.lang.String\n  \n*Overload 29*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param l0: long\n  :param name0: java.lang.String\n  :param numCallsBelowRequirer: int\n  \n*Overload 30*  \n  :param condition: boolean\n  :param conditionText: java.lang.String\n  :param l0: long\n  :param name0: java.lang.String",
  "setOnFailureCallback": ":param newCallback: java.util.function.Consumer<io.deephaven.base.verify.RequirementFailure>\n:return: boolean",
  "statementNeverExecuted": "**Incompatible overloads text - text from the first overload:**\n\nrequire (statementDescription is never executed)\n\n*Overload 1*  \n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 2*  \n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 3*  \n  :param statementDescription: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 4*  \n  :param statementDescription: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure",
  "valueNeverOccurs": "**Incompatible overloads text - text from the first overload:**\n\nrequire (this value never occurs, Object o, name)\n\n*Overload 1*  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 2*  \n  :param o: java.lang.Object\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 3*  \n  :param b: boolean\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 4*  \n  :param b: boolean\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 5*  \n  :param c: char\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 6*  \n  :param c: char\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 7*  \n  :param b: byte\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 8*  \n  :param b: byte\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 9*  \n  :param s: short\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 10*  \n  :param s: short\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 11*  \n  :param i: int\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 12*  \n  :param i: int\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 13*  \n  :param l: long\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 14*  \n  :param l: long\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 15*  \n  :param f: float\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 16*  \n  :param f: float\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 17*  \n  :param d: double\n  :param name: java.lang.String\n  :param numCallsBelowRequirer: int\n  :return: io.deephaven.base.verify.RequirementFailure\n  \n*Overload 18*  \n  :param d: double\n  :param name: java.lang.String\n  :return: io.deephaven.base.verify.RequirementFailure"
 },
 "path": "io.deephaven.base.verify.Require",
 "text": "Requirement methods for simple runtime program verification. Failed requirements throw RequirementFailure.\n \n Methods:\n \n* void requirement(boolean condition, String conditionText[, String detailMessage][, int numCallsBelowRequirer])\n * void requirement(boolean condition, String conditionText, value0, String name0, value1, String name1, ... [, int\n numCallsBelowRequirer])\n \n\n* void statementNeverExecuted([int numCallsBelowRequirer])\n * void statementNeverExecuted(String statementDescription[, int numCallsBelowRequirer])\n * void exceptionNeverCaught(Exception caughtException[, int numCallsBelowRequirer])\n * void exceptionNeverCaught(String tryStatementDescription, Exception caughtException[, int numCallsBelowRequirer])\n * void valueNeverOccurs(value, String name[, int numCallsBelowRequirer])\n * void valuesNeverOccur(value0, name0, value1, name1, ... [, int numCallsBelowRequirer])\n \n\n* void holdsLock/notHoldsLock(Object, String name[, int numCallsBelowRequirer])\n \n\n* void instanceOf/notInstanceOf(Object, String name, Class type[, int numCallsBelowRequirer])\n \n\n* void eq/neq(boolean/char/byte/short/int/long/float/double, String name0,\n boolean/char/byte/short/int/long/float/double[, String name1][, int numCallsBelowRequirer])\n * void lt/leq/gt/geq(char/byte/short/int/long/float/double, String name0, char/byte/short/int/long/float/double[,\n String name1][, int numCallsBelowRequirer])\n \n\n* void eqFalse/neqFalse/eqTrue/neqTrue(boolean, String name[, int numCallsBelowRequirer])\n * void eqZero/neqZero(char/byte/short/int/long/float/double, String name[, int numCallsBelowRequirer])\n * void ltZero/leqZero/gtZero/geqZero(byte/short/int/long/float/double, String name[, int numCallsBelowRequirer])\n \n\n* void eq/neq(Object, name0, Object[, name1][, int numCallsBelowRequirer])\n * void eqNull/neqNull(Object, String name[, int numCallsBelowRequirer])\n \n\n* void equals(Object, String name0, Object, String name1[, int numCallsBelowRequirer])\n * void nonempty(String, String name[, int numCallsBelowRequirer])\n \n\n Naming Rationale:\n \n* eq, neq, lt, leq, gt, get correspond to ==, !=, , >=, e.g.,\n \n* For Object a and b, Require.eq(a, \"a\", b, \"b\") corresponds to require (a == b)\n * For Object o, Require.neqNull(o, \"o\") corresponds to require (o != null)\n * for int x, Require.eqZero(x, \"x\") corresponds to require (x == 0)\n \n* equals corresponds to Object.equals (preceded by necessary null checks), e.g.,\n \n* For Object a and b, Require.equals(a, \"a\", b, \"b\") corresponds to require (a!= null && b != null && a.equals(b))\n * for String s, Require.nonempty(s, \"s\") corresponds to require (s != null && s.length() != 0)",
 "typeName": "class"
}