{
 "className": "io.deephaven.base.stats.Counter",
 "methods": {
  "getTypeTag": ":return: char",
  "incrementFromSample": ":param n: long"
 },
 "path": "io.deephaven.base.stats.Counter",
 "text": "A statistic where each value represents a additive quantity, and thus the sum of the values does have meaning.\n Examples include event counts and processing duration. If the sum of the values does not have a useful\n interpretation, use State instead.\n \nValue.increment(long) updates the counter, recording a single value. This is the most common usage. (Value.sample(long)\n does exactly the same thing but is a poor verb to use with a Counter.)\n incrementFromSample(long) updates the counter, recording a value that is the difference between this sample\n and the last sample. (The first call just sets the \"last\" sample and does not record a value.) For example, this can\n be used to CPU usage rate when only a running total is available by periodically sampling the running total.",
 "typeName": "class"
}