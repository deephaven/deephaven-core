{
 "className": "io.deephaven.base.string.cache.StringCacheTypeAdapter",
 "methods": {
  "areEqual": "Compare key (Assumed to be a String *or* a StringCompatible) with value (created by this factory).\n\n:param key: (java.lang.CharSequence) - The key\n:param value: (StringCacheTypeAdapter.STRING_LIKE_TYPE) - The value\n:return: (boolean) True iff key and value are equal (according to StringCompatible's implementation).",
  "create": "Note: StringCache implementations may choose not hold a lock while invoking this method.\n\n*Overload 1*  \n  :param string: (java.lang.String) - The input String\n  :return: (StringCacheTypeAdapter.STRING_LIKE_TYPE) A newly allocated STRING_LIKE_TYPE with the same content as string.\n  \n*Overload 2*  \n  :param protoString: (io.deephaven.base.string.cache.StringCompatible) - The input StringCompatible\n  :return: (StringCacheTypeAdapter.STRING_LIKE_TYPE) A newly allocated STRING_LIKE_TYPE with the same content as protoString.",
  "empty": ":return: (StringCacheTypeAdapter.STRING_LIKE_TYPE) The implementation-appropriate empty STRING_LIKE_TYPE instance.",
  "getType": ":return: (java.lang.Class<StringCacheTypeAdapter.STRING_LIKE_TYPE>) The Class of the STRING_LIKE_TYPE instances created by this adapter."
 },
 "path": "io.deephaven.base.string.cache.StringCacheTypeAdapter",
 "text": "Abstracts type-specific functionality for use by StringCache implementations.",
 "typeName": "interface"
}