{
 "className": "io.deephaven.api.agg.Aggregation$Visitor",
 "methods": {
  "visit": "**Incompatible overloads text - text from the first overload:**\n\nVisit a column aggregation.\n\n*Overload 1*  \n  :param aggregations: (io.deephaven.api.agg.Aggregations) - The compound aggregation to visit\n  \n*Overload 2*  \n  :param columnAgg: (io.deephaven.api.agg.ColumnAggregation) - The column aggregation to visit\n  \n*Overload 3*  \n  :param columnAggs: (io.deephaven.api.agg.ColumnAggregations) - The compound column aggregation to visit\n  \n*Overload 4*  \n  :param count: (io.deephaven.api.agg.Count) - The count aggregation\n  \n*Overload 5*  \n  :param firstRowKey: (io.deephaven.api.agg.FirstRowKey) - The first row key aggregation\n  \n*Overload 6*  \n  :param lastRowKey: (io.deephaven.api.agg.LastRowKey) - The last row key aggregation\n  \n*Overload 7*  \n  :param partition: (io.deephaven.api.agg.Partition) - The partition aggregation"
 },
 "path": "io.deephaven.api.agg.Aggregation.Visitor",
 "text": "Visitor interface. Combines with Aggregation.walk(Visitor) in order to allow for type-safe Aggregation evaluation\n without switch statements or if-else blocks.",
 "typeName": "interface"
}