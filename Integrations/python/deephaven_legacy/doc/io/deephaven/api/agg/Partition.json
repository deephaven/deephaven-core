{
 "className": "io.deephaven.api.agg.Partition",
 "methods": {
  "column": ":return: io.deephaven.api.ColumnName",
  "includeGroupByColumns": "Whether group-by columns (sometimes referred to as \"key\" columns) should be included in the output sub-tables.\n\n:return: (boolean) Whether to include group-by columns in the output sub-tables",
  "of": "*Overload 1*  \n  :param name: io.deephaven.api.ColumnName\n  :return: io.deephaven.api.agg.Partition\n  \n*Overload 2*  \n  :param x: java.lang.String\n  :return: io.deephaven.api.agg.Partition\n  \n*Overload 3*  \n  :param name: io.deephaven.api.ColumnName\n  :param includeGroupByColumns: boolean\n  :return: io.deephaven.api.agg.Partition\n  \n*Overload 4*  \n  :param x: java.lang.String\n  :param includeGroupByColumns: boolean\n  :return: io.deephaven.api.agg.Partition",
  "walk": "Glue method to deliver this Aggregation to a AggSpec.Visitor.\n\nNote: Java generics information - <V extends io.deephaven.api.agg.Aggregation.Visitor>\n\n:param visitor: (V) - The visitor\n:return: (V) The visitor"
 },
 "path": "io.deephaven.api.agg.Partition",
 "text": "An Aggregation that provides a single output column with sub-tables of the input table for each aggregation\n group in the result.\n \n If the input table is refreshing, the sub-tables will be also. Note that the output column will never report\n modifications, only additions or removals; users should listen to the sub-tables individually or as a merged result\n in order to be notified of sub-table updates. This allows for fine-grained, parallelizable incremental updates, as\n distinct from the result of a grouping column\n aggregation.",
 "typeName": "class"
}