{
 "className": "io.deephaven.server.jetty.JettyBackedGrpcServer",
 "methods": {
  "getPort": "After the server is started, this will return the port it is using.\n\n:return: (int) the tcp port that the server is listening on after it has started",
  "join": "Blocks as long as the server is running, unless this thread is interrupted. If stopWithTimeout has been called\n and the timeout has expired, this will return, and the server will be stopped.",
  "start": "Starts the server, if possible. Otherwise, throws an exception. If successful, returns.",
  "stopWithTimeout": "Stops the server, using the specified timeout as a deadline. Returns immediately. Call GrpcServer.join() to block\n until this is completed.\n\n:param timeout: (long) - time to allow for a graceful shutdown before giving up and halting\n:param unit: (java.util.concurrent.TimeUnit) - unit to apply to the timeout"
 },
 "path": "io.deephaven.server.jetty.JettyBackedGrpcServer",
 "typeName": "class"
}