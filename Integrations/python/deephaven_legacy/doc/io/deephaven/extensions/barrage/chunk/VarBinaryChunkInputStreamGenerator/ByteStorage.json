{
 "className": "io.deephaven.extensions.barrage.chunk.VarBinaryChunkInputStreamGenerator$ByteStorage",
 "methods": {
  "getPayloadSize": "computes the size of the payload from sPos to ePos (inclusive)\n\n:param sPos: (int) - the first data item to include in this payload\n:param ePos: (int) - the last data item to include in this payload\n:return: (long) number of bytes in the payload",
  "isEmpty": ":return: boolean",
  "size": ":return: long",
  "write": "**Incompatible overloads text - text from the first overload:**\n\nWrites len bytes from the specified byte array\n starting at offset off to the underlying ByteChunk.\n\n*Overload 1*  \n  :param b: (int) - the byte to be written.\n  \n*Overload 2*  \n  :param b: (byte[]) - the data.\n  :param off: (int) - the start offset in the data.\n  :param len: (int) - the number of bytes to write.",
  "writePayload": "write payload from sPos to ePos (inclusive) to the output stream\n\n:param dos: (com.google.common.io.LittleEndianDataOutputStream) - the data output stream to populate with data\n:param sPos: (int) - the first data item to include in this payload\n:param ePos: (int) - the last data item to include in this payload\n:return: (long) number of bytes written to the outputstream"
 },
 "path": "io.deephaven.extensions.barrage.chunk.VarBinaryChunkInputStreamGenerator.ByteStorage",
 "typeName": "class"
}