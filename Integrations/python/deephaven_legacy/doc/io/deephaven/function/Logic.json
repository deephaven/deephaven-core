{
 "className": "io.deephaven.function.Logic",
 "methods": {
  "and": "Ands all of the values in the array together.\n\n*Overload 1*  \n  :param values: (java.lang.Boolean...) - values.\n  :return: (java.lang.Boolean) logical and of all the values in the array. By convention, returns true if the array is empty.\n  \n*Overload 2*  \n  :param values: (boolean...) - values.\n  :return: (java.lang.Boolean) logical and of all the values in the array. By convention, returns true if the array is empty.\n  \n*Overload 3*  \n  :param values: (io.deephaven.vector.BooleanVector) - values.\n  :return: (java.lang.Boolean) logical and of all the values in the array. By convention, returns true if the array is empty.\n  \n*Overload 4*  \n  :param values: (java.lang.Boolean[]) - values.\n  :param nullValue: (java.lang.Boolean) - value to use in place of null values.\n  :return: (java.lang.Boolean) logical and of all the values in the array. By convention, returns true if the array is empty.\n  \n*Overload 5*  \n  :param values: (io.deephaven.vector.BooleanVector) - values.\n  :param nullValue: (java.lang.Boolean) - value to use in place of null values.\n  :return: (java.lang.Boolean) logical and of all the values in the array. By convention, returns true if the array is empty.",
  "not": "Not of all values in an array.\n\n*Overload 1*  \n  :param values: (java.lang.Boolean...) - values.\n  :return: (java.lang.Boolean[]) logical not of all the values in the array.\n  \n*Overload 2*  \n  :param values: (boolean...) - values.\n  :return: (java.lang.Boolean[]) logical not of all the values in the array.",
  "or": "Ors all of the values in the array together.\n\n*Overload 1*  \n  :param values: (java.lang.Boolean...) - values.\n  :return: (java.lang.Boolean) logical or of all the values in the array. By convention, returns false if the array is empty.\n  \n*Overload 2*  \n  :param values: (boolean...) - values.\n  :return: (java.lang.Boolean) logical or of all the values in the array. By convention, returns false if the array is empty.\n  \n*Overload 3*  \n  :param values: (java.lang.Boolean[]) - values.\n  :param nullValue: (java.lang.Boolean) - value to use in place of null values.\n  :return: (java.lang.Boolean) logical or of all the values in the array. By convention, returns false if the array is empty."
 },
 "path": "io.deephaven.function.Logic",
 "text": "Logic functions.",
 "typeName": "class"
}