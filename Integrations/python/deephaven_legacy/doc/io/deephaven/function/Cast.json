{
 "className": "io.deephaven.function.Cast",
 "methods": {
  "castDouble": "**Incompatible overloads text - text from the first overload:**\n\nCasts a value to a double.\n\n*Overload 1*  \n  :param value: (byte) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double) cast value.\n  \n*Overload 2*  \n  :param value: (short) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double) cast value.\n  \n*Overload 3*  \n  :param value: (int) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double) cast value.\n  \n*Overload 4*  \n  :param value: (long) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double) cast value.\n  \n*Overload 5*  \n  :param value: (float) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double) cast value.\n  \n*Overload 6*  \n  :param value: (double) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double) cast value.\n  \n*Overload 7*  \n  :param value: (byte) - value\n  :return: (double) cast value.\n  \n*Overload 8*  \n  :param values: (byte...) - values\n  :return: (double[]) cast array.\n  \n*Overload 9*  \n  :param values: (byte[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 10*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 11*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 12*  \n  :param value: (short) - value\n  :return: (double) cast value.\n  \n*Overload 13*  \n  :param values: (short...) - values\n  :return: (double[]) cast array.\n  \n*Overload 14*  \n  :param values: (short[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 15*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 16*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 17*  \n  :param value: (int) - value\n  :return: (double) cast value.\n  \n*Overload 18*  \n  :param values: (int...) - values\n  :return: (double[]) cast array.\n  \n*Overload 19*  \n  :param values: (int[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 20*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 21*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 22*  \n  :param value: (long) - value\n  :return: (double) cast value.\n  \n*Overload 23*  \n  :param values: (long...) - values\n  :return: (double[]) cast array.\n  \n*Overload 24*  \n  :param values: (long[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 25*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 26*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 27*  \n  :param value: (float) - value\n  :return: (double) cast value.\n  \n*Overload 28*  \n  :param values: (float...) - values\n  :return: (double[]) cast array.\n  \n*Overload 29*  \n  :param values: (float[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 30*  \n  :param values: (io.deephaven.vector.FloatVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 31*  \n  :param values: (io.deephaven.vector.FloatVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 32*  \n  :param value: (double) - value\n  :return: (double) cast value.\n  \n*Overload 33*  \n  :param values: (double...) - values\n  :return: (double[]) cast array.\n  \n*Overload 34*  \n  :param values: (double[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.\n  \n*Overload 35*  \n  :param values: (io.deephaven.vector.DoubleVector) - values\n  :return: (double[]) cast array.\n  \n*Overload 36*  \n  :param values: (io.deephaven.vector.DoubleVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (double[]) cast array.",
  "castInt": "**Incompatible overloads text - text from the first overload:**\n\nCasts a value to an int.\n\n*Overload 1*  \n  :param value: (byte) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int) cast value.\n  \n*Overload 2*  \n  :param value: (short) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int) cast value.\n  \n*Overload 3*  \n  :param value: (int) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int) cast value.\n  \n*Overload 4*  \n  :param value: (long) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int) cast value.\n  \n*Overload 5*  \n  :param value: (byte) - value\n  :return: (int) cast value.\n  \n*Overload 6*  \n  :param values: (byte...) - values\n  :return: (int[]) cast array.\n  \n*Overload 7*  \n  :param values: (byte[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 8*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :return: (int[]) cast array.\n  \n*Overload 9*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 10*  \n  :param value: (short) - value\n  :return: (int) cast value.\n  \n*Overload 11*  \n  :param values: (short...) - values\n  :return: (int[]) cast array.\n  \n*Overload 12*  \n  :param values: (short[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 13*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :return: (int[]) cast array.\n  \n*Overload 14*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 15*  \n  :param value: (int) - value\n  :return: (int) cast value.\n  \n*Overload 16*  \n  :param values: (int...) - values\n  :return: (int[]) cast array.\n  \n*Overload 17*  \n  :param values: (int[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 18*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :return: (int[]) cast array.\n  \n*Overload 19*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 20*  \n  :param value: (long) - value\n  :return: (int) cast value.\n  \n*Overload 21*  \n  :param values: (long...) - values\n  :return: (int[]) cast array.\n  \n*Overload 22*  \n  :param values: (long[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.\n  \n*Overload 23*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :return: (int[]) cast array.\n  \n*Overload 24*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (int[]) cast array.",
  "castLong": "**Incompatible overloads text - text from the first overload:**\n\nCasts a value to a long.\n\n*Overload 1*  \n  :param value: (byte) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long) cast value.\n  \n*Overload 2*  \n  :param value: (short) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long) cast value.\n  \n*Overload 3*  \n  :param value: (int) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long) cast value.\n  \n*Overload 4*  \n  :param value: (long) - value\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long) cast value.\n  \n*Overload 5*  \n  :param value: (byte) - value\n  :return: (long) cast value.\n  \n*Overload 6*  \n  :param values: (byte...) - values\n  :return: (long[]) cast array.\n  \n*Overload 7*  \n  :param values: (byte[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 8*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 9*  \n  :param values: (io.deephaven.vector.ByteVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 10*  \n  :param value: (short) - value\n  :return: (long) cast value.\n  \n*Overload 11*  \n  :param values: (short...) - values\n  :return: (long[]) cast array.\n  \n*Overload 12*  \n  :param values: (short[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 13*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 14*  \n  :param values: (io.deephaven.vector.ShortVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 15*  \n  :param value: (int) - value\n  :return: (long) cast value.\n  \n*Overload 16*  \n  :param values: (int...) - values\n  :return: (long[]) cast array.\n  \n*Overload 17*  \n  :param values: (int[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 18*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 19*  \n  :param values: (io.deephaven.vector.IntVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 20*  \n  :param value: (long) - value\n  :return: (long) cast value.\n  \n*Overload 21*  \n  :param values: (long...) - values\n  :return: (long[]) cast array.\n  \n*Overload 22*  \n  :param values: (long[]) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array.\n  \n*Overload 23*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :return: (long[]) cast array.\n  \n*Overload 24*  \n  :param values: (io.deephaven.vector.LongVector) - values\n  :param checkFidelity: (boolean) - check to see if the cast preserves the value.\n  :return: (long[]) cast array."
 },
 "path": "io.deephaven.function.Cast",
 "text": "Functions for casting between types.",
 "typeName": "class"
}