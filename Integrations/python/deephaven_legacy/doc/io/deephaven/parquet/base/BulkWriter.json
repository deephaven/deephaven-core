{
 "className": "io.deephaven.parquet.base.BulkWriter",
 "methods": {
  "getByteBufferView": ":return: java.nio.ByteBuffer",
  "writeBulk": ":param bulkValues: BulkWriter.T\n:param rowCount: int",
  "writeBulkFilterNulls": "*Overload 1*  \n  :param bulkValues: BulkWriter.T\n  :param nullValue: BulkWriter.L\n  :param dlEncoder: org.apache.parquet.column.values.rle.RunLengthBitPackingHybridEncoder\n  :param rowCount: int\n  :return: io.deephaven.parquet.base.BulkWriter.WriteResult\n  \n*Overload 2*  \n  :param bulkValues: BulkWriter.T\n  :param nullValue: BulkWriter.L\n  :param rowCount: int\n  :return: io.deephaven.parquet.base.BulkWriter.WriteResult",
  "writeBulkVector": ":param bulkValues: BulkWriter.T\n:param repeatCount: java.nio.IntBuffer\n:param rlEncoder: org.apache.parquet.column.values.rle.RunLengthBitPackingHybridEncoder\n:param dlEncoder: org.apache.parquet.column.values.rle.RunLengthBitPackingHybridEncoder\n:param nonNullValueCount: int\n:param nullValue: BulkWriter.L\n:return: int"
 },
 "path": "io.deephaven.parquet.base.BulkWriter",
 "text": "Provides the option to write values of specific type in bulk The concrete type of the bulkValue object depends in the\n specific implementation",
 "typeName": "interface"
}