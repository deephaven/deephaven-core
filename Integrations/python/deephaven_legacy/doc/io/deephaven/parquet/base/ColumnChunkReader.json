{
 "className": "io.deephaven.parquet.base.ColumnChunkReader",
 "methods": {
  "getDictionarySupplier": ":return: (java.util.function.Supplier<org.apache.parquet.column.Dictionary>) Supplier for a Parquet dictionary for this column chunk",
  "getMaxRl": ":return: (int) The depth of the number of nested repeated fields this column is a part of. 0 means this is a simple\n         (non-repeating) field, 1 means this is a flat array.",
  "getPageFixedSize": ":return: (int) -1 if the current column doesn't guarantee fixed page size, otherwise the fixed page size",
  "getPageIterator": ":return: (io.deephaven.parquet.base.ColumnChunkReader.ColumnPageReaderIterator) An iterator over individual parquet pages",
  "getType": ":return: org.apache.parquet.schema.PrimitiveType",
  "numRows": ":return: (long) The number of rows in this ColumnChunk, or -1 if it's unknown.",
  "numValues": ":return: (long) The value stored under the corresponding ColumnMetaData.num_values field",
  "usesDictionaryOnEveryPage": ":return: (boolean) Whether this column chunk uses a dictionary-based encoding on every page"
 },
 "path": "io.deephaven.parquet.base.ColumnChunkReader",
 "typeName": "interface"
}