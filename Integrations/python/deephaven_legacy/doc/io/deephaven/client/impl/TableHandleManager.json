{
 "className": "io.deephaven.client.impl.TableHandleManager",
 "methods": {
  "execute": "*Overload 1*  \n  :param table: io.deephaven.qst.table.TableSpec\n  :return: io.deephaven.client.impl.TableHandle\n  \n*Overload 2*  \n  :param tables: java.lang.Iterable<io.deephaven.qst.table.TableSpec>\n  :return: java.util.List<io.deephaven.client.impl.TableHandle>\n  \n*Overload 3*  \n  :param tables: io.deephaven.qst.table.LabeledTables\n  :return: io.deephaven.qst.LabeledValues<io.deephaven.client.impl.TableHandle>",
  "executeInputs": "*Overload 1*  \n  :param logic: io.deephaven.qst.TableCreationLogic1Input\n  :param t1: io.deephaven.client.impl.TableHandle\n  :return: io.deephaven.client.impl.TableHandle\n  \n*Overload 2*  \n  :param logic: io.deephaven.qst.TableCreationLogic2Inputs\n  :param t1: io.deephaven.client.impl.TableHandle\n  :param t2: io.deephaven.client.impl.TableHandle\n  :return: io.deephaven.client.impl.TableHandle",
  "executeLogic": "*Overload 1*  \n  :param logic: io.deephaven.qst.TableCreationLogic\n  :return: io.deephaven.client.impl.TableHandle\n  \n*Overload 2*  \n  :param logics: java.lang.Iterable<io.deephaven.qst.TableCreationLogic>\n  :return: java.util.List<io.deephaven.client.impl.TableHandle>\n  \n*Overload 3*  \n  :param logic: io.deephaven.qst.TableCreationLabeledLogic\n  :return: io.deephaven.qst.LabeledValues<io.deephaven.client.impl.TableHandle>"
 },
 "path": "io.deephaven.client.impl.TableHandleManager",
 "text": "A table handle manager is able to execute tables,",
 "typeName": "interface"
}