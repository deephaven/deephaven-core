{
 "className": "io.deephaven.db.plot.AxisImpl",
 "methods": {
  "addOneClickChartModifier": ":param oneClickChartModifier: io.deephaven.db.plot.chartmodifiers.OneClickChartModifier",
  "addSwappableTable": ":param st: io.deephaven.db.plot.util.tables.SwappableTable",
  "addTableMapHandle": ":param map: io.deephaven.db.plot.util.tables.TableMapHandle",
  "axisColor": "Sets the color for this Axis line and tick marks.\n\n*Overload 1*  \n  :param color: io.deephaven.gui.color.Paint\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis\n  \n*Overload 2*  \n  :param color: java.lang.String\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "axisFormat": "Sets the AxisFormat for this Axis.\n\n:param format: io.deephaven.db.plot.axisformatters.AxisFormat\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "axisFormatPattern": "Sets the format pattern for this Axis's labels.\n\n:param pattern: java.lang.String\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "axisLabel": "Sets the label for this Axis.\n\n:param label: java.lang.String\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "axisLabelFont": "Sets the font for this Axis's label.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "businessTime": "Sets this Axis's AxisTransform as an AxisTransformBusinessCalendar.\n\n*Overload 1*  \n  :param calendar: io.deephaven.util.calendar.BusinessCalendar\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis using the specified business calendar.\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis using the business calendar from row 0 of the filtered sds for the business calendar.  If no value is found, no transform will be applied.\n  \n*Overload 3*  \n  :return: (io.deephaven.db.plot.AxisImpl) this Axis using the default business calendar.",
  "chart": "Gets this AxisImpl's id.\n\n:return: (io.deephaven.db.plot.ChartImpl) this AxisImpl's id",
  "copy": "Creates a copy of this Axis using a different chart.\n\n:param chart: (io.deephaven.db.plot.ChartImpl) - new chart.\n:return: (io.deephaven.db.plot.AxisImpl) axis copy.",
  "dim": "Gets the dimensionality of this AxisImpl.\n\n:return: (int) this AxisImpl's dimensionality",
  "getAxisTransform": "Gets the AxisTransform of this AxisImpl.\n\n:return: (io.deephaven.db.plot.axistransformations.AxisTransform) this AxisImpl's AxisTransform",
  "getColor": "Gets this AxisImpl's color.\n\n:return: (io.deephaven.gui.color.Paint) this AxisImpl's color",
  "getFormat": "Gets the AxisFormat of this AxisImpl.\n\n:return: (io.deephaven.db.plot.axisformatters.AxisFormat) this AxisImpl's AxisFormat",
  "getFormatPattern": "Gets the format pattern for this AxisImpl's tick labels.\n\n:return: (java.lang.String) this AxisImpl's tick labels' format pattern",
  "getGapBetweenMajorTicks": "Gets the gap between consecutive major ticks.\n\n:return: (double) the gap between consecutive major ticks",
  "getInvert": "Gets whether to invert this AxisImpl.\n\n:return: (boolean) whether to invert this AxisImpl.",
  "getLabel": "Gets this AxisImpl's label.\n\n:return: (java.lang.String) this AxisImpl's label",
  "getLabelFont": "Gets the Font of this AxisImpl's label.\n\n:return: (io.deephaven.db.plot.Font) this AxisImpl's label's Font",
  "getMajorTickLocations": "Gets the locations of the major ticks.\n\n:return: (double[]) the locations of the major ticks",
  "getMaxRange": "Gets the maximum of this AxisImpl's range.\n\n:return: (double) maximum of this AxisImpl's range",
  "getMinRange": "Gets the minimum of this AxisImpl's range.\n\n:return: (double) minimum of this AxisImpl's range",
  "getMinorTickCount": "Gets the number of minor ticks between consecutive major ticks.\n\n:return: (int) number of minor ticks between consecutive major ticks",
  "getOneClickChartModifiers": ":return: java.util.Set<io.deephaven.db.plot.chartmodifiers.OneClickChartModifier>",
  "getPlotInfo": ":return: io.deephaven.db.plot.errors.PlotInfo",
  "getSwappableTables": ":return: java.util.Set<io.deephaven.db.plot.util.tables.SwappableTable>",
  "getTableMapHandles": ":return: java.util.Set<io.deephaven.db.plot.util.tables.TableMapHandle>",
  "getTickLabelAngle": "Gets the angle in degrees at which the tick label text will be drawn.\n\n:return: (double) angle at which the tick label text will be drawn",
  "getTicksFont": "Gets the Font of this AxisImpl's tick labels.\n\n:return: (io.deephaven.db.plot.Font) this AxisImpl's tick label's Font",
  "getType": "Gets the type of axis.\n\n:return: (io.deephaven.db.plot.AxisImpl.Type) type of axis.",
  "id": "Gets this AxisImpl's id.\n\n:return: (int) this AxisImpl's id",
  "invert": "Inverts this Axis so that larger values are closer to the origin.\n\n*Overload 1*  \n  :return: (io.deephaven.db.plot.AxisImpl) this Axes\n  \n*Overload 2*  \n  :param invert: boolean\n  :return: (io.deephaven.db.plot.AxisImpl) this Axes",
  "isLog": "Whether this is a logarithmic axis.\n\n:return: (boolean) if this is a logarithmic axis, true; false otherwise",
  "isMajorTicksVisible": "Whether the major ticks are drawn.\n\n:return: (boolean) if the major ticks will be drawn, true; otherwise false",
  "isMinorTicksVisible": "Whether the minor ticks are drawn.\n\n:return: (boolean) if the minor ticks will be drawn, true; otherwise false",
  "isTimeAxis": "Whether this axis is time axis.\n\n:return: (boolean) boolean informing whether this axis is time axis",
  "log": "Sets the AxisTransform as log base 10.\n\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "max": "Sets the maximum range of this Axis.\n\n*Overload 1*  \n  :param max: double\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.AxisImpl) this Axes",
  "min": "Sets the minimum range of this Axis.\n\n*Overload 1*  \n  :param min: double\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis\n  \n*Overload 2*  \n  :param sds: io.deephaven.db.plot.filters.SelectableDataSet\n  :param valueColumn: java.lang.String\n  :return: (io.deephaven.db.plot.AxisImpl) this Axes",
  "minorTicks": "Sets the number of minor ticks between consecutive major ticks.\n These minor ticks are equally spaced.\n\n:param count: int\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "minorTicksVisible": "Sets whether minor ticks are drawn on this Axis.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "range": "Sets the range of this Axis to [min, max] inclusive.\n\n:param min: double\n:param max: double\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "setTimeAxis": "Sets the boolean representing whether this axis is time axis\n\n:param timeAxis: (boolean) - boolean representing whether this axis is time axis",
  "tickLabelAngle": "Sets the angle the tick labels of this Axis are drawn at.\n\n:param angle: double\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "ticks": "Sets the tick locations.\n\n*Overload 1*  \n  :param gapBetweenTicks: double\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis\n  \n*Overload 2*  \n  :param tickLocations: double[]\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "ticksFont": "Sets the font for this Axis's ticks.\n\n*Overload 1*  \n  :param font: io.deephaven.db.plot.Font\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis\n  \n*Overload 2*  \n  :param family: java.lang.String\n  :param style: java.lang.String\n  :param size: int\n  :return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "ticksVisible": "Sets whether ticks are drawn on this Axis.\n\n:param visible: boolean\n:return: (io.deephaven.db.plot.AxisImpl) this Axis",
  "transform": "Sets the AxisTransform for this Axis.\n\n:param transform: io.deephaven.db.plot.axistransformations.AxisTransform\n:return: (io.deephaven.db.plot.AxisImpl) this Axis"
 },
 "path": "io.deephaven.db.plot.AxisImpl",
 "text": "Represents an axis.",
 "typeName": "class"
}