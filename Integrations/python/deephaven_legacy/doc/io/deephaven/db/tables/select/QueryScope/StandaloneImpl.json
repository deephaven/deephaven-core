{
 "className": "io.deephaven.db.tables.select.QueryScope$StandaloneImpl",
 "methods": {
  "getParamNames": "Get all known scope variable names.\n\n:return: (java.util.Set<java.lang.String>) A collection of scope variable names.",
  "hasParamName": "Check if the scope has the given name.\n\n:param name: java.lang.String\n:return: (boolean) True iff the scope has the given param name",
  "putObjectFields": "Add an object's public members (referenced reflectively, not a shallow copy!) to this scope if supported.\n Note: This is an optional method.\n\n:param object: java.lang.Object",
  "putParam": "Add a parameter to the scope.\n\nNote: Java generics information - <T>\n\n:param name: java.lang.String\n:param value: T",
  "readParamValue": "Get the value of a given scope parameter by name.\n\n*Overload 1*  \n  Note: Java generics information - <T>\n  \n  :param name: java.lang.String\n  :return: (T) parameter value.\n  \n*Overload 2*  \n  Note: Java generics information - <T>\n  \n  :param name: java.lang.String\n  :param defaultValue: T\n  :return: (T) parameter value, or the default parameter value, if the value is not present."
 },
 "path": "io.deephaven.db.tables.select.QueryScope.StandaloneImpl",
 "typeName": "class"
}