{
 "className": "io.deephaven.db.tables.DefaultTableDefinition",
 "methods": {
  "append": ":param logOutput: io.deephaven.base.log.LogOutput\n:return: io.deephaven.base.log.LogOutput",
  "clone": ":return: io.deephaven.db.tables.DefaultTableDefinition",
  "copyValues": ":param x: io.deephaven.db.tables.DefaultTableDefinition",
  "equals": ":param obj: java.lang.Object\n:return: boolean",
  "getByte": "*Overload 1*  \n  :param index: int\n  :return: byte\n  \n*Overload 2*  \n  :param index: int[]\n  :return: byte\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: byte",
  "getColumnSet": ":return: io.deephaven.dataobjects.DataObjectColumnSet",
  "getColumnSetName": ":return: java.lang.String",
  "getColumnSetStatic": ":return: io.deephaven.dataobjects.DataObjectColumnSet",
  "getColumns": ":return: io.deephaven.db.tables.ColumnDefinition[]",
  "getDate": "*Overload 1*  \n  :param index: int\n  :return: java.util.Date\n  \n*Overload 2*  \n  :param index: int[]\n  :return: java.util.Date\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: java.util.Date",
  "getDouble": "*Overload 1*  \n  :param index: int\n  :return: double\n  \n*Overload 2*  \n  :param index: int[]\n  :return: double\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: double",
  "getInt": "*Overload 1*  \n  :param index: int\n  :return: int\n  \n*Overload 2*  \n  :param index: int[]\n  :return: int\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: int",
  "getLong": "*Overload 1*  \n  :param index: int\n  :return: long\n  \n*Overload 2*  \n  :param index: int[]\n  :return: long\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: long",
  "getName": ":return: java.lang.String",
  "getNamespace": ":return: java.lang.String",
  "getStorageType": ":return: int",
  "getString": "*Overload 1*  \n  :param index: int\n  :return: java.lang.String\n  \n*Overload 2*  \n  :param index: int[]\n  :return: java.lang.String\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: java.lang.String",
  "getValue": "*Overload 1*  \n  :param index: int\n  :return: java.lang.Object\n  \n*Overload 2*  \n  :param index: int[]\n  :return: java.lang.Object\n  \n*Overload 3*  \n  :param name: java.lang.String\n  :return: java.lang.Object",
  "hashCode": ":return: int",
  "readExternal": ":param in: java.io.ObjectInput",
  "safeClone": ":return: io.deephaven.db.tables.DefaultTableDefinition",
  "setByte": "*Overload 1*  \n  :param index: int\n  :param data: byte\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: byte",
  "setColumns": ":param columns: io.deephaven.db.tables.ColumnDefinition[]",
  "setDate": "*Overload 1*  \n  :param index: int\n  :param data: java.util.Date\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: java.util.Date",
  "setDouble": "*Overload 1*  \n  :param index: int\n  :param data: double\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: double",
  "setInt": "*Overload 1*  \n  :param index: int\n  :param data: int\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: int",
  "setLong": "*Overload 1*  \n  :param index: int\n  :param data: long\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: long",
  "setName": ":param name: java.lang.String",
  "setNamespace": ":param namespace: java.lang.String",
  "setStorageType": ":param storageType: int",
  "setString": "*Overload 1*  \n  :param index: int\n  :param data: java.lang.String\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: java.lang.String",
  "setValue": "*Overload 1*  \n  :param index: int\n  :param data: java.lang.Object\n  \n*Overload 2*  \n  :param name: java.lang.String\n  :param value: java.lang.Object",
  "toString": ":return: java.lang.String",
  "writeExternal": ":param out: java.io.ObjectOutput"
 },
 "path": "io.deephaven.db.tables.DefaultTableDefinition",
 "typeName": "class"
}