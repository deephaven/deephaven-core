{
 "className": "io.deephaven.web.shared.fu.IdentityHashSet",
 "methods": {
  "add": ":param t: IdentityHashSet.T\n:return: boolean",
  "contains": ":param o: java.lang.Object\n:return: boolean",
  "isEmpty": ":return: boolean",
  "iterator": ":return: java.util.Iterator<IdentityHashSet.T>",
  "remove": ":param o: java.lang.Object\n:return: boolean",
  "size": ":return: int"
 },
 "path": "io.deephaven.web.shared.fu.IdentityHashSet",
 "text": "A set that internally wraps an IdentityHashMap.\n\n Should be very fast for pooled objects, and completely wrong for different instances of Object which .equal() each\n other.\n\n Use only if you can guarantee type parameter T is a pooled object (TableHandle, JsTable, ClientTableState, etc.)",
 "typeName": "class"
}