// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace io.deephaven.barrage.flatbuf
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BarragePublicationOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static BarragePublicationOptions GetRootAsBarragePublicationOptions(ByteBuffer _bb) { return GetRootAsBarragePublicationOptions(_bb, new BarragePublicationOptions()); }
  public static BarragePublicationOptions GetRootAsBarragePublicationOptions(ByteBuffer _bb, BarragePublicationOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BarragePublicationOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Deephaven reserves a value in the range of primitives as a custom NULL value. This enables more efficient transmission
  /// by eliminating the additional complexity of the validity buffer.
  public bool UseDeephavenNulls { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<io.deephaven.barrage.flatbuf.BarragePublicationOptions> CreateBarragePublicationOptions(FlatBufferBuilder builder,
      bool use_deephaven_nulls = false) {
    builder.StartTable(1);
    BarragePublicationOptions.AddUseDeephavenNulls(builder, use_deephaven_nulls);
    return BarragePublicationOptions.EndBarragePublicationOptions(builder);
  }

  public static void StartBarragePublicationOptions(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddUseDeephavenNulls(FlatBufferBuilder builder, bool useDeephavenNulls) { builder.AddBool(0, useDeephavenNulls, false); }
  public static Offset<io.deephaven.barrage.flatbuf.BarragePublicationOptions> EndBarragePublicationOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<io.deephaven.barrage.flatbuf.BarragePublicationOptions>(o);
  }
}


static public class BarragePublicationOptionsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*UseDeephavenNulls*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
