plugins {
    id 'java-library'
    id 'io.deephaven.project.register'
}

dependencies {
    api project(':authentication')
    api project(':authorization')
    api project(':server')
    api(project(':Integrations')) {
        because 'downstream dagger compile'
    }

    implementation project(":util-thread")

    runtimeOnly(project(':web'))

    implementation libs.dagger
    annotationProcessor libs.dagger.compiler

    testImplementation libs.dagger
    testAnnotationProcessor libs.dagger.compiler

    implementation platform(libs.grpc.bom)
    implementation platform(libs.jetty11.bom)

    api libs.jakarata.servlet.api
    implementation libs.jetty11.servlet
    implementation libs.jetty11.servlets
    implementation libs.jetty11.webapp
    implementation libs.jetty11.http2.server
    implementation libs.jetty11.alpn.server
    // TODO(deephaven-core#2506): Support for alternative ALPN implementations
    runtimeOnly libs.jetty11.alpn.java.server

//    implementation 'io.grpc:grpc-servlet-jakarta'
    api(project(':grpc-java:grpc-servlet-jakarta')) {
        because 'downstream dagger compile'
    }
    implementation project(':grpc-java:grpc-servlet-websocket-jakarta')
    implementation libs.jetty11.websocket.jakarta.server

    compileOnly project(':util-immutables')
    annotationProcessor libs.immutables.value

    implementation project(':ssl-kickstart')
    implementation libs.sslcontext.kickstart.jetty

    implementation project(':grpc-java:grpc-mtls')

    testImplementation project(':server-test-utils')
    testImplementation libs.junit4
    testImplementation libs.assertj

    testRuntimeOnly project(':log-to-slf4j')
    testRuntimeOnly libs.slf4j.simple
}

test.systemProperty "PeriodicUpdateGraph.allowUnitTestMode", false

apply plugin: 'io.deephaven.java-open-nio'
