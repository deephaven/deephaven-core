plugins {
    id 'java-library'
    id 'io.deephaven.project.register'
}

dependencies {
    implementation project(':authentication')
    implementation project(':authorization')
    implementation project(':engine-table')
    implementation project(':extensions-csv')
    implementation project(':extensions-arrow')
    implementation project(':extensions-parquet-table')
    implementation project(':extensions-performance')
    implementation project(':extensions-jdbc')
    implementation project(':Util');
    implementation project(':Integrations')
    implementation depCommonsLang3
    implementation libs.commons.text

    implementation libs.javaparser.core
    implementation project(':open-api-lang-parser')

    api(project(':java-client-barrage'))
    api(project(':java-client-session-dagger')) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }
    implementation 'org.hdrhistogram:HdrHistogram:2.1.12'

    implementation project(':proto:proto-backplane-grpc-flight')
    api(project(':open-api-lang-tools')) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }
    api(project(':log-factory')) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }
    implementation libs.slf4j.jul.to.slf4j
    api(project(':application-mode')) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }
    implementation 'com.github.f4b6a3:uuid-creator:5.2.0'

    api(project(':Configuration')) {
        because 'jetty/netty implementations will access the configuration in their main()s'
    }

    api project(':ssl-config')

    implementation libs.flatbuffers.java

    implementation libs.dagger
    annotationProcessor libs.dagger.compiler

    testImplementation libs.dagger
    testAnnotationProcessor libs.dagger.compiler

    compileOnly libs.autoservice
    annotationProcessor libs.autoservice.compiler
    testCompileOnly libs.autoservice
    testAnnotationProcessor libs.autoservice.compiler

    compileOnly project(':util-immutables')
    annotationProcessor libs.immutables

    implementation project(':Plot')

    implementation project(':ClientSupport')

    if ('true' == project.findProperty('extensions.classgraph.enabled')) {
        runtimeOnly project(':extensions-classgraph')
    }
    testImplementation project(':extensions-classgraph')

    if ('true' == project.findProperty('extensions.suanshu.enabled')) {
        runtimeOnly project(':extensions-suanshu')
    }

    api(project(':plugin')) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }
    api(project(':plugin-dagger')) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }

    runtimeOnly project(':plugin-figure')
    runtimeOnly project(':plugin-partitionedtable')
    runtimeOnly project(':plugin-hierarchicaltable')
    implementation project(':plugin-gc-app')

    api platform(libs.grpc.bom)

    api(libs.grpc.services) {
        because 'downstream dagger compile, see deephaven-core#1722'
    }

    implementation project(':grpc-java:grpc-mtls')

    implementation 'dev.dirs:directories:26'

    testImplementation project(':server-test-utils')

    runtimeOnly project(':Numerics'), project(':extensions-kafka')
    testImplementation libs.assertj

    testRuntimeOnly project(':log-to-slf4j')
    testRuntimeOnly libs.slf4j.simple

    runtimeOnly project(':authentication:example-providers:psk')
}

TestTools.addEngineOutOfBandTest(project)

test {
    systemProperty 'ApplicationConfigs.testAppDir', layout.projectDirectory.dir('src/test/app.d/').toString()
}
