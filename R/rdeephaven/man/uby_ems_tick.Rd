% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_by_ops_wrapper.R
\name{uby_ems_tick}
\alias{uby_ems_tick}
\title{Exponential moving sum by group with ticks as the decay unit}
\arguments{
\item{decay_ticks}{Numeric scalar denoting the decay rate in ticks.}

\item{cols}{String or list of strings denoting the column(s) to operate on. Can be renaming expressions, i.e. “new_col = col”.
Default is to compute the exponential moving sum for all non-grouping columns.}

\item{operation_control}{OperationControl that defines how special cases will behave. See \code{?op_control} for more information.}
}
\value{
\code{UpdateByOp} to be used in a call to \code{update_by()}.
}
\description{
Creates an exponential moving sum (EMS) UpdateByOp for each column in \code{cols}, using ticks as the decay unit.
}
\details{
The formula used is
\deqn{a = e^{\frac{-1}{\tau}}}
\deqn{\mathcal{S}_0 = x_0}
\deqn{\mathcal{S}_i = a*\mathcal{S}_{i-1} + x_i}

Where:
\itemize{
\item \eqn{\tau} is \code{decay_ticks}, an input parameter to the method.
\item \eqn{\mathcal{S}_i} is the exponential moving sum of column \eqn{X} at step \eqn{i}.
\item \eqn{x_i} is the current value.
\item \eqn{i} denotes the time step, ranging from \eqn{i=1} to \eqn{i = n-1}, where \eqn{n} is the number of elements in \eqn{X}.
}

This function acts on aggregation groups specified with the \code{by} parameter of the \code{update_by()} caller function.
The aggregation groups are defined by the unique combinations of values in the \code{by} columns. For example,
if \code{by = c("A", "B")}, then the aggregation groups are defined by the unique combinations of values in the
\code{A} and \code{B} columns.

This function, like other Deephaven \code{uby} functions, is a generator function. That is, its output is another
function called an \code{\link{UpdateByOp}} intended to be used in a call to \code{update_by()}. This detail is typically
hidden from the user. However, it is important to understand this detail for debugging purposes, as the output of
a \code{uby} function can otherwise seem unexpected.

For more information, see the vignette on \code{uby} functions by running
\code{vignette("update_by")}.
}
\examples{
\dontrun{
library(rdeephaven)

# connecting to Deephaven server
client <- Client$new("localhost:10000", auth_type = "psk", auth_token = "my_secret_token")

# create data frame, push to server, retrieve TableHandle
df <- data.frame(
  timeCol = seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date() + 0.01), by = "1 sec")[1:500],
  boolCol = sample(c(TRUE, FALSE), 500, TRUE),
  col1 = sample(10000, size = 500, replace = TRUE),
  col2 = sample(10000, size = 500, replace = TRUE),
  col3 = 1:500
)
th <- client$import_table(df)

# compute 10-row exponential moving sum of col1 and col2
th1 <- th$
  update_by(uby_ems_tick(decay_ticks = 10, cols = c("col1Ems = col1", "col2Ems = col2")))

# compute 5-row exponential moving sum of col1 and col2, grouped by boolCol
th2 <- th$
  update_by(uby_ems_tick(decay_ticks = 5, cols = c("col1Ems = col1", "col2Ems = col2")), by = "boolCol")

# compute 20-row exponential moving sum of col1 and col2, grouped by boolCol and parity of col3
th3 <- th$
  update("col3Parity = col3 \% 2")$
  update_by(uby_ems_tick(decay_ticks = 20, cols = c("col1Ems = col1", "col2Ems = col2")), by = c("boolCol", "col3Parity"))

client$close()
}

}
