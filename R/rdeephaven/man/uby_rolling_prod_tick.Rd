% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_by_ops_wrapper.R
\name{uby_rolling_prod_tick}
\alias{uby_rolling_prod_tick}
\title{Rolling prod with ticks as the windowing unit}
\arguments{
\item{cols}{String or list of strings denoting the column(s) to operate on. Can be renaming expressions, i.e. “new_col = col”.
Default is to compute the rolling sum for all non-grouping columns.}

\item{rev_ticks}{Integer scalar denoting the look-behind window size in number of rows.}

\item{fwd_ticks}{Integer scalar denoting the look-ahead window size in number of rows. Default is 0.}
}
\value{
UpdateByOp to be used in \code{update_by()}.
}
\description{
Creates a rolling product UpdateByOp for each column in \code{cols}, using ticks as the windowing unit.
}
\details{
Ticks are row counts, and you may specify the reverse and forward window in number of rows to include.
The current row is considered to belong to the reverse window but not the forward window.
Also, negative values are allowed and can be used to generate completely forward or completely reverse windows.
Here are some examples of window values:
\itemize{
\item \verb{rev_ticks = 1, fwd_ticks = 0} - contains only the current row
\item \verb{rev_ticks = 10, fwd_ticks = 0} - contains 9 previous rows and the current row
\item \verb{rev_ticks = 0, fwd_ticks = 10} - contains the following 10 rows, excludes the current row
\item \verb{rev_ticks = 10, fwd_ticks = 10} - contains the previous 9 rows, the current row and the 10 rows following
\item \verb{rev_ticks = 10, fwd_ticks = -5} - contains 5 rows, beginning at 9 rows before, ending at 5 rows before
the current row (inclusive)
\item \verb{rev_ticks = 11, fwd_ticks = -1} - contains 10 rows, beginning at 10 rows before, ending at 1 row before
the current row (inclusive)
\item \verb{rev_ticks = -5, fwd_ticks = 10} - contains 5 rows, beginning 5 rows following, ending at 10 rows following
the current row (inclusive)
}

The aggregation groups that this function acts on are defined with the \code{by} parameter of the \code{update_by()} caller
function. The aggregation groups are defined by the unique combinations of values in the \code{by} columns. For example,
if \code{by = c("A", "B")}, then the aggregation groups are defined by the unique combinations of values in the
\code{A} and \code{B} columns.

This function, like the other Deephaven \verb{uby_*} functions, is a generator function. That is, its output is another
function that is intended to be used in a call to \code{update_by()}. This detail is typically hidden from the user by
\code{update_by()}, which calls the generated functions internally. However, it is important to understand this detail
for debugging purposes, as the output of a \verb{uby_*} function can otherwise seem unexpected.
}
\examples{
print("hello!")

}
