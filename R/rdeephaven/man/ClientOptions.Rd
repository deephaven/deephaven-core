% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client_options_wrapper.R
\docType{class}
\name{ClientOptions}
\alias{ClientOptions}
\title{Deephaven ClientOptions}
\description{
Client options provide a simple interface to the Deephaven server's authentication protocols.
This makes it easy to connect to a Deephaven server with any flavor of authentication, and shields the API from
any future changes to the underlying implementation.

Currently, three different kinds of authentication that a Deephaven server might be using are suported:

- "default": Default (or anonymous) authentication does not require any username or password. If
   running the Deephaven server locally, this is probably the kind of authentication needed.

- "basic": Basic authentication requires a standard username and password pair.

- "custom": Custom authentication requires general key-value pairs.

In addition to setting the authentication parameters when connecting to a client, a console can be
started in one of our supported server languages. Python and Groovy are currently supported, and the
user must ensure that the server being connected to was started with support for the desired console language.
}
\examples{

# connect to a Deephaven server with a Python console running on "localhost:10000" using anonymous 'default' authentication
client_options <- ClientOptions$new()
client <- Client$new(target="localhost:10000", client_options=client_options)

# connect to a secure Deephaven server with a Groovy console using username/password authentication
client_options <- ClientOptions$new()
client_options$set_basic_authentication(username="user", password="p@ssw0rd123")
client_options$set_session_type("groovy")
client <- Client$new(target="url/to/secure/server", client_options=client_options)
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ClientOptions-new}{\code{ClientOptions$new()}}
\item \href{#method-ClientOptions-set_default_authentication}{\code{ClientOptions$set_default_authentication()}}
\item \href{#method-ClientOptions-set_basic_authentication}{\code{ClientOptions$set_basic_authentication()}}
\item \href{#method-ClientOptions-set_custom_authentication}{\code{ClientOptions$set_custom_authentication()}}
\item \href{#method-ClientOptions-set_session_type}{\code{ClientOptions$set_session_type()}}
\item \href{#method-ClientOptions-use_tls}{\code{ClientOptions$use_tls()}}
\item \href{#method-ClientOptions-add_int_option}{\code{ClientOptions$add_int_option()}}
\item \href{#method-ClientOptions-add_string_option}{\code{ClientOptions$add_string_option()}}
\item \href{#method-ClientOptions-add_extra_header}{\code{ClientOptions$add_extra_header()}}
\item \href{#method-ClientOptions-clone}{\code{ClientOptions$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-new"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-new}{}}}
\subsection{Method \code{new()}}{
Create a ClientOptions instance. This will default to using default (anonymous) authentication and a Python console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-set_default_authentication"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-set_default_authentication}{}}}
\subsection{Method \code{set_default_authentication()}}{
Use default (anonymous) authentication. If running a Deephaven server locally, this is likely the kind of authentication needed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$set_default_authentication()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-set_basic_authentication"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-set_basic_authentication}{}}}
\subsection{Method \code{set_basic_authentication()}}{
Use basic (username/password based) authentication.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$set_basic_authentication(username, password)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{Username of the account to use for authentication, supplied as a string.}

\item{\code{password}}{Password of the account, supplied as a string.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-set_custom_authentication"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-set_custom_authentication}{}}}
\subsection{Method \code{set_custom_authentication()}}{
Use custom (general key/value based) authentication.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$set_custom_authentication(auth_key, auth_value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{auth_key}}{Key to use for authentication, supplied as a string.}

\item{\code{auth_value}}{Value to use for authentication, supplied as a string.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-set_session_type"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-set_session_type}{}}}
\subsection{Method \code{set_session_type()}}{
Set the session type of the console (e.g., "python", "groovy", etc.). The session type must be supported on the server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$set_session_type(session_type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session_type}}{Desired language of the console. "python", "groovy", etc.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-use_tls"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-use_tls}{}}}
\subsection{Method \code{use_tls()}}{
Use the TLS protocol in authentication and subsequent communication.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$use_tls(root_certs = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{root_certs}}{Optional PEM-encoded certificate root for server connections. Defaults to system defaults.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-add_int_option"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-add_int_option}{}}}
\subsection{Method \code{add_int_option()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$add_int_option(opt, val)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-add_string_option"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-add_string_option}{}}}
\subsection{Method \code{add_string_option()}}{
Adds a string-valued option for the configuration of the underlying gRPC channels.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$add_string_option(opt, val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{opt}}{The option key.}

\item{\code{val}}{The option valiue.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-add_extra_header"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-add_extra_header}{}}}
\subsection{Method \code{add_extra_header()}}{
Adds an extra header with a constant name and value to be sent with every outgoing server request.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$add_extra_header(header_name, header_value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{header_name}}{The header name}

\item{\code{header_value}}{The header value}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientOptions-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ClientOptions-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientOptions$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
