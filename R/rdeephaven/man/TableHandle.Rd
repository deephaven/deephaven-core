% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_handle_wrapper.R
\docType{class}
\name{TableHandle}
\alias{TableHandle}
\title{Deephaven TableHandles}
\description{
Deephaven TableHandles are references to tables living on a Deephaven server. They provide an
interface for interacting with tables on the server.
}
\examples{

# connect to the Deephaven server running on "localhost:10000" using anonymous 'default' authentication
client_options <- ClientOptions$new()
client <- Client$new(target="localhost:10000", client_options=client_options)

# open a table that already exists on the server
new_table_handle1 <- client$open_table("table_on_the_server")

# convert the Deephaven table to an R data frame
new_data_frame <- new_table_handle1$to_data_frame()

# modify new data frame in R
new_data_frame$New_Int_Col <- c(1, 2, 3, 4, 5)
new_data_frame$New_String_Col <- c("I", "am", "a", "string", "column")

# push new data frame to the server and name it "new_table"
new_table_handle2 <- client$import_table(new_data_frame)
new_table_handle2$bind_to_variable("new_table")
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TableHandle-new}{\code{TableHandle$new()}}
\item \href{#method-TableHandle-is_static}{\code{TableHandle$is_static()}}
\item \href{#method-TableHandle-nrow}{\code{TableHandle$nrow()}}
\item \href{#method-TableHandle-bind_to_variable}{\code{TableHandle$bind_to_variable()}}
\item \href{#method-TableHandle-to_arrow_record_batch_stream_reader}{\code{TableHandle$to_arrow_record_batch_stream_reader()}}
\item \href{#method-TableHandle-to_arrow_table}{\code{TableHandle$to_arrow_table()}}
\item \href{#method-TableHandle-to_tibble}{\code{TableHandle$to_tibble()}}
\item \href{#method-TableHandle-to_data_frame}{\code{TableHandle$to_data_frame()}}
\item \href{#method-TableHandle-clone}{\code{TableHandle$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-new"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$new(table_handle)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-is_static"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-is_static}{}}}
\subsection{Method \code{is_static()}}{
Whether the table referenced by this TableHandle is static or not.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$is_static()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if the table is static, or FALSE if the table is ticking.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-nrow"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-nrow}{}}}
\subsection{Method \code{nrow()}}{
Number of rows in the table referenced by this TableHandle, currently only implemented for static tables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$nrow()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The number of rows in the table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-bind_to_variable"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-bind_to_variable}{}}}
\subsection{Method \code{bind_to_variable()}}{
Binds the table referenced by this TableHandle to a variable on the server,
enabling it to be accessed by that name from any Deephaven API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$bind_to_variable(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name for this table on the server.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_arrow_record_batch_stream_reader"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_arrow_record_batch_stream_reader}{}}}
\subsection{Method \code{to_arrow_record_batch_stream_reader()}}{
Imports the table referenced by this TableHandle into an Arrow RecordBatchStreamReader.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_arrow_record_batch_stream_reader()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A RecordBatchStreamReader containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_arrow_table"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_arrow_table}{}}}
\subsection{Method \code{to_arrow_table()}}{
Imports the table referenced by this TableHandle into an Arrow Table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_arrow_table()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Table containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_tibble}{}}}
\subsection{Method \code{to_tibble()}}{
Imports the table referenced by this TableHandle into a dplyr Tibble.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_tibble()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Tibble containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_data_frame}{}}}
\subsection{Method \code{to_data_frame()}}{
Imports the table referenced by this TableHandle into an R Data Frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_data_frame()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Data Frame containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
