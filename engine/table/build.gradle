plugins {
    id 'java-library'
    id 'io.deephaven.project.register'
    id 'me.champeau.jmh' version '0.6.7'
}

description 'Engine Table: Implementation and closely-coupled utilities'

sourceSets {
    main {
        resources {
            srcDir 'groovy'
            include 'core/*.groovy'
        }
        resources {
            srcDir 'python'
            include 'core/*.py'
        }
        resources {
            srcDir 'src/main/resources'
            include '**'
        }
    }
}

configurations {
    // Ensure jmh picks up the same dependencies as tests
    jmhImplementation.extendsFrom testImplementation
    jmhRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    api project(':Util')
    api project(':TableLogger')
    api project(':engine-stringset')
    api project(':engine-base')
    api project(':engine-context')
    api project(':deephaven-jpy-ext')
    api project(':hotspot')
    api project(':IO')

    implementation project(':DHProcess')
    implementation project(':engine-function')
    implementation project(':engine-tuple')
    implementation project(':Configuration')
    implementation project(':log-factory')
    implementation project(':Stats')
    implementation project(':Net')
    implementation project(':FishUtil')

    implementation 'com.github.f4b6a3:uuid-creator:5.2.0'
    implementation 'com.tdunning:t-digest:3.2'
    implementation 'com.squareup:javapoet:1.13.0'

    implementation project(':plugin')
    implementation depCommonsLang3
    Classpaths.inheritCommonsText(project, 'implementation')

    Classpaths.inheritGroovy(project, 'groovy', 'implementation')
    Classpaths.inheritGroovy(project, 'groovy-json', 'implementation')
    Classpaths.inheritJavaParser(project, 'implementation')
    Classpaths.inheritAutoService(project)

    Classpaths.inheritImmutables(project)

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    runtimeOnly project(':engine-tuplesource')

    Classpaths.inheritGuava(project)

    testImplementation TestTools.projectDependency(project, 'Util')
    testImplementation TestTools.projectDependency(project, 'engine-chunk')
    testImplementation TestTools.projectDependency(project, 'Numerics')
    testImplementation TestTools.projectDependency(project, 'engine-context')
    testImplementation project(':base-test-utils')
    testImplementation project(':engine-rowset-test-utils')
    testImplementation project(':engine-test-utils')
    testImplementation project(':Base')
    testImplementation project(':BenchmarkSupport')
    testImplementation project(':extensions-csv')
    testImplementation project(':extensions-parquet-table')
    testImplementation project(':Numerics')

    Classpaths.inheritJUnitClassic(project, 'testImplementation')

    Classpaths.inheritJUnitPlatform(project)
    Classpaths.inheritAssertJ(project)

    testRuntimeOnly project(':log-to-slf4j'),
            project(path: ':configs'),
            project(path: ':test-configs')
    Classpaths.inheritSlf4j(project, 'slf4j-simple', 'testRuntimeOnly')
}

spotless {
    java {
        targetExclude(
                '**/generated/**',
                '**/*Boolean*.java',
                '**/*Byte*.java',
                '**/*Char*.java',
                '**/*Short*.java',
                '**/*Int*.java',
                '**/*Long*.java',
                '**/*Float*.java',
                '**/*Double*.java',
                '**/*Object*.java',
                '**/*StateManager.java',
                '**/incagg/gen/*.java',
                '**/incopenagg/gen/*.java',
                '**/staticagg/gen/*.java',
                '**/staticopenagg/gen/*.java',
                '**/naturaljoin/typed/staticopen/gen/*.java',
                '**/naturaljoin/typed/incopen/gen/*.java',
                '**/naturaljoin/typed/rightincopen/gen/*.java',
                '**/asofjoin/typed/rightincopen/gen/*.java',
                '**/asofjoin/typed/staticopen/gen/*.java',
                '**/updateby/hashing/typed/open/gen/*.java',
                'src/main/java/io/deephaven/engine/table/impl/SymbolTableCombiner.java',
                'src/main/java/io/deephaven/libs/GroovyStaticImports.java',
                'src/test/java/**/*Sample.java'
        )
    }
}

test {
    maxParallelForks = Integer.parseInt(findProperty('maxParallelForks') as String ?: '1')
    forkEvery = Integer.parseInt(findProperty('forkEvery') as String ?: '1')
    //  For now, if you apply @Category(ParallelTest.class) to tests which are not huge CPU/RAM hogs, you can get parallelism
    //  If you have CPU/RAM-heavy tasks that you don't want gumming up :engine-table:test runs, apply @Category(SerialTest.class) instead
    //  (note that the above only works for junit 4 tests; see the documentation on SerialTest class and others for porting instructions)

    def props = project.properties.subMap(["jpy.pythonLib", "jpy.jpyLib", "jpy.jdlLib"])
    systemProperties props
    systemProperty 'ModelFileGenerator.testSource', layout.projectDirectory.dir('src/test/java/').toString()
}

// Adds a custom testParallel task which is allowed to run tests in parallel.
// Add @Category(ParallelTest.class) to have your tests run in parallel
// Note: Supports JUnit4 or greater only (you use @Test annotations to mark test methods).

TestTools.addEngineParallelTest(project)
TestTools.addEngineSerialTest(project)
TestTools.addEngineOutOfBandTest(project)

def maxHeapSize = findProperty('maxHeapSize') as String ?: '6g'

tasks.testParallel.maxHeapSize = maxHeapSize
tasks.testSerial.maxHeapSize = maxHeapSize
tasks.testOutOfBand.maxHeapSize = maxHeapSize
tasks.test.maxHeapSize = maxHeapSize

jmh {
    jmhVersion = '1.35'
}

// No need to assemble the jar by default on build
// assemble.dependsOn(jmhJar)
check.dependsOn(jmhClasses)
